<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FlyTeng</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://bestflyteng.github.io/atom.xml" rel="self"/>
  
  <link href="https://bestflyteng.github.io/"/>
  <updated>2025-06-14T06:18:12.013Z</updated>
  <id>https://bestflyteng.github.io/</id>
  
  <author>
    <name>FlyTeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>路由交换技术考试</title>
    <link href="https://bestflyteng.github.io/posts/ef817dbb/"/>
    <id>https://bestflyteng.github.io/posts/ef817dbb/</id>
    <published>2025-06-06T09:18:18.000Z</published>
    <updated>2025-06-14T06:18:12.013Z</updated>
    
    <content type="html"><![CDATA[          <style>              #best-form {                  width: 80%;                  text-align: center;              }              #best-form .inp {                  width: 100%;                  padding: 1em 0.5em;                  margin: 0 0 1em 0;                  border: 0;                  outline: none;                  border-bottom: 2px solid #ccc;                  transition: ease .5s;              }              #best-form .inp:focus {                  border: 0;                  border-bottom: 2px solid orange;              }              #best-form input[type='submit'] {                  font-size: 1.5em;                  background: orange;                  padding: 0.2em 0.5em;                  color: white;                  border-radius: 1em;                  cursor: pointer;                  border: 0;              }          </style>          <form id="best-form">              <h2>刷新页面即可恢复加密</h2>              <input class="inp" type="text" id="best-name" placeholder="输入你的姓名">              <input class="inp" type="password" id="best-username" placeholder="输入提供的账号">              <input class="inp" type="password" id="best-password" placeholder="输入提供的密码">              <input type="submit" value="验证">          </form>          <script>              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);              document.querySelector('#best-form').addEventListener('submit', async function (e) {                e.preventDefault();                const name = this['best-name'].value;                const username = this['best-username'].value;                const password = this['best-password'].value;                const users = [{"name":"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae","post":["48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002","4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b"],"result":"","account":"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022","salt":"768716cc5ebd8b89ee7d46d1cf96d763"},{"name":"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a","post":["48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002"],"result":"e72a5e3fccbd9e4a0d376d84152cf35b5b2796b230f8bf2077e308cff4d432ae93b276776c4bae6d3cc95a2a6f69b83b701745cb7ea426a0590ea2d5cd5c81cf3184f4f71b318073270c45b34dd8be86692d23d9ce8a4a5ac626edbf1fc86bfd49fdcedf4c586f59833a2dcacb23d3d10c73c1b609497fc889c0b783c0346773dda707f714bdde9f8f60bfcbd128b84969f0343a9054d16d1cad9c7ac51337b3cbe36e97e05485ee835a84cc4cc8b5d7fc4ec61350f08e24e0caab528a1275d81c1fa49339bf0ea8a4666b5150bd7a9c9b7e9f8f1babe79c4bc210e67a20a90a996220ad781b262e25bb30cc84e12c389a1393290f996dc5aa11d6493760ef4dbeffedab33daf97533f969c7628ac94882e4d3075d2a9c127ad442f8c4437239d95646f907235ffc97c5b42dedfce37a94ace7599bc76140172218ebbdc25cd5a44eb3148f539296407e05875ebae015084c8b0ac5d721b4101899410078531a242dde1c32d32e74353c5d2b96ae8ad249936b2222ad91a8fab5deadd9007ba8d10ca4da7d52d8fcb63c9b934910ab81eedb1b306eaa1d0cdf1f7a33fbe7edadb652d592bcf09c166b2086b70395858bc26ea5896bee8b051aa85859829b993b775694ccb8547d1a82dc241ffa9bf90fe357528e8bf9ccad673927fcb858b6a6ec1a55f6b00a0f33d4d923ddae6564204c72125c23873724a9623e2ebb072af8b4663724ba75e2e8661e07d5f3c94bad20f18cbcfc87f198cffcc2325c7dc5e81cf65c117cb63218bee1cc695667773d5e50d6a011d621373711c7bd0117c0eaf603469b6f23c2adc06ae7073b8dc00106a90987896d35b11b77cac3a712a92f1217d398eb90bf5768935225bf04e183242b77ba2ce50866ef42567e6dd4e0d56bdc65abad45d4b10cadfb8cfee959b005f1e69571b78651254d161f4f24ea813064a47bfa2cff64e9ed01c76396c16a6a676398c648f66a025dcb4c0c93aec0daecf6fd75100094839490ee3fbcf5b7da9b70520782adf033f501da243f81255267984cc53f9fb8c51d42875e23e0944583f189df844c3362492d211d7b07ee7d93c7f54c4e42aabae1cafe49228e0b90e5f317ba30df485244812d87b17154db566e4b08327b284a633ea6795f32d44d2bc03ede05053a70f0953ffd1e8aca7463869761d2fc1360f0443c0258ba4938b7e970210d558cad0ffeb38f8394b361f04f9af90825dd761ec1117caa6b213680767b6ece761f1ccee0dcb5d75f6a2da5d9a561e43328f00678ec4dc1ae2350e4c689ec0f85fab31ee510b88f279596446aa7108254895ab782d2725eb574f619e4814fe511653d080c81b12ab230e85bb1db1b6ab28a674b7badfa5861d5ec4f165523f6b27a64cc603f6d9cefe04a1920b57aa0cb1081e18234ae66fa17dfbe679b9dc00a685e1ae86f03903c6534cdb365f8b7dd5e5bd7efe23685592fa866fc73af4f90a83d7a8270e5c5dabb5214fd3d777a5d076253d518c9743e34502df8ec096d1f0ddc8fd63a3bc7b03a931afdf79d3d4c8414a30b3222cb7fe70e9af760f570c574bd7213814068696aa76c0fcbafb5a92ac76b7aae1627b9b2121096d40aa573c5d6f565c8836c3c53234f63ec6cd3971b539fdc305bb60859c6660fd97ec0e86e04f4512aa8a128921c67d7f32380bec6abb1817a9804e632f4c59a1c4e6348b74c27f460a8c9251263788f6a569259cee1068cac6fe3ebe93fbc7e04321bd476b68d6f2f8b69eee127ec71551bbe015b326d3bfe987645f7f75bea516a249e724e80266ecde332701f4dfc099bae15f1081644d003c2093bf3e0cccce9fdd54bfb81ba20281f6f5056ebad4d47fbf6db09367f77ca6c1b301eddda6878c682f463e12a3489e34d65dc3fff01aeb3490491d2d0201ecb1713fc77357492ddb9688b0d1c22a8923b2b523149a877dbc66878781a178cb20054b9ef95f148ed837fa89ede6f7cc1e1a4ff15e365a281fb03c77219d561ddd5af0d14076e453b9a71612e41c71134b6370f0dbcf7d79a50495c466b29b149655d8b331f8c9fd049f9927b8c703ecb21089fdd25b03da24c870434b39576a833ffa8de19b5bbc7e91d1d50734bdfea46fc6951d81c6c5be519b9ef3c7437cebb02dd8cd822c68729212f050dc8b69c8ea285c1499575679bbe58cc6424be75cbfa9a751125253abe055a8dfdfa4ff3bad8f8c60dd8e905fcfdedd9ad2d72ecb09888bde8f4c5bfdbcf4f853e96e75aebfeffe0ca1d1facf633139224495dce15a3db878c114c840164c452f11187114f1d5e9cc60473e6a6038518406fb1265867884aba553b7e6b8a43f2170683e45966da2d5f5412cee82da5441515e84352c6e012943cf3bd7c6ae4ef6d413b77c55b640718256d4ae5517a0d6a4ff1acae9604597887da583063b84b3d3381b0ce13e530a4a5da0486d8ec28b85198d24bb5ca1cbe128bfaeb916003e9525207a03d889bf3de50fde5f62dcdfc26fd85fe643f08aaf425de7df0a8adbece2d7745c416f40f198a54802e62b93943b2d3b962a4877a3c10092b3d26509c29e5035aa65828b97433aa08fd7717a6a4b948dce97f951508c6a3b5304c194cadc5661d513eeb9642662edf1f6c9523bf013216550912da8600b7a326d33650f44b23dd8b048fc0ac23087ed6f86af8b57e08d85744d082b8cfa0ffe55157273470c6a4ba02d8d83e7dbc0fc0b47feaa2dfea4d342fe2ce1fb19ea4c3412cafb199be43738ebc196e0c45862f459fe8e689c14973a18a40478ecf4b5f20409e5cc24272decb18e566e873d326515d59459280e2cde816f6f03c909442a465d84e62f0c1f42fdf0cb01e82860960cefbbbb5e6fda00b88724d458d840774549947ae46e7e8476705ad2e4d4444163fff4d059cdb4c3f610fac207cffb5b022c7b419661f51484d37e387daec7faf92e7943c707515a2919e8fe6cb6ad5c399206eb34f55e9a6b7953ac8e7c46949db9f6ac69d75329ce5526c8cf17cda6bc41c48b532b8e9705fbf5832bbe858ae7fe0c6eb8d05ff0e616bc277fe39c527cb3cce78b3ab6e29e8fa5f3bfd104afc6b209fbaf86088caf6800509d3527deead8b2b980e5dd304a2d3338e27bbeaa5b7cb256a5d1036c37a677b3de6ea050802e86f8e4ce5a213a02a6e195670a9173104f3d5754719da379b9d2ccef31e97e24cfa9da83c5e7a26dfa443ef6896dbb36002e32789555bc867d975769f0ca846a65d240414c1fa32d84cb973de3380342dcadd03f1f00d3f747c53c5d5273f6595d5e56a18c73a83b2cc39d2a3bac666047195ff533fe2c316204159243abfcd6e64ae164a772c23d17b6c8dd547fa0c1b1ec035a34ffdcac04fae9c2a42d512ce1802fe452d95ebba028f063cd82fd65605372fb2294a97758e078b5c982983e44a45e672f1e06d0dcbc6d37a24a5a14575fa5f6cf2ed35c57c2588c2657ebb00bcc90362f99fb00ee7fd9df055b81c91a42d18016a269d4ebb8b20e1d35fc7656d2ad6ee87f5b665ca9b47b58de94d074e99964c8d46d71759b5391287d729031f9485df43931bddbd760e2754ae2f48271061823053d98eadbd393c5ff6c09145effebd392e22082abc43272979a0f980c1d22a3d1fb7eb1152bdbeabaa5bbf0a2419135b3e89ca250d8b1c492eccd05c8a8c99728c7b0e6e0c208b2cceeacbab23cc1e4cb6d3ae3ee9eebdfc606017c3ee4c119fbb965e31118c838d6bef0bdf0df796d298a5e3e699b12dfa18fae043d6bd10f3d24c3e83d683f39bfd9b646c837d33115fb907fa98ced44f3864d9c7ee9655257fd4129e3e01a3ba754223632c5537a5e0a42cf44078d290d66db2ef0db34e257847b3c189aaed24b02e84489b5b7d38018b73e2fd42a7ce59fd5b2bbc91e054d86f12815b8821a70140d95b6494bd623e879aa6cdb461f2cde2e277649a7bf29eacb43c3daf735c0cc116b6ba97eb5f154244520a590182d7f458255dc1f2383476ce638f8be343fe1b8e122bc24b03ece1e7b52b255cf4f65fcb329530566f8a6123c449e0edd8651ed8f1e246e533c64c8c020a2797cd5a58f18b8ee61312e5e0287f7e5ceecebf098b2c52a3a54c6f5cebb66b48da880a2faf46d70680885df0da1b157120f44142f12e0764c9ba463a5c1dd61984f1e66b550fbc9e1f5918b92e4d717333dd8ddc553f2fed99368ab9b5d0054960d3a818b770c88d3d11bcea381d2c2ae19d7a1cd76a150fd33f8ae037d4e3e6743e170b7ffa3b6cc15df4acb95b3d628e388e91e42d223074d17a221d3b9fb86e57050cd150b081633ebdf0ecf1b7aad312dcca6c5313e625b5f3fc6d157dffc0f54a1d4d7abfd5eba888b00b36de483460225db4f05663ba25cf5556170bacc27a70c0f58f922a500b5b98a91f23b27dfce18c7a203789e2870d087283aa13671f83489a13059d68368bd0cc5be9e45c1cc55e9588956d4fd6048338fe07d6ffb5511bd81287335edfdd0cf252d425966c001753620558d38565a92eaf1d2c4e83a5980476cc9a9922d80a4690d3b41c82845d1999c90da2a7eb7918b4bf806e341fa5da9a1f395a48e70d3582a637b6bfc5d98c13ae389da9dc00bd3a3a86b59f4304fe445f95da08db86169c1d1bc9c76cd4b6255fa7b9fb0e122345f3a39fa952fb1be402afe06c2ad74ad61a2a3c6b903ec083338d217a29b335ca8640b06dbc996a1675a622a29b7bfd4988c10cfadfe81d990f21b99a1d5a24becd43a1b642ae2cfd7855924352aad92d89e2bec490f2adaefecb8c1f5850ce3b44d7904997e038ff5a04190dcc3c5b69d01ddeec9f05cf7103c4ec2b234cc80ce51bb249602b9f7f4f64cc11102a197a2801392428a22b1b23cb57d9f2c82f68f6764dacb262a34f4e01f59db00eb19341396d4683399048a115d610b7666f134939272e5c709b46d3eca6572620d68fdb200ec493246204ff49583880effca097c377c001383307fc1e911661eff14b1954b677856e8c97c6f1d6b83ad6a9abf1504f31abfd65581c0a3c656f6fe6d91cf3e12f06dbdc5d5c7a79d0a087f59790d0def3aa3627616c73553d756292ddabc1cb58537e3e6beaed24511d43ddaa5432bd436bbc525cac1c248d54010e1c97d1fbd70393784d83ce99687a0aa8b6d37ba8457768ac97507b6bca2447040aae1842f168b2a1b51212c866739fe17708598b260823f3c41260291ecf38834a2c072942b7170e2694037f6559ca88bcc5fff54e9ae4ceff26631c42dc19fc7552182eeb9218eab7525c884ad6e035efafbfd239fdd3d2846834e9f12428f20293d6624da48ad5fc8fb9169ce0fc0ed5e4ff1d44297e4fb97bb8eacb44d9fc1f81d1a93944959523cc8577462f68334fad86682e39c887392c19377d6a5a1659e0da453656883982452c1bc3c503a843e0a032b2ed2d08c474ba8519476acfa8ddcf04a19678bcf494cff5b0e9b924a3c36a806f866bd02c34d6f82944c7b94832066c65b2f5cf7a2d25a434e3d26b29f596aeddcced140c33c4be8275bf5588dcfc5af4ab668b085f6909fd010d89b7fcaa5bd7c888fb5f4e61638241a0da81aad59812128143a18bbf1d16263049d2c60c75e13a8526cce54aabb1d79bd8df3d30bb6b22451bedeb9189616052cc29818873ea7567a6e6f83bd0dd87c0cd7a37a4f7e6fb24bbcdce03dda1e9faa110feeb45e2c28924c4d577cd9ec14c46094d1866d3ecac18e71fca96cf829a476966b4f7d92a1d5c067c4e12cc0360149576c97760272981190a19e9830d8d06eabdc8f0e6d5e4e683aa64770996bfafea2b548769029a9023ed2ff77744831284d26263aa9c7de0a8a626516d41b9dca00fdfee78c6ca998d92ea526a03f150e0d7b0fdaea2841ad2aef23cda2a761246808d876f24f31aa2664a826d8aac7f5cac4fab7bff61c4f619f0e2d1adf692866830643400475fbea0c8f926f3fd5d4752261685e1e4ec1d3df30c3242f4ec5d781651fad4f09e104210b67db95651af83259a91d90689c645e12c94395b512eb51b41b461dd9de0d9ae88d018e9b91a6728c96d3d450f772bdfcd424a68e9d4c4e2e94a4dc18ec8cd6c43483c178e8da364f084a643662bdb7bebea3bac999e30f380e043e7f516547e0106dee68e7fd95ce6f999425fb8f5d9be2ec5cb8f2e228b042ba4ee49bcf15bdc15d58d5fe755fc24b6fcda006c75f74de4a0e9987e6e90671aa63e88c490a1dce5f71b8ff5e10bae174459cb7f6d048ce0823dec8471613bb158e42a9dc60af4233690c17de99da55b09922725aec557e3a5305bf73a7dca421954665221f9daca5933b834de529cb5f381238f8274bd79bfdde4401d82379bd320f03c6770723397476d8cf2bc271019edfa824b6781c93c104a97fab1c7ae638c311cb91f3a8ff0a97f67d1a4efff76046d35961ac1170062a605c7f79397cbe8db09da24a73259b5b751366a46067e25f4d26b21ff7a6e001c4858089383830a60080efefa39b5e122d5e6653a6f8a27851d061055a0f58ecf503a11e5d31d612fab077bf1965a1947fb7e1fb2ef149828cd5baf84dafc214332482806022f565aa8656844c9e87541142de7aa16ab56f416668e484d35eb8a6648c914df5a75afb64c1d418a841d08887a441de517875c0dd5fdaf49bd82ff63d53ce49636b91551e0ccd20c489c8b5da3f5136650ea6ea308ce37c8bebb22c750fb11c422edc451121eb8ebf3c98d2b2ea9ded49a33c9129dc9981de25734d782bf18dbb5d4c70e8ff56c0ed322b2bdcae2e838bc814c9696bc3e8af4d399a69a65555e6607997aed766afc79c0c1d1d352168875d405243c023ad39c1fc031aece40c6a06d4cf7b9f5e57893749d0626613ca0e793929a45f31982ce398a65ac993ed49cdc060d0245f39415f17ad876d8087eec969dc4b4cd2cd4f9049b514cc614f756135ea17422bb01102da11752dfa0718cda5c729fdb2e60730e9a1112053df1ddeb936d5edcb7784ebbc1f6355dde09fd479b72e3ae8812844d2680639edcdb281c643b3747861b527425202ab10f55f8220359c8a43c86ed30a95dad75b8825f5ce3e36960b6e8a74bf798b68bfcb1ee64c1af36b834ddce56e4092e28c6842b643d9f7bd2c5f9678b3b948571a4e3dcac6b12a002186a91c0884f4a910ea1449295f1866a63a82872274ae52ccf1666882a67c45bbc91c5794f18bf72c3a2ac5f5010ad3916954a2554bdd2a38837aa22af6cc59b8e7d7b55edcaae940d50c8413014a1248b5eb152f510e3c28474c6e3ae3d22ab66835bf69595620674afac519da03bede43882065435445d19d12a571290980829cec4984dcb179477cc283fa290341af435a54a729920c6684e10eadfd3cedef3110329cf0c78cdca28bc6a159ecb0ea73f3dd710cae9b5afa863596777ba7c3ebf4eba51dff3df3f79eb6c356ecdeac22a12fc56505acbbaa4736d03298cc9c1c41f9e5663e23a02a3e1df4dc3007960aa639402bc81fe7bd77f7884c56668718ced41d5839b0379a42f0528b0269ebf0522c502489d20a89383e905ba726f49394d40175650174d8603dfc68a093228f1e84b3ddbe2eabd61579364644995a126e1797d6efa483db9fae6761bb0e7df430f3bdd193de53127d603d0d37fb159b18130258393a0889cb110f20d260ab110d42715926dca8ec04eb1684aad45269f5f7bed56b1b07e1a651183f2152f2511b5d890a0ba348b7284e5467c078a1bf802714232c1b4ef5de34b5d3ceb40d6b1ef852c2c92c08c9f90324cdfdf59dd821f95c720ef0648f9d2b8a6b0efc7c43082058289ef6538248b571e32c740f1151b152982d2e00bb2a09ddb6e4f617dcebcb8b6d04abb69495f34c28cc890117097815c6fa1b9537381bd249e956461ef5d22ba4dd1ef2e74d1ac48f4217a0811736d562c9447576a2a18c5615b83ecd2eb1574e824629174d70eae223634dcc1341698674289463f374699c426d1b34faf3ea99964cc41038e475f177887123a584dc5d5630d17473f66a360faa85d7df8db94399447b327cf3d4f91daf5914d5d1939e1f923b24133ab8d62a4187e5c702073ba70477956f9896dfa789941dceccfad9c656002f5f8d2fa04d6a1981934437bd18810bdf1b1f69a3d677ae31ab040e7703656fb1c4bc6d0a1696f3c7d2fa7f0b8985bf7253942647315366f507e66e969b28393801d3a5d3f5c8e1ca8b8f7700e3884e76a5daf19983a06eabcf25b64801d1e57b58c351151b1b4fde1a2b5131bb1ab1e9cbd08896b8fa791c69b93b8029646d4104667da8b1133296075d9dbe526c8ebc951a7887698f6c6901008170f2c40a3e0f09b22082ccf0d9c7b75d3bafac40120e59bdc677e564d38fecb17cc00ae9a3362f8056999a61730d17efc6e19ca259f128348960792be848fcce1727ed4783c4f1711ec6a121ed3ba83855eacd98df659ccf3a484bfff52156507049446d70ddeefb70242a582d8b0040c3a35abc85d2153863f7a13220149ce8645133aa32f94688413b2202eec3d93950a4e3534238e342056b889deb79b2044c0af9a1aaf3908bc09c495f0a2bb75a48989f734f70afe95188693ed2144609767dd1ecba2f0a7bd0c8a0030801338899d6f6280f3d871b983915374a30f8083971d750ad393ac19c01affe2cfd3cfa2ae7f199dc1dd320f9e47b492a826b322dcea5b29193ca846a4c499191fe1133bbaa24a51f82d82c551a8a4abccfa8c9c83536562ca9c70a05a24bb95977987c417c1ab5c5f6df462ebf62a0fe97ce68abdea5984945c31f00674f65929511a72ed4a5168c7ee5f32c977a480c7d32f193b481ee956874b75885cfebdb2f837ac6b69c1712bb2c70679fc2ae6b816ccf473549772be8760cc47e5ad8bfa23a0f7cb361be709658c94e24f809b68f4516b8769438d80ec80734fdecfaf92c8b39b2a1a2d09f7439c1449c629686049c59b729fcac29168dac02009059fa2e9103612d08607f549fd5b07566ad0777abcf5b0f816ef78de6ef5d2497bb1234801c707e1c3b390e53fd5521cd54fed6c614c1bf057ed29a383ec17a8a304daa149e563adb04fb241f24dd6bd1ec652445c70e293665f31f2b68ecedfedc223f66d895d0c69a57dcaa127abdc0d9d4d00ac6a5e7591457c4c27b307865ea441950bddbb62693ec2296a9acaa8d470a8b846f42963f07b5ae0876a29461871503a9c7842deb29e98c5d6ce69d89fbdbc485eb48d76fb78aeeac83f071a322158f5392a359e27b3527c1d96e9bb7cfdd732da143a5f940221353944de371d2a31f8b66cdeee63bd26b1b4449bd6ea7ecb90d943ea830dff3b192ef3ed5477476d9d75bf4c67e47484fbccf386d4b675b10d4c7b93961c605bd33d472fb88352cfa32c04a7e0df93b76b13ca7f597bd11c5840967fc2620696e08384d7035b48bfbb27368f7590a432b041280a742a2c55bcb291997564a58be1991ec9f1700d571bff05de7e1166201356bd674b6759fb6cadde71667751da47ddcde2dc0720cb4715f773f5b4231730ed952dba18d0431a5987ffed6550d37037ec6a6efedee18c99fe3d768fb388a86e5fbf16cf8b1fe22ffc4e097ab9ecbc9433c7c1da2a38918752fcfc6d5e4d614a5e374667ab73cd81dde2dc8f06527155fbf5fbed29ed0a04ff8b89f14741f809f4babc70bec57d9e070cf18a3fc3f4d1bbe56bcc07d45a40f20ff7d9380ee47c6e24a8d18549dbca88f679ff6ff2a6825e277a85cc592d664fcc2b858806967387107d7c96639f0d1b822dca3fa8368425501cdb3760cd0dcb9438da1d6099bac1b69f6f71439cbe65acf68e69fc0e44f7dc2de12fe69890f9a8f6b21bc2b90de33776921c791105728eaa6f127be771758556829933aa012d9d7a4a55e86f305524637187bb66cf02f131400bc051dd184580b22287dbf6d2ecab39db3ce14926a63cd50a7a7ee9df422f0a098628d490ca1ba77ffd9e7e443f44c6a31fd92c2904e054a2bead88d0a1e856bfddae70653a7f2229d7169c2089781ee6e7f5a5a13d8575883b30c8c70fec3fc6b878f8645a04e82aae34901700b18297fb4e8696a34ae431262ce4c1cf3a8620446a41fd4708bff7f727f10e4314b2dbc160e75be10895e1653f3e12a2f0d4622428eaa7f84b7798e0510b748b5c7d9fd04f0d37b709742d9a54a1b7044afde459ca08f074de46eaaaa8765129011744e1ab080471b39c4bb7a83276989c05a41730ca988b5462f1582dadfe15ac0e253e0c651a43c302ac398d24eb1eb43a32ea251c69e58f54acfc826442661faac7de1fa1bd26a515e022772f26a1c39ecc6d06bc25b8c34e43299874c6c5aabf48429190a9e5fd9d46605f78fba71cfd8ee4098618b9832a5e9bb0dda530ac6c33fb0346da01d26ec5c7e63648ab7d96160c5198638c98bf5e83ddb07a1cceafc0baa241a4ea9b01f945b105218d25cf16394360310f935fd06c20733dcca72bb0020b6d46ca4e16d10c2a90e8dc5e7abc0c669309236e66a197dc23ab2352a1e041057231d8b889a5ba3343e7294d85e4ee8700b555b1d17a58bb847102b3a4dae87a93a6397a689b261af271a3c8e84f3837f715b4cc2b201666be3d9af7180dbdc8a7bdf79e0691f1336e4a7a3c24734353ac13f8cf4fd74333ba22938e2fd3fe3d6263b12ce3381e66bd796e1a0340b18b3f4c65be5a9b068c66e0786ea96bc30b409096fef85bb7c8f9c9052d2ef82e194e22a44400dfbfea5290e5ce29b2122525c8b34ba6a0bcbf9ec207966138f2ab0ff0c03ce9b5dad95508d479b6c6621f85483ff2608ec22b017a56881650fb2b81537fb46e1bdcca5246b2e25af16f2c2ff29a014612e96c09f0934b0790b646e207e716979918d13d80062f6408e49746d573831f3fcb10d184edac44c781fa844f0cec4094c117362e4148f116913af936ada1a1aa739bcfecae0fb62c8544edc5cda8ca21e67eb91e96346c24c9922e1ad51bf38ffaf40a79a7b7d9bc393012db901c38c5db67c6e611edc7ff6f0b4bae2e262259c21b64ef1c3b03f527c325310ba731ad53de967db30dcc03a7d3abd0b4d81547cf5f48defdb7c0773a10a93e74f16c10fb3aba6898fde96e899b0dac1aa671bc0fe78e54e6182aa214936a66378ce6ddab839eea1b8069edde1567a7c853480b6c625b49efc86b4c1ebbcce38e1a93bec5681df98b0e1d64648e60ebc3ee956d3223511ae12512815636285efeb8ff76d7f80ba39078beeb2da5936f2c12d4226021f267cf76b084d71dd456d5aaff51634c00bb87fcb292d595a63f369e22a2483ff21a1ebdeeb5b2afa2b5b6b86193b000424f3f989a678b4efde7ea1b410623c41ff321ade420a6097ec0707be9b7dedf4ee6b4eab590d1da7ac78234e1e7809a917215feb9f87c1b1b84606361bb97bdfcb36e7dcbfa6301594423eab2127d8be620777dbfa4c0dd8e5e9702faed0d9527efa03cbd961da57f9004880847cc054ceff42b1bf09e1651037722b7d437edb509d5095a17790cb649cf87f5b6406d81d1a0762964daf7e47f17556283b628df82a67a5c7485609a909bb22bc9f7a71dea34d70b471197fe535baee06cc65cfaf1ecefca9f09e869582ea1637107dbbf52ae4ea9df6c782be353ff4f69434c22fd4491a8038c3e78002eff6bcb40fc458944cea1d2a070e9b608a2cdddcd80acf44d09eb9c524cb41479c17ab2aecfdb9f96bf22cfefd16d91007cc45ef569b3a851c14b46949aa413c1c1d276b7de666a3ced0ec7dab6f10aae2ae6b30ed8d4f1d85bd879605151d7c56f6753db6cd7297f9690763cd43efbe9ce079c2d9f0bb0610d2b344fb46ec3585a0264a890bf99422d82df1c98e5a4e3867774c5b5dc877611e196276684e5323c6b3d0e86eeec63673a5e0cc602c62eab374e2521a0ab2e760a9ad3a92b62255caf8355f3c43a4b472301da64180e8bd3a09f0945bee5ee08b0a793d175d1b8d6d4bdaf217cbbc2afb5c9a13af8a4d61ec9d90168c473f211d8d9440496771819aa3a9f617a598e9678d031efdf4475c1bfff2f232fe8adbfc57424f31aac5b0904fae83f5551b2e2ceb8be083277e7f53602737f928462dadb5300a22fb01ebb514048002cb7115eb666a2b70052eb34a86d21c632b7a67d96389e603dabb10dad5e58a210e0d901d27101ca2285c4ea607f10325bac208e12b5b7a68039403d75b7b5e6720eee628f15fbf711a47bc5b398b60e337c8ca02cd81367b2b757af9c9f0fa8d7ec605b6319cc703ae3f2da3d30111637941db1ae7e2f4c69fbe240f9c972704849c01eaf3bc3299ebddaad0867f08e0afb7c8841a492bb26591978d73581d0c0aff5cabb6dd9ec51a99c42f5172605abc36de83b55c23636372b04b1b9b82e7d15593a886cd1f96dc9a8f039f46c2b7299dc1cfc3866826d54706bcc6d5042da5e242ec2ac289cc4ddb22d5844a103150f4e7e074e3c4595507ed754ffce962371d90fb614098ddcd4e7561b4959a0e42eeec5deed1faad9d6263f26251b05f01daa9a73fa5d7947c8d02d0993f9e279f94fd60a5576e171bfa7c57092d9e4e9712eee617787b003ab496bfd4787e60cc98e0c1ab36d1293ae1e0ec323aa902c5bff28d63ac2580045960b9a4d1d06403de26c5c83c036699598d0f08e740e3986895afe90763b13860473011867f0b4d945231db9c4f30e4c2232be70ca4790005b4235f9cb460d0fc4d33a7159b74670bed6fddb7cb1d01d041da20a3909ad7ee1bd4795fba91686504ce44419fef0cd3066c7fc3c0eb6ddf971c0249ce2c03d2e6e4b9d0f9e3e0207a6dab8e276e0bcc3c121cf406038a80186c0afce215e215690f16587f4aadfd19a5f458bd62a056ffb834a9c17c6e36bdb007ec072946eb383fca5de36c94a48f121244d8896ef20438d04d744b4e552fb080886c2accfef36559727ed73dec7d6e8a9884cfcf9cf3b5cf0bfbf01447c0c77c4d5605d642db7293c1743db91d51e7e983b1a8b983d66138425f2f9769c0ced85f22b6a178e8d099769145a24d935edefe8f3bdbad236bcae0aa6c0829f99933a89bcc8f1054c9ef9b7084ce377b18197d7f3a76d56aaa5db006127afd07672b75ef63ec5347e818ade70e346732ee27df186cd2e412e3880d265ed3c5aef875c2c43842c37d1124ac196da5050e83e05d08b8d7c37f8d4c234bec7a526eaaab1aca86e7e31e1cb394af127496489dde0ff268e22a3370b5a61c9abcb94c5d098d692257c65270043f15d05426636bdbbba4b132388a796a7eb4b22ace5507ad092b5fefbcf920939c4c1178de3b48c4c0eff4e96058b4390643424e434dd572e1b613937e38bb8e6e756fbcfc81df16a1b13866b68dbf4574f1d22c801198873140e8b896361daf1f631590aee74d648fb20216948e84d3e49fe5a54ad3e795fa0023bdd5fdaf989bfdbc36b8992fb7ecda2db96038c137614672b3a9388edcf680d371029ebf665cb1d7df20b8b48d66d364aa9e088ff9e8a372cb01528d160c207da03c509aac01b46dabb4e22a3e0c896fe202a6319ba2fafb05c88f18e0bed8773988af358fe8be5d9bb250dd0ff29f8272f4a85b9a9be6b1f23ed56b38779d8d6f87f67d5e3aa5ab67c2aec0c77f883d968959ab35c8d4f1c50b3274cf97944cce4a03f5af2457222c215b46f2456dea7f03a9bacb63de035a9b62697da4fe8fb83deda231aea349f26206b1f81ba72adff7d17297d6a36530d8978f501a7b5adb52d74aa7b0e18603cc13b8815737fc92bba1ed898af3de4d2c71a8b89cf3aa453bffbd1646a522912e26836dca7260c0987c9ccd8772f8bbf011b1419b6f05a7063027dc9118675163ae57c6c32e94280507fed602cf2f854e8933bd11cc3fc825bdb166c782561e16485ca683d651dc0ccaac42ed557a1e6674233cfe548ac9d806c4c40c9a17edbcedf7e16723dece8c25715f1c85519389536c115e196e5ec2270476b898fa5639033e69f5cc29176dc604ad8626c9ba78d63912667ddd6f95a9f7faaeea9101bef34fafae9e8efb37ff2d4492d650b2066b8941f9c592a3dc594f23dacccffa2d13a1ef5b17842125f835b226770e969865fde2afa84e5067cc7c1535f92ac58dcb07be170c0440b0bba3fd69e14338cdf06f458d6ef45c0871f67edbdee62462c3f72a1b07885e058a6b6ac31c884b4f5d153d81008917fca634783a3e5dd7fa9cad0c0fcd7e45cf74c3fd78c5f68e26964d8065a84958168c5a10d6b7b9bc3e10714cff79ae4d68a9b105cb0e4c82de8e6b2dba58b70a0fc3b166a97ad3c5ef04f0a3cd2bd8dc9883eb5b69752af10d2d39c1bc53f3247b6fa9c1f7a48c1e46039618ce5f94a1c7083aa109be32c4c60908765fa19f6f816b8d9017b569687d3e260474f79055b618207e69e2ec02fba5817dbbff656e0b947c7995b1c98769ec14ed1700ffee003243e26292c87c4586dff058c86d72852f05947d9f96a870f93d2f727c913307676fb27678c17823a34e5df180b10c8d0bdff7638b24c39f5b81f86c9dbdf094ac47add0ecb4c96d0afff4e26c4d9f5324ca4c6d59082076f7c0b6c75a19dac6334b43e5d33a130f375e5adaa575b26e9360f7ae89e50f799911858c3f1dd0660e036d922946743b18ef2b2058bbba0e95061e278a52c5fac33f57541081114fbb0c506c0262e1e308c137373c708f9a667787988085855311cb4cda377b37a8157a6f5e04abee2aaf658df3ddf95aac3e9685998bd09d7740a213d8f98e299e038201ff7ca280bdf973cabb16bb82e9a4f29905aeb15c402212895c9ce3c6672b0cfcfb080016a4ec1463f8197549420074965c5f0db0e36f768add337e2bda9fa05ee97f6f8ad45ea160fabf4c6d2f3ea392f48aa29557234bb52724386bb80cf6a7a3987080889d7514c06b392992cc37191d55288c0cef00dd4144454c89538a9e2a1ad31d554265a1d19c30e8c1846592d661963cf2ae2959098078a899b7cef3ec5626719c9b06f254bafd840eceeb1d99e52b4e59632f57f484e8d3d49becbf5dc757f61c4c0f2d336ff11dff7b43d2af49be8c1c25e104aab35e4be1945afdffaf6cfaf9627f1eb3d7da084bbb4b8ff257e002f30d72269d44ba9dd482c498dcac6fe4f274eb817e0692e62ee4155caf9f2c7641369d5050524aba026f09c96ce7ce7c2c6ba4ef8747c44b576d36355501b378c33c99b0dfb07f3b2b5b8744bc7bbc063c11140f627c8198166967cf283e1b51b5622e3c142ca0828d4e4da9ac8cab7d4add5d977bced234791a86a04148bfcdbfc5e54b3cfd353b3d0ff011837c15f7015b9f1dfe5d076285f6ef6d9bdaa17cb4882b6d5b4d65406ee8afaf3caa36d621a324993fa08ee7b028368dd5f47104cefc18714c09259eb40000ff169679c706dba6be11cc661639389a1ea45da0db0644a9e8eaa473f5603ce35559946dfda6005cbe3b4e1112c8628fb4cb236e94af0187b109cf912248694407a69c109a66982c01df9c3869ca39975edd498d7f8c27cbf7cb7b7ef072eeecb88350e5d040d65dd28b1b912c1da3cbae044ed6dda44c2a0d85c14c2f35c4a279e26d65994cb4542e6bd78e6c2f00a73fa8071714919c5154fb33cbe9ff12a7614cc2e3ccd100b2762bac76967cadf1440ef865725708f48d65f50c40cd7eb21e067da1728940db57d99d3ee4850bf62bbc57d33293fbec5760e605faa2616323b02fab0221a4d109f8e7b7c4a1ccbff2c56781ed946160cff184846a2d7999d84badcf681efced8e56aa6f877fc59de13474a70a37dca6f085fb2125de842e98dc94775d9efe7874ada72654a5c47c7f793db65227d798935cbda29688ccefbd2564ef56baebc42c9dca20315e8f073565195c66b1eed764cd81febb8b9aa53f08af42ca0f87b56e48b9e1b208a1c1d7ce53e9b4b70a3bd2307b93c22710fa22e0b0993c251eac33aea813ff779bd3d58159f21cab8270261c39af5ed91e09b611fd146fbf210021b25a9f689caa586cdbe1ad26d7f79afbe1b2530ce228f81fe8dd85c8bba77cb1c752f9d06b11e87d7573fd5d749bde1facd4791936ac72818f32d053ba56ec88279dbe08b6c840a1936e3de5a4feae679e083c94ffbf988acb8f0518eb97e0f5d34482aabc02b72512631533f158581787564fcd6c2133cacf847dbd122af85ff297a23f8c634e29848d1bfa5da7dfdad10c20f0784c54549e3c68f10dc4f8f195fea4fe719bd5dc7886e072f5de6db2df7e83d346f9f4d4b6f5db05ee4ac6e99f40a40e735d7f4ff926d3f2fef12a38cd9b967a7b84ab537fc9c2d2151c63b8133b21d918d41b5c9846144fdb4b6e7f39894e21bbc0a13654acf6ba1e8c056f6814895aec2fdcbd04fd876c0e73854d367003986de9fdf55ac3f8cf4efceb2ebdb3b91dd1b45d0393a0a6832b0b64978334d29902d4029095aa20cd3002426480c6cc78837c11e26dd52075e6a3ca2b4353cd9eb155fee71873b9d760bcdbc361d93f6e7911bbf32962df2901923e477f909e142c239551eefa8a9a8677cc9280d072f4d4b9808b159adbe344610e445065eed801154e8d90c4e5fce0678039178e6316f30770778668be41dd59896f9a4a01d3858638de04cbf1c7d7b8bfb946cbaf7f870b8171b5befc7a9bef49e7ebbbe49c778f459f1a2fa781dd445bfc7577cc98fddf224124bd47b0a7d75f2f0884a3901b0cebee92f922bbb9d638d65098aa275978b04289045eef38bcaaaedc81a046f22c6948c08aef9ce9d3c4112d98a79ce9ab2f38fb694d90ddfae90f04bc0e976003a3f9458ca7299093ce1f6869d3c1d4c3591273b88678bc4ad68c55feefaaeaa505f5c2ff8ee01fb2286556da482a501594c6a9a8566fee8eda55548f3f70c238d04f7bcd12a04157e6404ae00bbf7c67456dd94bfe423e13b3f847f24efc989259e483c6d1c9c34a47b992b4250d0c6ea855adcae3946887a170806d4728c74c4212587f575eaadeab4be670f4843bd96278a859227f63e0a8a1a5c23b384d434b46a1f892901776d23ac5a35d8435868500ca1310814f691e9164d9c85da81f229a16a0733eeaf35a0699718c7acbf5f609091e2056d356aa5cefb596c2728a05a4ee91ac63b77e6df7dab96503fd00c8038130730e0909e3c25b71d6f962e7e5f919957a51d9aa44288b8206dfc4a417896365789ead8664518dc85a52e7db8ff392ea20c3177fda2626eba7d8c22203da0916fd58dcf5d4837520421b4f35a77d21de81b5a85ca06152ebff179ff5eb492356523493dd9a4d188c0691e492364ca71b094f0b1d5be8a5689751c4f0293babe82786d3503df950548b3d13a33679152997e4d28ecc32f9469f18943edbf4fd62cc9a521a22e9b5d2bdc6feacdb8d09626b04973a027ec2e7fc18d4d8d181b3aa8826796cde81d038796d0732af39aacde3aa075a0ae989264174678c2e7023ce5768684d7afed5d014084e8d4c257b2ff9e20ac7b957d68bee5cca52937eeae16b8e60add60c81de13a0155648bf6fa42224c1c1bd04c4680349b61f170b865e8af1f698d9cf9293243ce4042565916b76336b6053fe2709980ce52e4837d6ea59fcbaf792af71763ae40e73f140fb6339ad0ea724faceb4fa65e4a41cbf7133a0eb7d602d99eb4269acdbecdfbb78faaec3164ccc4429b822e18de01819e97c012c8519fe0e0788a350d07029fb1f20495236b65b2ba1fde52d56a45970eeef7219530ef411b167f06ddac567e9bd64b31b7537b726fc5ae87143cdec3e4c96d6c565c30f6dfa1ae1c1babd1cc9f9afcd13ffddd84bba19c9958b2a6b651dffc7eec3e6e47a0143e16285c39d6800b6a5d614d24ff95b26a4acb726bc84964076f78100415074b63d87cfa8b856c17b3c0f63d1c883ecf06e5e5287754fde153c0cb88ae680ead56a3a65d27388bd3590ff735fa6a383951a1f7793dea84de8d0cb292283a2e892ad6469d5cb9cee06bb00596a332fff7f538b6ac8cf2984d25e969629080d26fb6aeeb04667058b3c9da90f36be4a9f71cc1e0cf523d6be7d28226a9a00df6c43d3d2913ff13156016e9cd59ae8468a6bb4eb997d784a758e7f483a52d2a6993f11b3d279c09269de69053cbb030ede4a0dcd678ad9815eee2bbbb696139b54db185e3a24be01a8e8e09fd2ebcc926bac945dc5ed66cc7ab9504662f848b662b5b6ebff4ae4c2432d678f33d403df4c7961a4ec5d66daca385d58e4064bdf2670020befd18d5e5a02960f554ca4c0aa560ce66d6288bc8d255b8c94194ab963f4e5b056d6f8eedeae7eae0b474ae2eb33a7e1d0537f15f4ef4f226756cd536d5474312584626596f63797ac8e48796591e6ed4bf3aae8ce118d11df50a0008fb17098f30114b6f9f50b081d265cb166ae63f3126237cb5e1cf0faeacb078219a150e22c445cbc6d90630cb13314be9ea85459c22519adff56948c1e2d65e9d825247b603e7a8fdf03638e15991eb17d4946e96110a89924d2a135331b353f2ba33de07a3c53ec2570f85076a36a526fee94178a12fb3e591a61a8cbb2a8f25ba3d725a21a9c2eb7ad77270e86cc0e4e54c0147141af8f78b44560064966dc1f8a92d66667c205c8c25c4d06bc707ca275c994d8684ab923a8eeb431cc0353eed83dfcf36dc816950bd2ce5a606816c2a6528ae4c5c117b3f4110f950cadde046a196f28b141984a994cb901358777adc27c641e543634ab8e5e9d2c8aebfbfe6d074c1d83c58941576393ddf6e8b421e6157da66c3dbf0d2546a02dd83f6d6de8b5bb85bb41d294eeb57ed55586088183d680c6240912a34bd45da1bd488c4b7eebb7f1728f5813c9a7fb216cc5132d169c479477402bfca4122c350599897c1bfba7d045d4c0ab5b474440970538a6462ad6a8d7d57fa4387dc976c0d802c26f877bbc4af3e56cb76482484c363b917afb0ce88ff541c88449f14c7967f2d694117e623a89d64ec9e5b26e453e6a7b0149b39e50db5e2a7912257ddfb2b5f127caf2c2e7363f074a56a040f1aa5bd5b14b8da9d6841e52df3a5f9b5ab7d400c8fdda0665ace7d1ee332f2c336dbff67b2977e9da651c51f1b03d6df9273f74a7a2d3ceb475a17ea91665886aea41d1360b408758059a860a28244517119a950f2090d1b6104b27dac3863e5dc738af685cda3ec0cdd65fd7937f5aa73168a610558360a665fd1702ddef5a4810a63af42c8e8d1c54a1d32ee15574b5d350d01d07be2a8a9c93c645983ee42b6641cc6afcb3a639bbe105ffaae5efade7c126ffa178d0ceee37a7312ad7665362e7619bed7fbe2039b799e3d91606389902c7daf99ad377c551476c5103c1bf688e682912509df2d00676adb270f322e5a61a9bb9302db665d199e87ca6df2c8d27e271d721fa263311c1acfb597f28d9e5112daf6c64cbfec3d54a7ed234d6351ab03c068fede962dd56fd6fdfe4a6137084eb86dce3f76683a2e8542b240d54b84bc297950f59e9e927937688a6416b654d54478ed1f51a74b0bdcf4a814eb1453c429ef1e81ad8acd13bbeee991ad81da1ed93b297767aa2388888bd166b7f27cc2d785e3ac0bbdeca3a0f2e8827362942e4afd97d312f9d767fd6f1fc43e899ffbeb196b55cf112f8e0f91a0f9b3712eb0f8b16726e45bdc2b22b687d087b512fe7209b71dee3f577c8693c406a36b61e0b85c88ae219a0f2a9fcd33f72f11216ef4e02657e75317ff65b2673de7107d6866dde23109f5589178d1007b5bc83dddb2ea611f961cfce7ded409b8d495b19a6f18cd01976f3376eb316ab3fb8af0c755ff8dfc98c07236783fa78b791588d5be8f3791e47bc17744ddc239a4ed04f9b0256beac33b18058672057b9ef529523bce2c5e9f7c77817901a563b093e75e7e2c1386e1d78e1274c5b6d07a4e263088e3d22d61626f7d39d54fce487ca56b7c515fb6c5a61dfc9e36760661f824cd2a7a1987afcad5c7b43cda327cc36647014de5f6d0704161af891c0be370d684e6b4b36cd4f9bd7da7bb498df2c749d5e88c8723c5372b13290cd4d1270167a0b23b4fef88cfb1ed2f5373c51fe42be7b733df98f87362e10402b4175184a9665ff6ece026703454ffc70f483968aa403d63cca09543f0b966a2d1ac172d2571beee4422b47689e2af41add3141fd49d39e47303b4ad4113414497cde07699149bbfba59df68033b7f4546fdf3223bd4d71a7c176e6cda8cf78cd83aa93c347c5a437e94809ed9af86a2a1ebca63a573b9c1747891a0ea809a31f9f8dca447b6325195fe4d8ae044f943ba8060e06e4e23510f9fe204b4200f4c680b1f060bc90205713f74a6482bf42974e92c7d920ece4a9993fb7c1d15a361e5a37e6056d60fedf0d1768986c30e93001693aec7da89c0108949a36e63bb1a118591818de7231ef509782f306f1e357b85ad2fe8386cb7d9a30ea947b203fb4b0d93c635eb7337f7cf08340e72805c8300396a6d995428caf13adab376b13072e9e18d361bedf1b30a0ea625e0ec3f4fcaafd798770105c54549b6e6221ebfeb7a6626c5c9dd42391d6fd1308527b0357f758349509c6e10798d6c5770d59ee6bc7f9f8526747a60360b72400e84a5af77b36392f2dc53acc3062508143f87afb060955e8b16c12ead1062a0aa7ae274f12586b037e60544b70fa593900440899aa71ca6679dfa353f241248f6b2ade17270863f0b9884982a4da7f9af2fdf8c0a587b5bee0e55a8fe741640dc5ea5bf170d04bc8c6c834969be950bc02aeec687cb38f2545e5fb9d6ba38bd4eb12c9090ab033816ebf38284200358284373c56bc44b41848e1d87d03b9c44253e5ea307d59e420daec6981d99148ef2284bb944d884acc4f3a45b2610439e46811cb84d64bf182697952d5335712f5a12457228eda42a639e2afd5743d2f5098dd235929c00bce7fa9c914ba644cce0971bc6f5f3b8118e88c51d041cc74dfc92db06eded95e2b5c926132ea1a2ae60ee2e04fdce5ef09006f02c426d339b4f1cbce4615c8bf42e08cfd571079769c33d10bae067cd2955014a67f2049896268bdc35a71278248a6cb853b3d23b5334e55b5b67f2e116c3c37b8de7f91afd2e61ac0b978f251a966151809843f4cf0201773a84cf48c15d95e21a4f0bf439ab3e3ff62822d6f7d1ceee4d6653a62f63068bddd265898286d26708052dbabd943f02e65eb869119ca70440ce703dd08093b18f208fc9b827768b273de84d12820da33621c05075b6c187808913dce2c0e961badcc01b5783bf9abcdc2f9ccdb775528b01345beda62fc6d75a7f088ea197f9afabe3b82afc20f504f777ec8fbcb276d2822594d51cc18eef962f357efd6219935b8461122d0dbfdcd5abcc6de53365e200139db8a5be303ca143ea6f6f8e2b094560c17f7db637299dd7e7d888b2d83eb1acf524bd4a7f1507b6a54661a254d0261ff9fed9fa003f69431f8ec981e68cf1e5dccd5f12ea4ff0f28fe3505599ccd8e7276b28d8068753e81c70fd444b2ee9530404b129cdd2b3729da2254a5f0c92be3e1022866b5b16554040dfc7658092be9114bf62819aa42e536ec83fad5f604832362ae275ee6efb5a37f48de1a991d83790abe135f91cf3e81d29f51903fd516d26f01e716dfd48bcf375557f1217e9275ecb03750763496e8392831040d3b603982fe7ef78543e2be0f18ae7cb03e899d9b36238fafe417bfa0eeb0d3b92e7a35206f886d61063e4902b0f86f0d2fe7d492fa71ea1f827e683c7ba358570bdc8933c2c90c31e42b87c5460979864a6a805a5c820223541ee9b31b9d7c8b7c52f871c9c2fc41d982f9866505a4bb1638b75784f05a7b43291d892c886f2a4d4117b528aae7c146181034b5fa644b338718cb3ca6370875e0a5d138a6c86abeac442993323da6df52c3874736b81a5c017e30e2c5ed55a71d2b4c316424ed063edd4a79ba946dc1aefa97d89409fdad913f63fcf024571f0d25d92d4d6fca7b32fdb0a25ed3f0c5ccb99e28e05085203687d60a024c1bc14c2679aeb4e23209a29c0228e5d5b21da80d70da26b46bfbd6b300f962a8e844ad041053abebd71971b61efcf1461155b00a7484f28c0167ad125ec4d4edd8f31cec28392fa01eb3192a232884286c95885787bf4e077bef9bda834b7c5d132500116b4ec6a31490798323ffa46281473037cf9c046849b72d6ceaa0b4aa7f8a7b0551c0610c8e3ea36c1de1e4505f358899ebed9670455c3b1d11a9db8a8d9310e15a3fdafdec60d9ce9713b11ade4977e89623b1559fe2862ee71a85bccc63afa86eb575e2440fb0874436babe059f3551ba0b32339a57294e978ff1c271d74e4308fcb054c94c38587b12977c6f272f6fd401f9db7932598fbecb54d219bb45fd20a905b318e2bbd29cb60c4add320f40b0e424dd457f60cf67047b00a44414e13826578fbddecf70f659931bbd7d67961a6a0228f67854fabc1b18f4712120774399bc34d440c32f89d912518da16e7297b4f610774d24003a7e94ccbe28dc4c1de15d2bc8bb7dce2cb9247949c9137bb2a5d396bc7644a10879b35295e396074ae70f1007fc8a2708974eab62d66f1fa2b5a70306437e6a2e8d85b318916c29bfc1c4b5a64cee640cecd45b432182a597d82744573b3414d6764d23aeaa4a9d003ecae4aa4410f47f79ee08c4c31764099a97c99e7d489767696051c0fdc1f4b628a0fdaa00a1b26307589f142c2c681d62f9b737cb2e5ebe003d7e006c33075753053ecef336265ad4554712e97f96eb225ece0e3a641cd95bf6ab8db6e8484e4e89333f50cfcbffcda76439800879e477c614918184ab7570bb3fafcc388d3f2ae8c566999c5c218fa542a28abb35a9580c9e54332f9b193aa8d3f5af32f5686dfc2818514650dd63ed5fcd80cd3116f221574da6ad1894aa8b6542e1df83066cd0a2f01f4eef91e1394d934ec5caed731a0fd5c17c38c7419f22b0c7424e3d60667e703e39e72f08e90d8e8a37ddf5298f2f8885cb79b06a959087030eae5a4362077ba2023a6cebef7604d4f1b5ee4dd67a1f3d464bc2c7927ac571b425d55ee35db412f071899d4c7ebf14d2463e59c44c61ca318fcb787ce91c3da3862622500f207f568bab0000aaabd15ce082d802494537837f1ddf24508dffcb3a75a756f08b9cc64fdd3177fa315bbc11d7f7877c28654d758836a0c28461f6fd0ba5dfda65f6c642e902f3afa9a13dec00fa8b7947dd5253b44b0f74e8407aaedd27be940fd77d17ea32120bc724d5240ef00970670452736b68d48a608488b2d31fc7cf9a1c356ffa0145d076613732058e93f7aef50137aec0f2f6789e21c0d4e191df88ab35deeb8fc777e95ebd026d211ad72fd9c92d9318d8a7735488fb16d108e5a1ca12e6346d528774a9c0bdbb17e5eafb83d82a052bd5aff8daf367bd0754d1f27fd25268cadb661d389475de48acc0b96a23d0046be6aa5dcfc6a2c4be614924f7f892583902e7dedb9ca34671cf60a79fc43a42583f5f6e1d293ff7c6e07fe6a779907b5eeb209623c4d1e20b6df03b763fef752918d71f91cf6f872c1f2f7912e07514c72e01f4852ba8ff2ee02b4d431a026cb17bbdf09c6d580377b3a9eebd48a9244a1d662ea0ae1b0378fa8a56eba4d42c7a3904229c4625fa9ecad0eb0b2b73ce5829165f9847faf8a0e25a477f8ea9600018d6be8412ff631e742334a6682e7823e3e62b1ab0910dcc27145df209b4a3c1b0b7d39fcdf58d5bd3d360dd8d9d83e622bebd1981c7e9733879943da73143167b9a4d0cf478d35a88a2b74af0f50c60f9dda2c9aef34f97c912f2765ed24193196bb24b5612e6f3b743050be17f28148c7fdb74d36e3d7bb981413d9af1726c5a7c29d7dd4d998d723895900b480d651c11b43ffe73ce5fd1ad04112b5a7a7385aee591ea41e3900c264b1cab2c53a54fbbc0fd1763a5bc5b4ffab1552bd8b14248b81607377fdb4be46a67d3f6143418c5685b57175271a95699d227aca9397c504e48ace9c754663439aa4426a5303083b0f3c919c160f4ac6cdac8b5656f9d57ca54dfa4f99c336576b028d01b3f6e2f5ef066dbbf180cdb23d2b1e10059d42547c0cca81c0cbb92e6db034e4600933a936fc99c4117b2bf6ad8a4dd67a5801fbe1d7c1e7c7f65944cba958da06b905bcd1d900ebefbf045fbaa2eab1b7df41595582564636bca26d6f97d4801f3f555be7ca881374fa835ed407d7e704b142d5d0e6c044afb484936782f909f8adad2ee6b6c83a648739fe596012b4cc42e9af5ab778060477c6f04e32ff7299ddfdeb9c80b3a77fd4c0a353c0b2745fa20f9c6f9dee8212112ec3d7c8edc6a5bda386d156adb47f144776654c1a08f06a4fb8d5ec6ce3c5fc4b8c91e82a47a5c6bab89ad43cdb57ada80c2369b7d4cfae316dc0573650053a072218a35e93a49185205a84a798788dfff554483eb8bd0295212a630bad1595d9044e016e6cc48fe9c6f5e76e0f0ca7b0839e1429d95bfc443598a7f872351cbc747e4a968577848f7a08b24c3e6cff87768d5b121439d2572f018d8a2a207bc8e09edea229aa60a6943e7138a037741b30f2273204fe343de27145026244a955a7aac6d8f20f94d606eb004551aa3fa9d585334b073cf1277683fd54e95989f80ea9e483906a420ea0e5bc08894a4fecc489a998d571ca96fc51347940d48016cfd85fb7152a8d083a0fd1b4aa182f1e83b85b1a230da97e1c3562dc261c6386d50b60ef476850f3b3df1afbca43429698664a587f2a8a03273b7a3994472c92e815b1c88dc7c7bd34f00d905b255ebb9af92a8378b70033fa7ac2f09678b82af4fc1362d603b4e914a169f6615faa8fcf138c7a61f3fb4ca8a21d360bdb4cb7b29351630f700c3785a7a28058164c453bc98be2ac99f42b0a652fd1995f397113b2a555cfaa35876b4f398aaa9e024f806f9466d32f4c41104a8f5270c01db884951639c90f68565b219737b038bd99ae7623985abc90ca69101be032c773685b528ad5ed2eaac8f80f8d6200fd74d3d0e3dbbf04b25e029152a75eea253c5bbb567bc8601b1006bfe7986b5e42561c754dc44a83cfabdaf7318ada6b0275abeca81940a4fe5799373e08ab855dd766a329b108687f37e4a41ca3f27c5ec8a497fe9b2d38ebd0abce8fc830c497eb6661489bc16da052bea64962683dfd6a180209c5566f29721b88ed15c265ab39b650d05e9cbdb49f316e2385a1990a8cba0a45fb4ca2b0a554155cc617c7aa490438817f6f4867857c1af894b38675efa647eeabb331f4611650847a22769d95adbd3a703c528c5943646720b8b0d63d45706c868c10c2ae4b6f13f5ee1e1f4869debe03055325cd17680441daebbe197ef2f7937f8389ff02189fb06d3ef9a5ad9fa65edd4794bfa469108c81acf94f50fef691e7d0710d071095f089ab33174e516287097808e2647530f583c765c3a339e9e230afcfef962e21629881edec7ff34d8ab31d8537f3e58d6b12ea1e98bcdf67bd96d3ee363660f8cfcd7d963feb425dea9f2d5bd45f32f11e58719a37a69e85aedd2e9e41cf15a8aa87dbba0b69a1c24cee89e4c144c8a9a66f81ad8204046ba457cbf2ab8a9567c16994394dc3e75bd1176dc8688ca52fef052d2037f64bae904888cff51c4c30be3e73f4c8d813cb30314261d07ad98ae975fae6bfb2486fbd62892129a93e605ab6d26bffb13157b17015a6f9a9cb043f1ea864054393f56f268f8963febc42296173b51173b75f144c546ccfca059b5b9d2718fea4aa23d19885f940bf778d02a1ac14cf86978cd5d1f18c93414a2f0d3602993dcf9f1664680636d4a33487efa5c694ba1efbe3208b359d9c3b05f90788ecd6c5ccf9dcd18674110efd043e67d452b33493b932652505e8ce5517569eb7e0573cdd996beb85da5dd01c2a2804689fb61efe6637ddb65fdc66c1c3b10e89a890dac3559252a462066b1ad744daa350c07f148b3ff212ea5e82882f34d5d2c2c10f3044342517f5d5c8e4aa0630ff42c8cbb42dee71a8c0ed6f9004b25783f457adb138bb546f83c5993bca6e4785430c80304d5da340ba4961f7b9b5717d1f85b0033a6f4fe44b561c86360e28656e123b2836ba5c03bf189610d84c02e5bf50c9d4babe8908b9c21723d716fcea71942ecda38f99dc83b406890467a654e2da11680e9027760ff5d776d01cf5119b7da7aa6016b2d1274b7836cdc53a7ddadefb6071d4d4c1fd3728530278aa3f3f5ac2958e8a62dc801559a14051e6a07ccf27621fbfc031568e5ffeb40931284ab678e38202f0c296344ea7d57523e9ec9b50abf45696f3e05663058f5b390f123880fa1ebcc49a827a821f8f5804507522d1ea196304cc3190c57285745ec9d1ae161469333933448deb4cb6b258d7869d75aa0bb2e04ade01be7907a8d389e09b34611ab0e15eeeaecf0dc4dff6cfd6c08701caa6a4084663d029487100e02f135f04c0b7e23cb22afac5e0ea4ca6e4fe9d47675867bc814e3994f00ef263cd82d2808db5f22f006630f174927cf79696bee57b9011e67cc116336e98f58120e5c983f25fb36ecfcbe826bb8b95004a4b5ddc56eff90f4354e64e3d43fa46ab27e5bf1153982bbc03076c04ba72d0ee798d3145eb036a184e55662194f65399311b0b09ea4ecde006871d7c47668aa7f5f0f66498c9e31a430f5ca835dd2c0f76610011fb81f41aa59d7c485ff3fa239218ec69e6ce632ee7ca1aa0be2fc8fedb3758c098254df39f288d5e0b44faa99d98a713381262561534dc197a332b3b8a93b4ef9aec6d149bcb76a5543439a5d3024deb0ed4ec458b7fdbae71b8d8bd3352a34f4621132fdb2bdb757e252fb30d0453f2d529fce4c85014b47dde2e99f2f25c00a146f3390f8370b002593289795b201248749ac31cf8aa9826fe9487d27db6e86f3d7392cdb188e722788230adbe8e322e450652145266b0953eeb1a3cc1a56a320c8bd20c99dc97fb1af93097e3373fde1bd6ea490795e547710c9ad9f4d17b8638708c80b6fd1ca7a966116670ae06dd5ba3aa5b7c458f6f5eb327daf303889f96e4127e6c5554cdc2232456b101d5f67fec997ed5b9f65dc873d2924b25258283a53b402155f67effdc71ebd9dcc0681b027eade5b6876b80af8308ef3bcc49f6c3cc34df50dff5635d4891e1b9f558dc9bcce9f5cc1acd193d117ce482c6531c11f7ee01f317b9207bf51da743f6ea49c6a580a13becc3bb94a7a1a6e17b8b4864f4ddbf5efbb0e8d0d676d92d0bd9bfd2f3b98652597f6098215c1cacc26b243ad20fbbca55629d5ef8057c8bd1d558135fb4f8f59fd64eb624c3a1a3fa38e018e19c25faa156fa7ea524c053f78d787f38ca4f0164fc611c07d073c1cc6811567bec7e19c9235a7135b1ab455536dc599703b4deba8f9d7b556c830a7ca2ed159305abe217eb51a44118b44c68b470e48c8316be25e8cc997f1609987e5262cbb5932b5208a748dd116a8e62696dc669f822be2278609da1999fbc65ad4accc379f930078f93d91c7b0344170e4f2e50337272d7a15b761ae08466a48bad1887847aa58a083e8d49fae9486daf1670777273dbd48475fc442b4307a379b32a5fd63ff7f7f2116cc965f07f42e3c71a3e970425084236fc745bcf25c9b06fc2e049f90cdf0d799c0ce5e9d0d2c5029688b0baf22dd190c697bb64c6dee50a50e1b756b58b3fee0ff33a29a26584c34efbdb22b49d78cca82e89b9cd3050d657bea580f20553341643f00ec6057d6cc1d91a730ffc3f9fcc50d34b993d2f4447b234930aacf4b49c919da5aa6fc298d0f72f80d377e9cdd71c620ca8589ee47122ca8a3ce03d75303f5827b3551afab55805c509ad1ba84ad2785283f5d78d4708740c597f53e17dce3f1172cbcadc33baba0c91a93ad9e6b1dabc0f6e977cb5b2dc756b4baebeba6df31ef3cc223b1f15ccf48684f5aedca96fc70273b39a617f15777e29f89bbad25c359ae0c25a7ce7f4bfe9624a42a6f4cfc434c9257e3f04b76b6518cde3140426384f17490808786d1e856ab94bfdd76739350290c55f19334bf5c139225bd5e139b0bc0d8bb2d32cb9947057ca43237038f23999e27dea28c4b535adea43acf8015e90680a0b60be7b939f85bff310a85de807f534873e61e010b9ad5526d6c66f90d9a25482ba70f3f1477122a9b48edb1c2664fd436bcf63ed239d2f6ddeda2f336ee0a87e36823b86f5277383322843a84f5082b8410dc3a59beedc1c9723b696263254595f8b5d6df83bbd3c7645885a3217b350147d613703bada45d7f0bcb824c6302deeee5ce7b50b2e4afb5fb824e3339e83dd60b4acc299e7b90ae1bd8d092490edab6c0ab157a9c8ec4f832b1cc52d004e83f329de15a59182c317fff656a0b0bb64895cba7e159df8b83c4f2f720573924069af3877799c4a0c4fee28cdf13c39522aad0d20a852febc6a109a847c923d8cb05359af7951c42138c05f6b7a1d27d78b489ae0daa64185b2ec3e26552ba40058eed9ef403ef246e29705da48ed8bc480ad1e6ab619a1015c0b696362f1f9c637ba00f953ee05be0c3ff6e81e210ca431e1736e49f0a4736a31176c21a184939e357241e51800c8c0e1d9d3482322907a48895475fe6d6d0bef2f519b41b4632826f67d3a604c019b91f2560c3158d36eea2b4f82f87f61589ffedfe35cdd573df12f0a52d0c461301e8397b9b21dac4d95dccc47884157e8cd46b699296d520ca509db0c4bd1c0d3d5e79537472eff95394c22b567433df65dd8222ac57fdd71a0cb8e07f4dd07cc288193e4b83489b230adbf9789a36b431fe6c86bfe772ab1127192ca82d2fe524ae8afd8cd896d358c243e7dfcf197853d74e8a6b7fcc6b05f46e4bb317ac05a29140409cbecca4499f10a6bc9d6f70c1ef1c1d709d74682e3d4d5c039638b5195a2bae0209f60d1bf606ff9383ad69aedaf9eee57428eac7d3d78404187dcdddb0c4c1113edfd52345aafabf61156495fa301c567019062123867ac11039e52bcbd6a0a35cfd71bf7b6558c2c8921899e4c8bffde662fc90e742160adbef9868d586a01a6fdea7964316ebe5fa0f0c2595582e09b358ff458a03fdc460e4da71962c3f91950395f42e866987dfedf3e64880c2fe3b6f32f40718db59b085ee0ec419da2601abeb27122c235a7e269651aad5415140120ee3b46def0c80296e155efd772588b9c9a945ad593d8795e87ac4a9d0547e7934c6cb30de349f75da410b29e6e9868546d1d3b4962cd232eeb48281f274155ef0759737a8fee0c73fd1728c7f88ce8659a4fbdd4e95e9b9b473fe4e3f9239bd8684b591f6c0fcf655a1211cd7248e8cf8578e9cabdf0103a720490d8fa8a9516fcbb477dcffc5a24e9c6543e5bc6f1ae670a9964053030fe6720b9ec6182b2894dc529c232079dac9edd592dfec0c4aa2c50481ff3e34d57c48f08d3900c623f52630ad3a5107945711e4b418197a72e304f413c50109eb5d48836fa38f676f587989dd082e309b66e41ee2799e7769efd6f912448ab19d2156c3141d1bf943a689b9c4307994cd7152a3e3bc8c3ceb520450b85013ec46cd5f46e81c86cb22dc7fca1eadeb6dc919f953db9134cfc3b7ebf5bf114ffc19becab3666eb17b111899196ae101060ab8b68184f2221df97cc3de4d8573513e91062ea2fde166780f3352568edf6cdbb47470803e176ea031352c8b4178d83f02d6152cb516de184a9a99ecbe0dd6afb18fc2b3019ee90f8d3dbdf2907f101f27fac3b225ec454f854016cbab8fad323407e2148102ede2afd553f6128eb025db2c58517a6a519ac734ff08c1495dea96cc7c829c864b2eda0fee2c3e4f0cb463b3f45703e8362bf78fe18cacf62926d5b923b0307462508288519f2f83177859b7886bb1523c4c156f7137e51f9d4a8f655f8858b54d3e75cfeedd7c15a19cd035f32f4d2a8b70c4339315a94b7c1136f6fa9baae4e6a677cce366fb663d055a7cb9d39ceefb9348ed5e96c89a4fb9e9a7ab6f010efb0397902724b70e212c9ac6e539b301cd89b799b8b69c8615007b5c9f24f28e1b801133b544e1be601038a84ef866b80d2440f360c42cb87644a4a5cc98553a64beff6b69a42a461f8e81ca80267f9905f50361baf3ef31f1c476be1e293b16edcba2cc550db11860bf9b0de46e34031389a741bb1cc5da8357c309bdad80c6d1eb5f9b98bec0cd04bb928bbe5bd24216bb08dd71386f4240df3ae5663e52a2b8e8fce7624554079d587b2db0158dd2ca6d0276574a57fbed302c9fc070accd26af3379e3b198e33676c52e194f44da73f482f7f88d3f69235c92d1ec51f3adbaa0b66395353d3e5bcaf423cfdd82cb06acca64d702e94470e6f84f4dafc0933e1f9fec69d448327f16c08b1a6b667a712f14f8083963000d2c942a2c7815e2e9d3c2f4678336ae92757ceaa8c19023de1d476dcbe8a2b892ba889289cc1a39f5ce150fc90a5f10e3125781de7f4b5aa14427af560a65dc338cb3abb0150f7c94cd5bdb7d59a5772ad540690894dbf9d0c5c4d902839b467d5330ac3736880816c505722085f1ce8381efec5ea7be999420efdc2a80199515afbae5055d84a037549441ad484ed1dc73fc395b0b2b9fdfb1f94eb6eb03039ba379760f733e528cfde849fc9d9dfa9ebe740146f4f57bd6657fddc0ebbd0c88ef21f71c6474312b2dd978c801012fe53d500c73ba27f4f16e6e97ce21ef4a443a324c73e3e80393f6c3a21ef79ad408cb5a392b8dfd1fb6b65c330425e7d305a912a12c24d0e74d722fd8f9018691eb0c00b1f8a50d3f42dfe483cd1cf53568b2223c840fa7941892354fb9dfa5a4a139d1e7c1fdc7417dc7bb41d957b2dbc47da769df6f932674deadb4ebb047cace0877e232de833b554344117c96c3144d950bdfb28a0f4cf38ca92fa5ace3db9e0156e13d3d51a4d9a9bc612b2b37fe7e3183b0af36c639429d11cd3bc381cc59fd31306cf2cb691ad4f7eab0e77b247a89f30a69044639f3869392c56fd2b2608f977a1f7c51ced12dcc58aa460adb4225756c36348f7eaab4b119816c0a84922a0bce5a26789e19c1e9e27712bd5b3aa3948f274bd8e35852cf4a4d92a64409c50af96db5eeff5c9664089a2e6d734850d79c89ffbfc9dfda83788c68957bcdfb8f4cec6b75a09a861c319986e46caa68834c2a060f26d478ff4a05e1ce8a1dc97e7dcce83e76da8d559276e9804d24394ce3902bf405283e28b0d4f3a04a8ed7e98ae40a037c3ce7da22047df7ed59654a5c3a8b45f5bc887968434803d6597c43f66e4de81c8abba550bf046d50b52d8758d5f025049d5954153b1a4459616c507791530ca7650cafe32772a8fdef35ef280fe01993f7c6ff677c7304c75d2835656a3a5d7607348406630f5b376720dd4af782f198542a054e354c968dc2f62a4c5a0ac1d078e9a6aa6e6877c88f57e1a3118915c24e03545dba54e88193b413ecaf0ace009a49f2c916a32216fe78b5e8e80732eed897998e8bf623b716dda358d1d684754c8a10b089e16f68ae17d7f5004f50e78a71bc8c59547011ecc8a0b7733deba251ab69b467f3555a2f427ec9ae94ed8c5eb94899efff9d28ceac149e446d2dc974a4782f498181a35d19b5368fd5a287bc54320830c8d4cf41b458bde01f12761dfb6e601743f8af4fefe5eea04ae57298432f607e314dfadd82aa0ceac1bcbb46df6991172b22faef02e0a738095cbefd85fba42998431b82f47c5b45657f2f21ab6d515097178a1bb587b0f70f5f50097edd48868e7b857c041120ccb9247aadf019506b9bc441d8e27f86e2a6489d665f0201714f766e52b4ea94af46a3c0f3c16e6da04575c8f909b7d57b6df1952d43077875e8badd3daa0c4ab1b9c6695caff0935304ff9c8bfd62eb13f8d91e021213fd03fd3cb372c0fc3a7f33cb1c73e941ec4f26000544f4a1c5a654e2a5f4823e6748339c2c5c51727e5a2a8853cc500991b176604cd333bc3e00291a9b1b2a174c9678f71382f2fa0e045f5f8177ef63640043a45d66c2e3b722254211b02e29206d206355ba2fae518b590c29ff372d3cd868ea587da65fe18be03372042d39c9be9e2960bb3f88701fc160a219467690c55bd033ac525fb1efa4f30832212aee0adebafc950b5af0ce4929ea96657c9c703cf77d1009fd091a0ad2532d342673c75d02c85e3da5504f9d55f0aa97ab70b1f8c0cf62c0837c3800f569ff0ecc10b99041e1e154079b8e72c8fc371d113e0c0aabe6d69d417e7a907d3420309728c371dcb4161459b18b1ca1c89fe7d70f75b4b0e4db537542819434acbeddf69ad4a3838d8500fa2d5f0015201615798c4dbc2795ce2f890f11166b01e8ee4016f925a2d954ca42cd314c84da4400f8d0af8d556d8c06ae99cd0a212df37d7e022b30d042938d47d59bbf1a84dd0c457bcb3ae85d2b99efff45a7abdcc2e1d474e64cfbb79557818c7c25a7607f0bd50a8e0ac794acf9e68b9bbd3c835e9c65fd014858fd8d07f8cd6f8b88056810990422f18779d35677d592a0365e7c4bb3c5281e6fc97ad68b6023e50c0ca65149360aa9301f86fcb4b6c707d103202ae805128584c607c6f4ceac836435ef0102e284afc85fc66bbdbb0e3c189c67b7454ba171569b186fbb8eed330182c4101105648f4244ed226b18faa44fb774b1f0cf9cb162386d1323ad5f48cdde82171ae813379ea540458f5f8865478aa2e06a81d740bc393508e1189711af7568851f2d4de964131c0a08504b71698e7aa50b2a6cb4babbe4577e1a35f8bf840e4cc98b86bf94624c73306ffb9839d8d5d85260053dc33f54018afc856fc72cdfec77840464d6f63c2ba59571471fbcbae443af0ee266cfa6e65dba108d4a7cd533985cb73ca6e58d9cc1744a0a3021efbaf11e76e7dfaaa7e1e5bfb3d964ae8e9e7c55bc339b3bb11c71489f0fae680bed33789920ab27e35c3bc0f3384816db494cc062c97ae463cdc23d1243d30badceb9803807b5b75a948c041ec50b476d7be2edfaaadae15db886a198696f3792194104972171005d98f39832f0327d3e0f3f5b4f8a72d6e17b7fafd8ca6e7d28ed61a8c423047cbcb20d11aeadc2990498af8ab5a9949ea42bee1e277fe8414de85626ae226e1c69cebb9f82fdaa17278a9bfb85e4780368e895051a11e34d7bba3ccf84d9bb9eb2cd051990280b7c2ea0f80b87c957634400134758fac2c60ac14975f635658239ccb93f957227206d4ec383cc2756f6d2fecff0ad7b0e55fd95ef188c8d869ea300d9da9321b764c2c85e151c5fe2690a6e5f9b899a78c1fac0cb0ee698dabff5b7f43a74b756569e8b8ee6c1f4828fc85e9619b21dca5b69bf95d05eed122e001c55fa7e6e07aa6c743438a4083259a40813a88245ef47035ac750a7eb1e8a4a9a91d055c6898cc67486c03858d7bb605ccb6171b23b4c94a43fd471084ff6b6890a0f72f81cde38e804d4035d89e62288f3e5c7e8b473543a9247f3c91b7f7da731c8d4feef3ed5738a30a0c368ee854fd095b22413938afda39dd52174d4d9e80e50dfda2928852c09f1042940ac503ad4bfc99dfaaea9766383501cc888b52bb12fc8fd57723f835a1ee5b5548b2827d99d6ea571653af59a3823f2ea138ded072b2a9c0c909220d63d9d08936941dd59a0b802ee7be1a3b3d9ca45a4cfb356574ed017ba53b382a6b95c2c38bddb37c79b05b996ea59fa2ff6ab291cfba634a3a575628e1c0658977d95637e4e20e535a79f324c8403ffcd7b21b15ed95cda3a7bca5f3778f137ea0dc3feb584c144ed2493390f023b13ed60e1a26df772e3ffc54a497857ce97473790a87a6964f91479ae0ada0e940dc33ff006d44f92e6eab840889d47a24471e3e0490730a83e296d6dcfb98f973709e29abdcd443b56479d0af860655ef19e08e812a21260c460876a91ebfa161b19c203237df288a6aa80e546fd3186a9e92c89a21dc26f6ed3d1876c90e08310f93caf18baa182cf2bb8ea9f9dc989da0ad0dc72131e75ac945ca87dcd200ec599130e3b74c12d36b58fbdc20250ef0958e35bb88b02da26a25ab429421acac9e67f2ff8f998259e3376c0b8815c2814b5d9a6c1594bd2bd1d43fb1b5816613590ced8087d415352ba5f1ac04999f1470b2e4bc279ef77d9319807af07f1d5d6f5b6c66b236283aacd9487b496e79f2aad7f1feb254daa97bc2b886e907a13c523fa0d44eb06472359c25631f8043b3e4f651a258f19a6f77cbb66bc24a87c63bb76b4fd9e6bad5de1684f43893b715af6e18ddb726e867cc55d5127947d991bb5260bcae918affeeb7246c5ad0621e87da7ae3c0bce255ff9dcb3b63756661f166ba2c4cbe90b38bbf9d9a0172a146883f47f4643d9cf2aee6c236f00e0fec96c49d5ccd3732c50944e13f8b82f16c367d07db32d553212330c2bf653682177e80b62f54a0b177f06ad3fb978059afb3ef0f9976030fee6df123ef998a33c0f8aa078f55ee240e9b7863cb6bce46b2ca732c19a002eed53e2faac5a345c031c0968f1784ced125d6862d07aabdfd5c24f55a9ec19b07a8d9020194a06514c78695d0c404e72f9f030573d296648cd67469f97729fda9f4f32db8603a3a418de2ef97f1904a710ebd74e5d20586657a2737c398ca254ff5a5c531e338a20e504542252a280c83feda10954f53b52fa7a185c1a04f46e22d40cdcd2ae979a89839b0d32e142ecd22edea881439444adbcbc6083730a5c3215bc3a7a7af5b0c828ba2192bce29fa3aab8f3dc439f75bfb254cff3ee69cd733399de6e5950721fdbb8eaadadcdb0040e16e3c34f0e9b13b809a5df0f921003cbb81ee05fb6b75b6d61d4927ff07acafc9eaead9ddd97d948c8fabf571be64152910ea0162ebe1d6a69c34792250001e9026dd76702673b10b3e8ab94f2612dbd07a13d59b264cdf47e0449410fd03d240a67aa6cec5c519c6053188aca78be7ec1112431034ecd40387adb6e55d3f4d547d56f79120055797755761d6f9c4f9df2ec58e44a1e37232faa6cd3e982513a6bf8e9abd4878611e15505842d1062c50fcc4d2542bbbf43668ad76da1880f46f2ebc43e88ef1f5fe85fefed5cfb4e26f80c5388790514fb1a2c20b23f5f8d51c88d4065f5cf55f9819987f17807f6745e8bf8ebb6632e48179b70b6a54669fb1c3688004b168732e9f9bda48115152c20ca672d95d8dee037ed3ba29743e5b3965815fadf870b60dbfd9020ebf935b44e6c0d4ebc6c9ff3038a0bd054485b69da848db0740713a8af95a9a0d3895d97483538ea9","account":"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69","salt":"768716cc5ebd8b89ee7d46d1cf96d763"}];                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {                  alert("请输入信息");                  return;                };                const id = 'ef817dbb';                let login = false;                let index = -1;                for(let i = 0;i<users.length;i++){                  if(users[i].name === await sha256(name) && users[i].account === await sha256(username + password)){                    for(let j = 0;j<users[i].post.length;j++){                      if(users[i].post[j] === await sha256(id)){                        login = true;                        index = i                      };                    };                  };                };                if(!login){                  alert("检查信息是否有误，或是否申请本文权限。");                  return;                };                const decryptData = decrypt(users[index].result,password,users[index].salt);                this.style.display = 'none';                document.querySelector("#article-container").innerHTML = decryptData;            });            function decrypt(data, password, slat) {                const ivLength = 16;                console.log("密文：",data);                const ivHex = data.substring(0, ivLength * 2);                const encryptDataHex = data.substring(ivLength * 2);                const slatBuffer = CryptoJS.enc.Hex.parse(slat);                const key = CryptoJS.PBKDF2(password, slatBuffer, {                    keySize: 256 / 32,                    iterations: 100000,                    hasher: CryptoJS.algo.SHA256                });                const iv = CryptoJS.enc.Hex.parse(ivHex);                const ciphertext = CryptoJS.enc.Hex.parse(encryptDataHex);                try {                    const decrypted = CryptoJS.AES.decrypt(                        { ciphertext: ciphertext },                        key,                        {                            iv,                            mode: CryptoJS.mode.CFB,                            padding: CryptoJS.pad.NoPadding                        }                    );                    return decrypted.toString(CryptoJS.enc.Utf8);                } catch (err) {                    alert("解密失败", err.message);                    return null;                };            };          </script>    ]]></content>
    
    
      
      
    <summary type="html">
          &lt;style&gt;
              #best-form {
                  width: 80%;
                  text-align: center;
              }
          </summary>
      
    
    
    
    
    <category term="路由" scheme="https://bestflyteng.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
    <category term="网络" scheme="https://bestflyteng.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="思科" scheme="https://bestflyteng.github.io/tags/%E6%80%9D%E7%A7%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统部署与维护练习题</title>
    <link href="https://bestflyteng.github.io/posts/8f70eb62/"/>
    <id>https://bestflyteng.github.io/posts/8f70eb62/</id>
    <published>2025-05-26T06:46:48.000Z</published>
    <updated>2025-06-14T09:25:04.602Z</updated>
    
    <content type="html"><![CDATA[          <style>              #best-form {                  width: 80%;                  text-align: center;              }              #best-form .inp {                  width: 100%;                  padding: 1em 0.5em;                  margin: 0 0 1em 0;                  border: 0;                  outline: none;                  border-bottom: 2px solid #ccc;                  transition: ease .5s;              }              #best-form .inp:focus {                  border: 0;                  border-bottom: 2px solid orange;              }              #best-form input[type='submit'] {                  font-size: 1.5em;                  background: orange;                  padding: 0.2em 0.5em;                  color: white;                  border-radius: 1em;                  cursor: pointer;                  border: 0;              }          </style>          <form id="best-form">              <h2>刷新页面即可恢复加密</h2>              <input class="inp" type="text" id="best-name" placeholder="输入你的姓名">              <input class="inp" type="password" id="best-username" placeholder="输入提供的账号">              <input class="inp" type="password" id="best-password" placeholder="输入提供的密码">              <input type="submit" value="验证">          </form>          <script>              const sha256 = (text) => CryptoJS.SHA256(text).toString(CryptoJS.enc.Hex);              document.querySelector('#best-form').addEventListener('submit', async function (e) {                e.preventDefault();                const name = this['best-name'].value;                const username = this['best-username'].value;                const password = this['best-password'].value;                const users = [{"name":"785ca6708470f42b52906f604aed157bcc7f941008981311f0aa68bdef3567ae","post":["48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002","4aad6938451b398c8544546bb8dc9e17f8926d9d92ce3c400d552ffb05a9659b"],"result":"","account":"7c5d7795860f6d3efec596f1f4ec5980d8e5ce47d5f68fa47d43fc0858284022","salt":"3230a65b416020b24e08fb89eb45a8ed"},{"name":"5dca4de7c25ef54fe2d0e3389b7e28e63b715e2911125343e110d31623aee81a","post":["48c1c75e195a66b0dcb20243e5b79532d2412420fd59b5530502baea7e376002"],"result":"","account":"cef472f90aeb4b39bcf8dcb875eca6a1c49a77835e697462711199985613ea69","salt":"3230a65b416020b24e08fb89eb45a8ed"}];                if(name.trim() === '' || username.trim() === '' || password.trim() === '') {                  alert("请输入信息");                  return;                };                const id = '8f70eb62';                let login = false;                let index = -1;                for(let i = 0;i<users.length;i++){                  if(users[i].name === await sha256(name) && users[i].account === await sha256(username + password)){                    for(let j = 0;j<users[i].post.length;j++){                      if(users[i].post[j] === await sha256(id)){                        login = true;                        index = i                      };                    };                  };                };                if(!login){                  alert("检查信息是否有误，或是否申请本文权限。");                  return;                };                const decryptData = decrypt(users[index].result,password,users[index].salt);                this.style.display = 'none';                document.querySelector("#article-container").innerHTML = decryptData;            });            function decrypt(data, password, slat) {                const ivLength = 16;                console.log("密文：",data);                const ivHex = data.substring(0, ivLength * 2);                const encryptDataHex = data.substring(ivLength * 2);                const slatBuffer = CryptoJS.enc.Hex.parse(slat);                const key = CryptoJS.PBKDF2(password, slatBuffer, {                    keySize: 256 / 32,                    iterations: 100000,                    hasher: CryptoJS.algo.SHA256                });                const iv = CryptoJS.enc.Hex.parse(ivHex);                const ciphertext = CryptoJS.enc.Hex.parse(encryptDataHex);                try {                    const decrypted = CryptoJS.AES.decrypt(                        { ciphertext: ciphertext },                        key,                        {                            iv,                            mode: CryptoJS.mode.CFB,                            padding: CryptoJS.pad.NoPadding                        }                    );                    return decrypted.toString(CryptoJS.enc.Utf8);                } catch (err) {                    alert("解密失败", err.message);                    return null;                };            };          </script>    ]]></content>
    
    
      
      
    <summary type="html">
          &lt;style&gt;
              #best-form {
                  width: 80%;
                  text-align: center;
              }
          </summary>
      
    
    
    
    
    <category term="Linux" scheme="https://bestflyteng.github.io/tags/Linux/"/>
    
    <category term="RHEL8" scheme="https://bestflyteng.github.io/tags/RHEL8/"/>
    
    <category term="练习" scheme="https://bestflyteng.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Win10 部署若依微服务版本</title>
    <link href="https://bestflyteng.github.io/posts/5a3cd46b/"/>
    <id>https://bestflyteng.github.io/posts/5a3cd46b/</id>
    <published>2025-05-09T10:16:10.000Z</published>
    <updated>2025-06-11T09:53:56.894Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>下载</h1><blockquote><p>下载的任何文件都建议放在不包含中文的目录下</p></blockquote><h2 id="下载项目">下载项目</h2><p>项目链接: <a href="https://gitee.com/y_project/RuoYi-Cloud">https://gitee.com/y_project/RuoYi-Cloud</a><br>或使用git拉取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/y_project/RuoYi-Cloud.git</span><br></pre></td></tr></table></figure><h2 id="下载-nacos">下载 nacos</h2><p>官方下载: <a href="https://nacos.io/download/nacos-server/">https://nacos.io/download/nacos-server/</a></p><h2 id="下载-seata-server">下载 seata-server</h2><p>官方下载: <a href="https://nacos.io/download/nacos-server/">https://nacos.io/download/nacos-server/</a></p><h2 id="下载-redis">下载 redis</h2><p>这里用的是7.4.2版本<br>官方下载: <a href="https://redis.io/downloads/">https://redis.io/downloads/</a></p><h2 id="下载-MySQL-Nginx">下载 MySQL,Nginx</h2><p>这里用的是小皮面板，可以集成 Nginx,MySQL,FTP等服务,这里只用到了MySQL和Nginx<br>官方下载: <a href="https://www.xp.cn/php-study">https://www.xp.cn/php-study</a></p><h2 id="下载-Java">下载 Java</h2><p>这里用的是jdk21<br><a href="https://bell-sw.com/pages/downloads/">https://bell-sw.com/pages/downloads/</a></p><h2 id="下载-sentinel">下载 sentinel</h2><p>下载后放到Ruoyi-Cloud的jars文件夹(自建)内,此处用的是1.8.8版本<br><a href="https://github.com/alibaba/Sentinel/releases">https://github.com/alibaba/Sentinel/releases</a></p><h1>开发环境部署</h1><p>个人习惯将后端和前端分开，解压项目后将Ruoyi-Cloud文件夹重命名为ruoyi-master，将ruoyi-master内的ruoyi-ui跟ruoyi-master放到同级目录。<br>建议使用默认端口，放行8848,9848,7848,9849</p><h2 id="配置-Java-环境">配置 Java 环境</h2><p>解压 jdk-21_windows-x64_bin.zip 到不包含中文的目录下<br>打开环境变量<br><img src="a-a-e.png" alt=""><br><img src="a-a-f.png" alt=""><br>添加JAVA_HOME变量<br><img src="a-a-g.png" alt=""><br>点开Path变量<br><img src="a-a-h.png" alt=""><br>配置到bin目录<br><img src="a-a-i.png" alt=""><br>验证环境是否配置成功<br><img src="a-a-j.png" alt=""></p><h2 id="部署-nacos">部署 nacos</h2><p>解压 nacos-server-2.5.1.tar.gz 到不包含中文的目录下</p><h3 id="配置">配置</h3><p>编辑 nacos/bin/startup.cmd，修改 cluster 为 standalone<br>standalone 是单机部署 ， cluster 是集群部署<br><img src="a-a-a.png" alt=""></p><p>将ruoyi-master/docker/nacos/conf/application.properties文件复制到nacos/conf/application.properties，并打开nacos/conf/application.properties修改</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://mysql-host:3306/ry-config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string">password</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.naming.empty-service.auto-clean</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">nacos.naming.empty-service.clean.initial-delay-ms</span>=<span class="string">50000</span></span><br><span class="line"><span class="attr">nacos.naming.empty-service.clean.period-time-ms</span>=<span class="string">30000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management.endpoints.web.exposure.include</span>=<span class="string">*</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management.metrics.export.elastic.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">management.metrics.export.influx.enabled</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server.tomcat.accesslog.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.pattern</span>=<span class="string">%h %l %u %t &quot;%r&quot; %s %b %D %&#123;User-Agent&#125;i %&#123;Request-Source&#125;i</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server.tomcat.basedir</span>=<span class="string">D://home/ruoyi/nacos/tomcat/logs</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.security.ignore.urls</span>=<span class="string">/,/error,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-ui/public/**,/v1/auth/**,/v1/console/health/**,/actuator/**,/v1/console/server/**</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.core.auth.system.type</span>=<span class="string">nacos</span></span><br><span class="line"><span class="comment"># 开启认证</span></span><br><span class="line"><span class="attr">nacos.core.auth.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">nacos.core.auth.default.token.expire.seconds</span>=<span class="string">18000</span></span><br><span class="line"><span class="comment"># 此字段将 nacos.core.auth.default.token.secret.key 做替换，值为base64编码后字符串长度&gt;=32的字符串</span></span><br><span class="line"><span class="attr">nacos.core.auth.plugin.nacos.token.secret.key</span>=<span class="string">6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==</span></span><br><span class="line"><span class="attr">nacos.core.auth.caching.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">nacos.core.auth.enable.userAgentAuthWhite</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">nacos.core.auth.server.identity.key</span>=<span class="string">serverIdentity</span></span><br><span class="line"><span class="attr">nacos.core.auth.server.identity.value</span>=<span class="string">security</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.istio.mcp.server.enabled</span>=<span class="string">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="启动-nacos">启动 nacos</h3><p>双击或命令行运行 nacos/bin/startup.cmd<br>如果出现类似于这样的错误，删除startup.cmd内所有的rem行即可。<br><img src="a-a-b.png" alt=""><br>运行成功类似于下图<br><img src="a-a-c.png" alt=""></p><h2 id="部署-seata-server">部署 seata-server</h2><p>解压 apache-seata-2.3.0-incubating-bin.tar.gz 到不包含中文的目录下</p><h3 id="配置seata-server">配置seata-server</h3><p>编辑 seata-server/conf/application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7091</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">seata-server</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:logback-spring.xml</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">$&#123;log.home:$&#123;user.home&#125;/logs/seata&#125;</span></span><br><span class="line">  <span class="attr">extend:</span></span><br><span class="line">    <span class="attr">logstash-appender:</span></span><br><span class="line">      <span class="attr">destination:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:4560</span></span><br><span class="line">    <span class="attr">kafka-appender:</span></span><br><span class="line">      <span class="attr">bootstrap-servers:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9092</span></span><br><span class="line">      <span class="attr">topic:</span> <span class="string">logback_to_logstash</span></span><br><span class="line"></span><br><span class="line"><span class="attr">console:</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">seata</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">seata</span></span><br><span class="line"><span class="attr">seata:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="comment"># support: nacos, consul, apollo, zk, etcd3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span>  <span class="comment"># nacos地址</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">SEATA_GROUP</span>  <span class="comment"># 配置文件的分组</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span>  <span class="comment"># nacos用户名</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span>  <span class="comment"># nacos密码</span></span><br><span class="line">      <span class="comment"># 这是默认值</span></span><br><span class="line">      <span class="attr">data-id:</span> <span class="string">seata.properties</span>  <span class="comment"># 配置文件的data id也就是配置文件名加后缀</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="comment"># support: nacos, eureka, redis, zk, consul, etcd3, sofa</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">application:</span> <span class="string">seata-server</span>   <span class="comment">#seata启动后在nacos的服务名</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span>  <span class="comment"># nacos地址</span></span><br><span class="line">      <span class="attr">group:</span> <span class="string">SEATA_GROUP</span>  <span class="comment"># 配置文件的分组</span></span><br><span class="line">      <span class="attr">cluster:</span> <span class="string">default</span>  <span class="comment"># 这个歌参数在每个微服务seata时会用到</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span>  <span class="comment"># nacos用户名</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span>  <span class="comment"># nacos密码</span></span><br><span class="line">  <span class="attr">store:</span></span><br><span class="line">    <span class="comment"># support: file 、 db 、 redis</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">db</span></span><br><span class="line">  <span class="comment">#  server:</span></span><br><span class="line">  <span class="comment">#    service-port: 8091 #If not configured, the default is &#x27;$&#123;server.port&#125; + 1000&#x27;</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">  <span class="comment"># 此处的secretKey是nacos的 nacos.core.auth.plugin.nacos.token.secret.key</span></span><br><span class="line">    <span class="attr">secretKey:</span> <span class="string">6L+Z5piv5L2g55qE6ZW/5bqmPj0zMueahGJhc2U2NOe8lueggQ==</span></span><br><span class="line">    <span class="attr">tokenValidityInMilliseconds:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">csrf-ignore-urls:</span> <span class="string">/metadata/v1/**</span></span><br><span class="line">    <span class="attr">ignore:</span></span><br><span class="line">      <span class="attr">urls:</span> <span class="string">/,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.jpeg,/**/*.ico,/api/v1/auth/login,/version.json,/health,/error,/vgroup/v1/**</span></span><br></pre></td></tr></table></figure><h3 id="运行-seata-server">运行 seata-server</h3><p>seata-server/bin/seata-server.bat<br>运行成功类似于下图<br><img src="a-a-d.png" alt=""></p><h2 id="部署-redis">部署 redis</h2><p>解压 redis-7.4.2.zip 到不包含中文的目录下</p><h3 id="配置-redis">配置 redis</h3><p>如果不设置密码可以忽略配置<br>编辑 redis.conf<br>找到或添加配置 requirepass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass 密码</span><br></pre></td></tr></table></figure><h3 id="运行-redis">运行 redis</h3><p>运行成功类似于下图<br><img src="a-a-q.png" alt=""></p><h2 id="部署-mysql">部署 mysql</h2><p>打开小皮面板，安装成功后如下图<br><img src="a-a-w.png" alt=""><br>修改数据库密码<br><img src="a-a-r.png" alt=""><br>启动mysql<br><img src="a-a-t.png" alt=""></p><h3 id="配置-若依数据库">配置 若依数据库</h3><p>用可视化工具或命令行创建ry-cloud,ry-config,ry-seata三个库，数据库编码用utf8_general_ci<br>ry-cloud 导入 ruoyi-master/sql/ry_2025xxxx.sql (必须),ruoyi-master/sql/quartz.sql(可选)<br>ry-config 导入 ruoyi-master/sql/ry_config_2025xxxx.sql（必须）<br>ry-seata 导入 ruoyi-master/sql/ry_seata_2025xxxx.sql</p><h2 id="运行-sentinel">运行 sentinel</h2><p>cmd进入ruoyi-master/jars目录，运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar</span><br></pre></td></tr></table></figure><h2 id="后端运行">后端运行</h2><h3 id="配置-2">配置</h3><p>根据图片修改模块的配置<br><img src="a-a-y.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span> </span><br><span class="line">  <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-auth</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>网关端口就是前端所请求的端口<br><img src="a-a-u.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-gateway</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="comment"># 取消控制台懒加载</span></span><br><span class="line">      <span class="attr">eager:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="comment"># 控制台地址</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8718</span></span><br><span class="line">      <span class="comment"># nacos配置持久化</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">ds1:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">            <span class="attr">dataId:</span> <span class="string">sentinel-ruoyi-gateway</span></span><br><span class="line">            <span class="attr">groupId:</span> <span class="string">DEFAULT_GROUP</span></span><br><span class="line">            <span class="attr">data-type:</span> <span class="string">json</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">gw-flow</span></span><br></pre></td></tr></table></figure><p><img src="a-a-o.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-file</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="a-a-p.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9202</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-gen</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br></pre></td></tr></table></figure><p><img src="a-a-s.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9203</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-job</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br></pre></td></tr></table></figure><p><img src="a-a-k.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9201</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-system</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br></pre></td></tr></table></figure><p><img src="a-a-l.png" alt=""></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tomcat</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring</span></span><br><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ruoyi-monitor</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="comment"># 环境配置</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 服务注册地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="comment"># 配置中心地址</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="comment"># 配置文件格式</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="comment"># 共享配置</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">application-$&#123;spring.profiles.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span> <span class="comment"># nacos 密码</span></span><br></pre></td></tr></table></figure><h3 id="运行">运行</h3><p>打开 ruoyi-master 下的bin目录,先执行clean.bat清理,再执行package.bat打包。<br>打包完成后执行run-xxx.bat<br>run-gateway.bat,run-auth.bat,run-modules-system.bat这三个必须运行，其余可选。</p><h2 id="前端运行">前端运行</h2><h3 id="配置-3">配置</h3><p>打开vue.config.js，将下图位置配置为网关的端口和ip<br><img src="a-a-z.png" alt=""></p><h3 id="运行-2">运行</h3><p>先在命令行执行<code>npm install</code><br>再执行<code>npm run dev</code>即可运行<br><img src="a-a-z.png" alt=""></p><h1>生产环境部署</h1><p>在开发环境的基础上打包前后端代码即可对生产环境部署</p><h2 id="前端部署">前端部署</h2><p>在ruoyi-ui目录下执行<code>npm run build:prod</code>命令即可打包，打包完成后会生成dist目录，这个目录就是打包好的文件。<br><img src="a-a-v.png" alt=""><br><img src="a-a-n.png" alt=""><br>打开小皮面板将nginx启动并添加网站目录。<br><img src="a-a-m.png" alt=""><br><img src="a-b-a.png" alt=""><br>配置 Nginx 使前端的请求可以正确的转发到后端<br><img src="a-b-b.png" alt=""></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="comment"># 设置为部署目录</span></span><br><span class="line">        <span class="attribute">root</span>   <span class="string">&quot;D:/website/localhost_80&quot;</span>;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /prod-api/&#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:8080/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 避免actuator暴露</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$uri</span> <span class="regexp">~ &quot;/actuator&quot;)</span> &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后重启Nginx没有抛出错误即完成前端部署<br><img src="a-a-m.png" alt=""></p><h2 id="后端部署">后端部署</h2><p>部署前先运行起来 nacos,seata,mysql,redis，在开发环境中有写。<br>打开 ruoyi-master/bin 目录，执行 clean.bat,再执行package.bat进行打包<br>打包完成之后，根据下图把jar包复制出来用命令运行即可。<br><img src="a-b-q.png" alt=""><br><img src="a-b-w.png" alt=""><br>此处可扩展业务代码，每个模块下都有jar包。打包后都在每个模块下的target目录下。<br><img src="a-b-e.png" alt=""><br>最后还有下载的jars下的 sentinel-dashboard-1.8.8.jar 也要放到一起。<br><img src="a-b-r.png" alt=""><br>最后使用以下命令来运行所有jar包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java -jar xxx.jar</span><br><span class="line"><span class="comment"># sentinel需要用以下命令运行</span></span><br><span class="line">java -Dserver.port=8718 -Dcsp.sentinel.dashboard.server=localhost:8718 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719 -jar sentinel-dashboard-1.8.8.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="nacos" scheme="https://bestflyteng.github.io/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 和 Pinia 的使用</title>
    <link href="https://bestflyteng.github.io/posts/ffa41da9/"/>
    <id>https://bestflyteng.github.io/posts/ffa41da9/</id>
    <published>2025-03-24T11:31:51.000Z</published>
    <updated>2025-06-11T09:53:56.887Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Vue3-创建实例">Vue3 创建实例</h2><h3 id="使用-setup">使用 setup</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createApp &#125; = <span class="title class_">Vue</span></span><br><span class="line"><span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>) <span class="comment">// 挂载到 #app</span></span><br></pre></td></tr></table></figure><h3 id="使用-Options-API">使用 Options API</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createApp &#125; = <span class="title class_">Vue</span></span><br><span class="line"><span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;&#125;,</span><br><span class="line">    <span class="comment">// ...    </span></span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>) <span class="comment">// 挂载到 #app</span></span><br></pre></td></tr></table></figure><h2 id="Pinia-定义-Store">Pinia 定义 Store</h2><p><code>defineStore</code> 的第一个参数是 store 的 id，必须是唯一的。第二个参数是一个选项对象。</p><h3 id="使用-Setup-Store">使用 Setup Store</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref &#125; = <span class="title class_">Vue</span></span><br><span class="line"><span class="keyword">const</span> &#123; defineStore &#125; = <span class="title class_">Pinia</span></span><br><span class="line"><span class="keyword">const</span> useTestStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;test&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> doubleCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> count.<span class="property">value</span> * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        count.<span class="property">value</span>++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; count, doubleCount, increment &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用-Option-Store">使用 Option Store</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineStore &#125; = <span class="title class_">Pinia</span></span><br><span class="line"><span class="keyword">const</span> useTestStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;test&#x27;</span>, &#123;</span><br><span class="line">    <span class="comment">// 状态数据</span></span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">1</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 计算属性</span></span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Vue3-使用-Pinia">Vue3 使用 Pinia</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createApp, ref &#125; = <span class="title class_">Vue</span></span><br><span class="line"><span class="keyword">const</span> &#123; createPinia &#125; = <span class="title class_">Pinia</span></span><br><span class="line"><span class="comment">// 定义 Store</span></span><br><span class="line"><span class="keyword">const</span> useTestStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;test&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> doubleCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> count.<span class="property">value</span> * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        count.<span class="property">value</span>++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; count, doubleCount, increment &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Options API</span></span><br><span class="line"><span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">testStore</span>: <span class="title function_">useTestStore</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 使用 Pinia</span></span><br><span class="line">.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setup</span></span><br><span class="line"><span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> testStore = <span class="title function_">useTestStore</span>()</span><br><span class="line">        <span class="keyword">return</span> &#123; testStore &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 使用 Pinia</span></span><br><span class="line">.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; testStore.count &#125;&#125;</span><br><span class="line">    &#123;&#123; testStore.doubleCount &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;testStore.increment&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Vue3" scheme="https://bestflyteng.github.io/tags/Vue3/"/>
    
    <category term="Pinia" scheme="https://bestflyteng.github.io/tags/Pinia/"/>
    
  </entry>
  
  <entry>
    <title>CSS 媒体查询</title>
    <link href="https://bestflyteng.github.io/posts/3106d1e6/"/>
    <id>https://bestflyteng.github.io/posts/3106d1e6/</id>
    <published>2025-03-23T11:44:27.000Z</published>
    <updated>2025-06-11T09:53:56.890Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="媒体类型（Media-Type）​">媒体类型（Media Type）​</h3><h4 id="screen（屏幕）">screen（屏幕）</h4><h4 id="print（打印）">print（打印）</h4><h4 id="all（全部设备）">all（全部设备）</h4><h3 id="​媒体特性条件（Media-Feature）">​媒体特性条件（Media Feature）</h3><p>必须用括号包裹，如 (min-width: 900px)</p><h3 id="基本语法">基本语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> 媒体类型 <span class="keyword">and</span> (媒体特性条件) &#123;</span><br><span class="line">  <span class="comment">/* 样式规则 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例">示例</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单条件 */</span></span><br><span class="line"><span class="comment">/* 屏幕设备且宽度≥900px 时生效 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">article</span> &#123; <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">3rem</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 多条件 */</span></span><br><span class="line"><span class="comment">/* 屏幕设备、宽度≥900px 且横屏时生效 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">900px</span>) <span class="keyword">and</span> (<span class="attribute">orientation</span>: landscape) &#123;</span><br><span class="line">  <span class="selector-tag">article</span> &#123; <span class="attribute">padding</span>: <span class="number">2rem</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等效于 @media all and (min-width: 900px) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">article</span> &#123; <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">3rem</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用 ,（逗号）表示 ​逻辑或（OR） */</span></span><br><span class="line"><span class="comment">/* 屏幕设备且宽度≥900px，或打印设备时生效 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">900px</span>), print &#123;</span><br><span class="line">  <span class="selector-tag">article</span> &#123; <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">3rem</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CSS" scheme="https://bestflyteng.github.io/tags/CSS/"/>
    
    <category term="媒体查询" scheme="https://bestflyteng.github.io/tags/%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/"/>
    
    <category term="media" scheme="https://bestflyteng.github.io/tags/media/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript Promise 的使用</title>
    <link href="https://bestflyteng.github.io/posts/da4c0519/"/>
    <id>https://bestflyteng.github.io/posts/da4c0519/</id>
    <published>2025-03-06T12:32:55.000Z</published>
    <updated>2025-06-11T09:53:56.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Promise-的概念">Promise 的概念</h2><p>一个 <code>Promise</code> 必然处于以下几种状态之一：</p><ul><li>待定（<code>pending</code>）：初始状态，既没有被兑现，也没有被拒绝。</li><li>已兑现（<code>fulfilled</code>）：意味着操作成功完成。可以用then方法来处理。</li><li>已拒绝（<code>rejected</code>）：意味着操作失败。可以用catch方法来处理<br>如果一个 <code>Promise</code> 已经被兑现或拒绝，即不再处于待定状态，那么则称之为已敲定（<code>settled</code>）。<br><img src="a.png" alt=""></li></ul><h2 id="Promise-基本使用">Promise 基本使用</h2><h3 id="Promise-成功回调">Promise 成功回调</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise-失败回调">Promise 失败回调</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="string">&#x27;失败&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise-then-方法">Promise then 方法</h3><p><code>then</code> 方法用于指定当 <code>Promise</code> 对象状态变为已兑现（<code>fulfilled</code>）时，所执行的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise-catch-方法">Promise catch 方法</h3><p><code>catch</code> 方法用于指定当 <code>Promise</code> 对象状态变为已拒绝（<code>rejected</code>）时，所执行的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="string">&#x27;失败&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise-finally-方法">Promise finally 方法</h3><p>finally 方法用于指定不管 <code>Promise</code> 对象最后状态如何，都会执行的操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finally&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Promise-并发和静态方法">Promise 并发和静态方法</h2><p>Promise 类提供了四个静态方法来促进异步任务的并发：</p><p>所有这些方法都接受一个 Promise（确切地说是 thenable）的可迭代对象，并返回一个新的 Promise。它们都支持子类化，这意味着它们可以在 Promise 的子类上调用，结果将是一个属于子类类型的 Promise。为此，子类的构造函数必须实现与 Promise() 构造函数相同的签名——接受一个以 resolve 和 reject 回调函数作为参数的单个 executor 函数。子类还必须有一个 resolve 静态方法，可以像 Promise.resolve() 一样调用，以将值解析为 Promise。</p><p>请注意，JavaScript 的本质上是单线程的，因此在任何时刻，只有一个任务会被执行，尽管控制权可以在不同的 Promise 之间切换，从而使 Promise 的执行看起来是并发的。在 JavaScript 中，并行执行只能通过 worker 线程实现。</p><h3 id="Promise-all">Promise.all()</h3><p>仅在 ​所有传入的 <code>Promise</code> 都变为 <code>fulfilled</code>（成功）​​ 时才会返回结果数组。若其中​任意一个 <code>Promise</code> 变为 <code>rejected</code>（失败）​，则立即以该失败原因拒绝。<br>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当所有 Promise 成功时，返回的数组 ​严格按传入顺序排列结果，与完成先后无关：</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">2</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>)</span><br><span class="line">]).<span class="title function_">then</span>(<span class="variable language_">console</span>.<span class="property">log</span>); <span class="comment">// 输出 [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只要有一个 Promise 失败，立即终止并返回 ​首个遇到的错误：</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>) <span class="comment">// 此结果不会被处理</span></span><br><span class="line">]).<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">log</span>); <span class="comment">// 输出 &quot;error&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Promise-allSettled">Promise.allSettled()</h3><p>在所有的 Promise 都被敲定时兑现。<br>示例:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;Error in B&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">50</span>, <span class="string">&#x27;C&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">allSettled</span>([p1, p2, p3])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">results</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(results);</span><br><span class="line">    <span class="comment">/* 输出：</span></span><br><span class="line"><span class="comment">    [</span></span><br><span class="line"><span class="comment">      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;A&#x27; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; status: &#x27;rejected&#x27;, reason: &#x27;Error in B&#x27; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; status: &#x27;fulfilled&#x27;, value: &#x27;C&#x27; &#125;</span></span><br><span class="line"><span class="comment">    ]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="Promise-any">Promise.any()</h3><p>只要传入的 <code>Promise</code> 列表中 ​有任意一个变为 <code>fulfilled</code>（成功）​，<code>Promise.any()</code> 就会立即 ​返回该成功值，并忽略其他所有 <code>Promise</code> 的结果（无论其他 <code>Promise</code> 是成功还是失败）。仅在所有传入的 <code>Promise</code> 都变为 <code>rejected</code>（失败）时，才会返回一个被拒绝的 <code>Promise</code>，并返回该拒绝原因。<br>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 示例1：第一个成功值被返回</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">any</span>([</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error1&#x27;</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;success&#x27;</span>),</span><br><span class="line">  <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error2&#x27;</span>)</span><br><span class="line">]).<span class="title function_">then</span>(<span class="variable language_">console</span>.<span class="property">log</span>); <span class="comment">// 输出 &quot;success&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Promise-race">Promise.race()</h3><p>返回的 <code>Promise</code> 状态由​最先敲定（无论是 <code>fulfilled</code> 还是 <code>rejected</code>）​​ 的 <code>Promise</code> 决定，且 ​立即传递其值或原因。一旦首个 Promise 敲定，其他 Promise 的结果将被完全忽略，即使后续有其他 Promise 完成。<br>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个完成的 Promise 是成功</span></span><br><span class="line"><span class="keyword">const</span> fastSuccess = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> slowError = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">_, reject</span>) =&gt;</span> </span><br><span class="line">  <span class="built_in">setTimeout</span>(reject, <span class="number">100</span>, <span class="string">&#x27;超时错误&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">race</span>([fastSuccess, slowError])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;结果:&#x27;</span>, result)) <span class="comment">// 输出 &quot;结果: 成功&quot;</span></span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;错误:&#x27;</span>, error));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个完成的 Promise 是失败</span></span><br><span class="line"><span class="keyword">const</span> fastError = <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;请求失败&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> slowSuccess = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> </span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">100</span>, <span class="string">&#x27;延迟成功&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">race</span>([fastError, slowSuccess])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;结果:&#x27;</span>, result))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;错误:&#x27;</span>, error)); <span class="comment">// 输出 &quot;错误: 请求失败&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Promise-resolve">Promise.resolve()</h3><p>返回一个新的 Promise 对象，该对象以给定的值兑现。如果值是一个 thenable 对象（即具有 then 方法），则返回的 Promise 对象会“跟随”该 thenable 对象，采用其最终的状态；否则，返回的 Promise 对象会以该值兑现。</p><h3 id="Promise-reject">Promise.reject()</h3><p>返回一个新的 Promise 对象，该对象以给定的原因拒绝。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
    <category term="Promise" scheme="https://bestflyteng.github.io/tags/Promise/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 Web 练习</title>
    <link href="https://bestflyteng.github.io/posts/17b3dfa8/"/>
    <id>https://bestflyteng.github.io/posts/17b3dfa8/</id>
    <published>2025-02-26T10:33:31.000Z</published>
    <updated>2025-06-11T09:53:56.885Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="拼接url参数-简单">拼接url参数 (简单)</h3><p><img src="a.png" alt=""></p><h3 id="对函数参数相关词语进行规则匹配-中等">对函数参数相关词语进行规则匹配 (中等)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 假设生成的绘画数据数组为 artDataArray</span></span><br><span class="line"><span class="keyword">const</span> artDataArray = [</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img1.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;知更鸟、湖蓝色、十分可爱、皮克斯渲染&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img2.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;知更鸟、个性的眉毛、模糊毛皮&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img3.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;知更鸟、剪纸风格、个性的眉毛&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img4.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;知更鸟、油画、十分可爱、特殊的羽毛&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img5.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;男性、卡通、书、桌子&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img6.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;男性、卡通、玩具、眼镜&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img7.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;男性、卡通、玩具&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img8.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;男性、卡通、书&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img9.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;沙滩、遮阳伞、散步&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img10.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;沙滩、椰子树、一群人&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img11.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;沙滩、遮阳伞、人、包&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;imageUrl&quot;</span>: <span class="string">&quot;images/img12.jpg&quot;</span>, <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;沙滩、回忆、相框&quot;</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; imageCount 生成的图片数量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; selectedText 用户输入的文本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateAndDisplayImages</span>(<span class="params">imageCount, selectedText</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> imgAry = [] <span class="comment">// 定义最佳匹配的图片数组</span></span><br><span class="line">  <span class="comment">// TODO：待补充代码 </span></span><br><span class="line">  <span class="keyword">let</span> arr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; artDataArray.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> keyword = artDataArray[i].<span class="property">tags</span>.<span class="title function_">split</span>(<span class="string">&quot;、&quot;</span>)</span><br><span class="line">    arr[i] = &#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">data</span>: artDataArray[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; keyword.<span class="property">length</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span>(selectedText.<span class="title function_">indexOf</span>(keyword[j]) != -<span class="number">1</span>)</span><br><span class="line">        arr[i].<span class="property">count</span>++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sortArr = arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span> b.<span class="property">count</span> - a.<span class="property">count</span>).<span class="title function_">slice</span>(<span class="number">0</span>,imageCount)</span><br><span class="line">  sortArr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> imgAry.<span class="title function_">push</span>(item.<span class="property">data</span>))</span><br><span class="line">  <span class="comment">//TODO：END</span></span><br><span class="line">  <span class="keyword">return</span> imgAry;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="简易JSX解析器-中等">简易JSX解析器 (中等)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type 要渲染的元素类型，即标签名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> config 包含标签属性或事件函数的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">jsx</span> = (<span class="params">type, config</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">/* <span class="doctag">TODO:</span> 待补充代码 */</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(type,config);</span><br><span class="line">  <span class="keyword">let</span> dom = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(type)</span><br><span class="line">  <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(config.<span class="property">children</span>) === <span class="string">&#x27;[object String]&#x27;</span>)&#123;</span><br><span class="line">    dom.<span class="property">innerHTML</span> += config.<span class="property">children</span>  </span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; config.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(config.<span class="property">children</span>[i]) === <span class="string">&#x27;[object String]&#x27;</span>)&#123;</span><br><span class="line">    dom.<span class="property">innerHTML</span> += config.<span class="property">children</span>[i]</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    dom.<span class="title function_">appendChild</span>(config.<span class="property">children</span>[i])</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(config[<span class="string">&#x27;style&#x27;</span>] !== <span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> styleKeys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(config[<span class="string">&#x27;style&#x27;</span>])</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">of</span> styleKeys) &#123;</span><br><span class="line">      dom.<span class="property">style</span>[key] = config[<span class="string">&#x27;style&#x27;</span>][key]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">const</span> configKeys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(config)</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">of</span> configKeys) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(config[key]) === <span class="string">&#x27;[object Function]&#x27;</span>)&#123;</span><br><span class="line">      dom[key] = config[key]</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">of</span> configKeys) &#123;</span><br><span class="line">  <span class="keyword">if</span>(key !== <span class="string">&#x27;children&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(config[key]) === <span class="string">&#x27;[object String]&#x27;</span>)&#123;</span><br><span class="line">      dom.<span class="title function_">setAttribute</span>(key,config[key])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> dom</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Github-明星项目统计">Github 明星项目统计</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">changeHandle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// TODO：待补充代码</span></span><br><span class="line">    <span class="keyword">const</span> arr = []</span><br><span class="line">    <span class="keyword">if</span>(language.<span class="property">value</span> === <span class="string">&#x27;All&#x27;</span>)</span><br><span class="line">        arr.<span class="title function_">push</span>(...chartData.<span class="property">value</span>)</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        arr.<span class="title function_">push</span>(...chartData.<span class="property">value</span></span><br><span class="line">        .<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">language</span> === language.<span class="property">value</span>)</span><br><span class="line">        .<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>)=&gt;</span>b.<span class="property">stars</span> - a.<span class="property">stars</span>)</span><br><span class="line">        .<span class="title function_">slice</span>(pageStart.<span class="property">value</span>-<span class="number">1</span>,pageEnd.<span class="property">value</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    xData.<span class="property">value</span> = arr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">name</span>)</span><br><span class="line">    yData.<span class="property">value</span> = arr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">stars</span>)</span><br><span class="line">    <span class="title function_">initChart</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="小蓝驿站">小蓝驿站</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">addContact</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// TODO：待补充代码 目标 2 </span></span><br><span class="line">    <span class="keyword">const</span> data = contacts.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>item.<span class="property">letter</span> === newContact.<span class="property">value</span>[<span class="number">0</span>].<span class="title function_">toUpperCase</span>())</span><br><span class="line">    <span class="keyword">if</span>(data.<span class="property">length</span> === <span class="number">0</span>)&#123;</span><br><span class="line">        contacts.<span class="property">value</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">            <span class="attr">contacts</span>:[&#123;<span class="attr">name</span>:newContact.<span class="property">value</span>&#125;],</span><br><span class="line">            <span class="attr">letter</span>:newContact.<span class="property">value</span>[<span class="number">0</span>].<span class="title function_">toUpperCase</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; contacts.<span class="property">value</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(contacts.<span class="property">value</span>[i].<span class="property">letter</span> === newContact.<span class="property">value</span>[<span class="number">0</span>].<span class="title function_">toUpperCase</span>())&#123;</span><br><span class="line">                contacts.<span class="property">value</span>[i].<span class="property">contacts</span>.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:newContact.<span class="property">value</span>&#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// TODO：END</span></span><br><span class="line">    <span class="comment">// 添加完成清空联系人输入框</span></span><br><span class="line">    newContact.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="搜索重试">搜索重试</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个重试函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">func</span>&#125; operation 要作用的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; maxAttempts 最大重试次数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delayBetweenRetries 重试之间的时间间隔</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">retry</span>(<span class="params">operation, maxAttempts, delayBetweenRetries</span>) &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span>待补充代码</span></span><br><span class="line">  <span class="keyword">let</span> attempt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (attempt &lt; maxAttempts) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 尝试执行操作</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">operation</span>(); <span class="comment">// 如果成功，返回结果</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      attempt++; <span class="comment">// 增加尝试次数</span></span><br><span class="line">      <span class="keyword">if</span> (attempt &gt;= maxAttempts) &#123;</span><br><span class="line">        <span class="comment">// return new Promise((res,rej)=&gt;rej(error))</span></span><br><span class="line">        <span class="keyword">throw</span> error</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 如果失败，等待指定的时间再重试</span></span><br><span class="line">      <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, delayBetweenRetries));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="购物狂欢节">购物狂欢节</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchProducts</span>(<span class="params">category</span>) &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> 根据分类获取商品数据</span></span><br><span class="line">  products.<span class="property">value</span> = []</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`api/products/<span class="subst">$&#123;category&#125;</span>.json`</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>res.<span class="title function_">json</span>())</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    products.<span class="property">value</span>.<span class="title function_">push</span>(data[i])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> products = <span class="title function_">ref</span>([]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addProduct</span>(<span class="params">product</span>) &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> 添加商品到购物车，如果商品已存在，则数量+1</span></span><br><span class="line">  <span class="keyword">if</span>(products.<span class="property">value</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">e</span>)=&gt;</span>e.<span class="property">id</span> === product.<span class="property">id</span>))&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; products.<span class="property">value</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span>(products.<span class="property">value</span>[i].<span class="property">id</span> === product.<span class="property">id</span>)&#123;</span><br><span class="line">        products.<span class="property">value</span>[i].<span class="property">quantity</span> += <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    product.<span class="property">quantity</span> = <span class="number">1</span></span><br><span class="line">    products.<span class="property">value</span>.<span class="title function_">push</span>(product)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> totalPrice = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> 计算总价</span></span><br><span class="line">  <span class="keyword">return</span> products.<span class="property">value</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc,item</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> acc + item.<span class="property">price</span> * item.<span class="property">quantity</span></span><br><span class="line">  &#125;,<span class="number">0</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
    <category term="蓝桥杯" scheme="https://bestflyteng.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue 计算属性 computed</title>
    <link href="https://bestflyteng.github.io/posts/39f2161a/"/>
    <id>https://bestflyteng.github.io/posts/39f2161a/</id>
    <published>2025-02-22T05:33:29.000Z</published>
    <updated>2025-06-11T09:53:56.881Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>当 computed 内部的变量发生了变化，computed 会重新计算，并返回新的值。</p><h3 id="函数式写法">函数式写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 可以通过模板语法直接使用 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123; </span><br><span class="line">    computed:&#123;  </span><br><span class="line">        sum()&#123;  </span><br><span class="line">            return this.num1 + this.num2  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="setup-写法">setup 写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 可以通过模板语法直接使用 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123; </span><br><span class="line">    setup()&#123;  </span><br><span class="line">        const num1 = ref(1)  </span><br><span class="line">        const num2 = ref(1)  </span><br><span class="line">        let sum = computed(()=&gt;&#123;  </span><br><span class="line">            return num1.value + num2.value   </span><br><span class="line">        &#125;) </span><br><span class="line">        return &#123;</span><br><span class="line">            sum</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="options-写法">options 写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 可以通过模板语法直接使用 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; sum &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123; </span><br><span class="line">    computed:&#123; </span><br><span class="line">        sum:&#123;  </span><br><span class="line">            get()&#123; </span><br><span class="line">                return this.num1 * this.num2</span><br><span class="line">            &#125;,</span><br><span class="line">            set(value)&#123; </span><br><span class="line">                this.num1 = value / 2 </span><br><span class="line">                this.num2 = value / 3</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
    <category term="Vue3" scheme="https://bestflyteng.github.io/tags/Vue3/"/>
    
    <category term="Computed" scheme="https://bestflyteng.github.io/tags/Computed/"/>
    
  </entry>
  
  <entry>
    <title>JS 判断数据类型</title>
    <link href="https://bestflyteng.github.io/posts/e001cad0/"/>
    <id>https://bestflyteng.github.io/posts/e001cad0/</id>
    <published>2025-02-13T02:53:33.000Z</published>
    <updated>2025-06-11T09:53:56.853Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// typeof 操作符可以返回一个值的类型。对于对象（包括数组和 null），typeof 会返回 &quot;object&quot;，但它不能区分数组和对象，因此需要额外判断。</span></span><br><span class="line"><span class="keyword">typeof</span> value</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回 [object Type]，value可以是任意值</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(value)</span><br><span class="line"></span><br><span class="line"><span class="comment">// instanceof 运算符可以判断一个对象是否是某个构造函数的实例。如果需要判断一个对象是否是 Object 类型的实例，可以使用 instanceof Object。</span></span><br><span class="line"><span class="comment">// 需要注意，instanceof 对数组和对象都会返回 true，因此需要 value !== null 排除 null。</span></span><br><span class="line">value <span class="keyword">instanceof</span> <span class="title class_">Constructor</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 定义和使用 Porps</title>
    <link href="https://bestflyteng.github.io/posts/9245de08/"/>
    <id>https://bestflyteng.github.io/posts/9245de08/</id>
    <published>2025-02-13T02:27:20.000Z</published>
    <updated>2025-06-11T09:53:56.855Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; description &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; defineProps &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 定义 Props，在 setup 中props是自动解构的，不需要通过 props.title 来访问</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">defineProps</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">title</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 定义 props 的数据类型</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: string,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// required 标明这个 prop 是必传的，属性是可选的，默认为 false，</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">validator</span>(<span class="params">value</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 自定义校验函数，返回 true 表示校验通过，返回 false 表示校验失败</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> [<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>].<span class="title function_">includes</span>(value)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">description</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 为 prop 提供默认值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">default</span>: <span class="string">&#x27;Default description&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Vue3" scheme="https://bestflyteng.github.io/tags/Vue3/"/>
    
    <category term="Props" scheme="https://bestflyteng.github.io/tags/Props/"/>
    
  </entry>
  
  <entry>
    <title>JS DOM 创建与获取</title>
    <link href="https://bestflyteng.github.io/posts/16e4e576/"/>
    <id>https://bestflyteng.github.io/posts/16e4e576/</id>
    <published>2025-02-12T07:07:57.000Z</published>
    <updated>2025-06-11T09:53:56.851Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="创建节点">创建节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个元素节点，参数为标签名</span></span><br><span class="line">ele.<span class="title function_">createElement</span>(<span class="string">&quot;p&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="创建文本节点">创建文本节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个文本节点，参数为文本内容</span></span><br><span class="line">ele.<span class="title function_">createTextNode</span>(<span class="string">&quot;文本内容&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="在元素内部的末尾添加节点">在元素内部的末尾添加节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在元素内部的末尾添加节点，参数为要添加的节点</span></span><br><span class="line">ele.<span class="title function_">appendChild</span>(node)</span><br></pre></td></tr></table></figure><h3 id="在元素内部的末尾添加内容或节点">在元素内部的末尾添加内容或节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// args 参数可以是 DOM 节点、DOM 节点数组、HTML 字符串、文本字符串</span></span><br><span class="line">ele.<span class="title function_">append</span>(...args)</span><br></pre></td></tr></table></figure><h3 id="在元素内，将节点添加到指定节点之前，返回添加的子节点">在元素内，将节点添加到指定节点之前，返回添加的子节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果给定的节点已经存在于文档中， 会将其从当前位置移动到新位置。（也就是说，它会在附加到指定的新父节点之前自动从现有的父节点中移除。）这意味着一个节点不能同时存在于文档的两个位置。</span></span><br><span class="line">ele.<span class="title function_">insertBefore</span>(newNode, node);</span><br></pre></td></tr></table></figure><h3 id="删除节点">删除节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除 ele 节点，包括其子节点</span></span><br><span class="line">ele.<span class="title function_">remove</span>()</span><br></pre></td></tr></table></figure><h3 id="删除子节点">删除子节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.<span class="title function_">removeChild</span>(childNode);</span><br></pre></td></tr></table></figure><h3 id="替换节点">替换节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.<span class="title function_">replaceChild</span>(newNode, oldNode);</span><br></pre></td></tr></table></figure><h3 id="克隆节点">克隆节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数为 true，则执行深拷贝，复制节点及其子节点；参数为 false，则执行浅拷贝，只复制节点本身，不复制子节点。(默认为false)</span></span><br><span class="line">ele.<span class="title function_">cloneNode</span>(deep);</span><br></pre></td></tr></table></figure><h3 id="获取父节点">获取父节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.<span class="property">parentNode</span></span><br></pre></td></tr></table></figure><h3 id="找到最近的指定父节点">找到最近的指定父节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.<span class="title function_">closest</span>(<span class="string">&quot;selector&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="获取节点">获取节点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素节点，参数为id名</span></span><br><span class="line">ele.<span class="title function_">getElementById</span>(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"><span class="comment">// 获取元素节点，参数为class名</span></span><br><span class="line">ele.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;class&quot;</span>)</span><br><span class="line"><span class="comment">// 获取元素节点，参数为标签名</span></span><br><span class="line">ele.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tag&quot;</span>)</span><br><span class="line"><span class="comment">// 获取元素节点，参数为任何选择器</span></span><br><span class="line">ele.<span class="title function_">querySelector</span>(<span class="string">&quot;selector&quot;</span>)</span><br><span class="line"><span class="comment">// 获取元素节点，参数为任何选择器</span></span><br><span class="line">ele.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;selector&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS 用 Set 实现 交集、并集、差集</title>
    <link href="https://bestflyteng.github.io/posts/4cafe26/"/>
    <id>https://bestflyteng.github.io/posts/4cafe26/</id>
    <published>2025-02-12T05:36:24.000Z</published>
    <updated>2025-06-11T09:53:56.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交集</span></span><br><span class="line"><span class="keyword">let</span> intersect = <span class="keyword">new</span> <span class="title class_">Set</span>([...a].<span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> b.<span class="title function_">has</span>(x)));</span><br><span class="line"><span class="comment">// set &#123;2, 3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 并集</span></span><br><span class="line"><span class="keyword">let</span> union = <span class="keyword">new</span> <span class="title class_">Set</span>([...a, ...b]);</span><br><span class="line"><span class="comment">// Set &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 差集</span></span><br><span class="line"><span class="keyword">let</span> difference = <span class="keyword">new</span> <span class="title class_">Set</span>([...a].<span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> !b.<span class="title function_">has</span>(x)));</span><br><span class="line"><span class="comment">// Set &#123;1&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="https://bestflyteng.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 3.4.1 + Spring security 6.4.2 重写登录</title>
    <link href="https://bestflyteng.github.io/posts/86d63d83/"/>
    <id>https://bestflyteng.github.io/posts/86d63d83/</id>
    <published>2025-02-09T01:18:44.000Z</published>
    <updated>2025-06-11T09:53:56.847Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="依赖引入">依赖引入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-jsqlparser-4.9<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-spring-boot3-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.yulichang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-join-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写数据表实体类">编写数据表实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">  <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">  <span class="keyword">private</span> Long id;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="meta">@NotBlank</span></span><br><span class="line">  <span class="meta">@Email</span></span><br><span class="line">  <span class="keyword">private</span> String email;</span><br><span class="line">  <span class="meta">@NotBlank</span></span><br><span class="line">  <span class="keyword">private</span> String password;</span><br><span class="line">  <span class="keyword">private</span> String persona;</span><br><span class="line">  <span class="keyword">private</span> String enabled;</span><br><span class="line">  <span class="keyword">private</span> String avatar;</span><br><span class="line">  <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写-UserDetails-的实现类">编写 UserDetails 的实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLogin</span> <span class="keyword">implements</span> <span class="title class_">UserDetails</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> Collection&lt;? <span class="keyword">extends</span> <span class="title class_">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class="line">    <span class="keyword">return</span> List.of(<span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(<span class="string">&quot;ROLE_&quot;</span> + user.getPersona()));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> user.getPassword();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 使用邮箱登录</span></span><br><span class="line">    <span class="keyword">return</span> user.getEmail();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> UserDetails.<span class="built_in">super</span>.isAccountNonExpired();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAccountNonLocked</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> UserDetails.<span class="built_in">super</span>.isAccountNonLocked();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isCredentialsNonExpired</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> UserDetails.<span class="built_in">super</span>.isCredentialsNonExpired();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 使用1表示启用，0表示禁用</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;1&quot;</span>.equals(user.getEnabled());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写-UserMapper-接口">编写 UserMapper 接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">MPJBaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写-UserDetailsService-的实现类">编写 UserDetailsService 的实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">    <span class="comment">//查询用户信息</span></span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(User::getEmail, username);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectOne(queryWrapper);</span><br><span class="line">    <span class="comment">//如果没有查询到用户，就抛出异常</span></span><br><span class="line">    <span class="keyword">if</span> (Objects.isNull(user)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadCredentialsException</span>(<span class="string">&quot;用户名或者密码错误！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将数据封装成UserDetails</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserLogin</span>(user);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写自定义控制器">编写自定义控制器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> IUserService userService;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> User user)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> userService.login(user);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写-userServiceImpl-实现类">编写 userServiceImpl 实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">login</span><span class="params">(User user)</span> &#123;</span><br><span class="line">  <span class="comment">// 进行用户认证，用邮箱作为用户名登陆</span></span><br><span class="line">  <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(user.getEmail(), user.getPassword());</span><br><span class="line">  <span class="type">Authentication</span> <span class="variable">authenticate</span> <span class="operator">=</span> authenticationManager.authenticate(authenticationToken);</span><br><span class="line">  <span class="comment">//通过了，生成jwt</span></span><br><span class="line">  <span class="type">UserLogin</span> <span class="variable">loginUser</span> <span class="operator">=</span> (UserLogin) authenticate.getPrincipal();</span><br><span class="line">  <span class="comment">// 可以选择存放在redis ......</span></span><br><span class="line">  Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  <span class="comment">// 将token返回给前端</span></span><br><span class="line">  map.put(<span class="string">&quot;token&quot;</span>, token);</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://bestflyteng.github.io/tags/Spring/"/>
    
    <category term="Spring security" scheme="https://bestflyteng.github.io/tags/Spring-security/"/>
    
  </entry>
  
  <entry>
    <title>docker 部署 nginx</title>
    <link href="https://bestflyteng.github.io/posts/837c427b/"/>
    <id>https://bestflyteng.github.io/posts/837c427b/</id>
    <published>2025-02-07T05:55:00.000Z</published>
    <updated>2025-06-11T09:53:56.843Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="1-拉取-nginx-镜像">1. 拉取 nginx 镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><h3 id="2-运行容器">2. 运行容器</h3><p>这里我映射到了本地的9000端口，可以根据需要修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name nginx -p 9000:80 -d nginx</span><br></pre></td></tr></table></figure><h3 id="3-浏览器访问">3. 浏览器访问</h3><p>浏览器访问 <code>http://ip:9000</code>，如果看到下图则表示 nginx 部署成功<br><img src="a.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="docker" scheme="https://bestflyteng.github.io/tags/docker/"/>
    
    <category term="nginx" scheme="https://bestflyteng.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 + Element Plus 自定义验证</title>
    <link href="https://bestflyteng.github.io/posts/f5b25be3/"/>
    <id>https://bestflyteng.github.io/posts/f5b25be3/</id>
    <published>2025-01-25T07:34:26.000Z</published>
    <updated>2025-06-11T09:53:56.841Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> type &#123;<span class="title class_">FormInstance</span>, <span class="title class_">FormRules</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="comment">// 判断是否是移动端的函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;isMobileDevice&#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/commonMethod&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义表单数据类型</span></span><br><span class="line">interface <span class="title class_">RuleForm</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: string</span><br><span class="line">  <span class="attr">password</span>: string</span><br><span class="line">  <span class="attr">confirmPassword</span>: string</span><br><span class="line">  <span class="attr">email</span>: string</span><br><span class="line">  <span class="attr">code</span>: string</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取表单实例，常量名对应ref属性</span></span><br><span class="line"><span class="keyword">const</span> ruleFormRef = ref&lt;<span class="title class_">FormInstance</span>&gt;()</span><br><span class="line"><span class="comment">// 以下两个 validate* 函数，必须调用回调函数，否则最后提交会卡住</span></span><br><span class="line"><span class="comment">// 定义验证确认密码函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validatePass</span> = (<span class="params">rule: object, value: string, callback: (error?: <span class="built_in">Error</span>) =&gt; <span class="keyword">void</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value !== form.<span class="property">password</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;两次密码不一致&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义验证邮箱函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateEmail</span> = (<span class="params">rule: object, value: string, callback: (error?: <span class="built_in">Error</span>) =&gt; <span class="keyword">void</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> reg = <span class="regexp">/^[A-Za-z0-9_\-]+(\.[A-Za-z0-9_\-]+)*@[A-Za-z0-9\-]+\.[A-Za-z]&#123;2,&#125;$/</span></span><br><span class="line">  <span class="keyword">if</span> (!reg.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;邮箱不合法&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义表单数据</span></span><br><span class="line"><span class="keyword">const</span> form = reactive&lt;<span class="title class_">RuleForm</span>&gt;(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">confirmPassword</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">code</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 定义表单验证规则</span></span><br><span class="line"><span class="keyword">const</span> rules = reactive&lt;<span class="title class_">FormRules</span>&lt;<span class="title class_">RuleForm</span>&gt;&gt;(&#123;</span><br><span class="line">  <span class="attr">name</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入昵称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">min</span>: <span class="number">1</span>, <span class="attr">max</span>: <span class="number">20</span>, <span class="attr">message</span>: <span class="string">&#x27;长度应是1-20&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">email</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入邮箱&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">validator</span>: validateEmail, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">code</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入邮箱验证码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">min</span>: <span class="number">6</span>, <span class="attr">max</span>: <span class="number">6</span>, <span class="attr">message</span>: <span class="string">&#x27;长度应是6&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">password</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">min</span>: <span class="number">8</span>, <span class="attr">max</span>: <span class="number">16</span>, <span class="attr">message</span>: <span class="string">&#x27;长度应是8-16&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">confirmPassword</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请确认密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">validator</span>: validatePass, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 提交表单</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">submitForm</span> = (<span class="params">formEl: FormInstance | <span class="literal">undefined</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!formEl) <span class="keyword">return</span></span><br><span class="line"><span class="comment">// 如果上面的两个 validate* 函数没有调用回调函数，则这里会卡住</span></span><br><span class="line">  formEl.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(valid)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 重置表单</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resetForm</span> = (<span class="params">formEl: FormInstance | <span class="literal">undefined</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!formEl) <span class="keyword">return</span></span><br><span class="line">  formEl.<span class="title function_">resetFields</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> timer = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> show = <span class="title function_">ref</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> time = <span class="number">120</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getCode</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">//axios请求</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(form.<span class="property">email</span>);</span><br><span class="line">  <span class="comment">// 验证码倒计时</span></span><br><span class="line">  <span class="keyword">if</span> (timer.<span class="property">value</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    count.<span class="property">value</span> = time;</span><br><span class="line">    show.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">    timer.<span class="property">value</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (count.<span class="property">value</span> &gt; <span class="number">0</span> &amp;&amp; count.<span class="property">value</span> &lt;= time) &#123;</span><br><span class="line">        count.<span class="property">value</span>--;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        show.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer.<span class="property">value</span>);</span><br><span class="line">        timer.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;registry&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;width: isMobileDevice() ? &#x27;90%&#x27; : &#x27;50%&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:ref</span>=<span class="string">&quot;ruleFormRef&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">&quot;auto&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;demo-ruleForm&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">size</span>=<span class="string">&quot;default&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">status-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;昵称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.email&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;code&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.code&quot;</span> <span class="attr">style</span>=<span class="string">&quot;flex:10;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getCode&quot;</span> <span class="attr">round</span> <span class="attr">style</span>=<span class="string">&quot;flex: 1;margin: 0 0 0 1rem&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;show&quot;</span>&gt;</span>发送验证码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;!show&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;confirmPassword&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.confirmPassword&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitForm(ruleFormRef)&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;resetForm(ruleFormRef)&quot;</span>&gt;</span>Reset<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安装并使用 GitStack</title>
    <link href="https://bestflyteng.github.io/posts/7baecab0/"/>
    <id>https://bestflyteng.github.io/posts/7baecab0/</id>
    <published>2024-12-15T07:08:51.000Z</published>
    <updated>2025-06-11T09:53:56.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="下载-GitStack">下载 GitStack</h3><p><a href="https://gitstack.com/download/">下载地址</a></p><h3 id="安装-GitStack">安装 GitStack</h3><ol><li>下载完成后，双击运行 <code>GitStackSetup.exe</code> 文件，点击 <code>Next</code>。<br><img src="a.png" alt=""></li><li>点击 <code>I Agree</code>。<br><img src="b.png" alt=""></li><li>选择安装位置，点击 <code>Next</code>。<br><img src="c.png" alt=""></li><li>画红框的必须全选，不然会出一些意想不到的错误，而后点击 <code>Install</code><br><img src="d.png" alt=""></li><li>如果选择了Launch GitStack选项，那么点击<code>Finish</code>后会自动打开GitStack的管理页面。安装完成后，点击 <code>Finish</code>。<br><img src="e.png" alt=""></li></ol><h3 id="使用-GitStack">使用 GitStack</h3><ol><li>打开浏览器，输入<code>http://localhost/gitstack</code>，跳转到以下页面，默认用户名密码是admin/admin，点击<code>Sign In</code>登录。<br><img src="f.png" alt=""></li><li>登录成功后，可以在这里添加一个新的仓库，输入新仓库的名称(字母和数字组合)，而后点击<code>Create</code>。<br><img src="g.png" alt=""></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="GitStack" scheme="https://bestflyteng.github.io/tags/GitStack/"/>
    
    <category term="Git" scheme="https://bestflyteng.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Spark Sql 常用函数 (Scala 语言)</title>
    <link href="https://bestflyteng.github.io/posts/eca3873f/"/>
    <id>https://bestflyteng.github.io/posts/eca3873f/</id>
    <published>2024-11-25T10:36:22.000Z</published>
    <updated>2025-06-11T09:53:56.838Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>基于 org.apache.spark.sql.functions._ 包下的函数</p><h3 id="col">col</h3><p>用于在DataFrame或Dataset中引用列，通常与Spark的SQL查询或者DataFrame操作一起使用。<br>语法：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">col(colName: <span class="type">String</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="column">column</h3><p>与 col 函数功能相同。</p><h3 id="lit">lit</h3><p>用于将一个常量值转换为 Column 类型，以便在 Spark SQL 操作中使用。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lit(literal: <span class="type">Any</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="typeLit">typeLit</h3><p>typedLit 函数是一个类型安全的版本的 lit 函数。它用于将字面量（常量）转换为指定类型的 Column，并确保在编译时类型匹配。typedLit 适用于 Spark 3.x 版本，提供比 lit 更严格的类型检查，从而避免潜在的类型不匹配问题。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typedLit[<span class="type">T</span>: <span class="type">TypeTag</span>](literal: <span class="type">T</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="greatest">greatest</h3><p>用于比较多列的值，返回每行中这些列中的最大值。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">greatest(exprs: <span class="type">Column</span>*): <span class="type">Column</span></span><br><span class="line">greatest(columnName: <span class="type">String</span>, columnNames: <span class="type">String</span>*): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="current-date">current_date</h3><p>返回当前的日期（以 yyyy-MM-dd 格式表示）。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_date(): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="date-sub">date_sub</h3><p>用于从指定的日期中减去给定的天数，并返回新的日期。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date_sub(start: <span class="type">Column</span>, days: <span class="type">Int</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="date-format">date_format</h3><p>用于将日期类型的数据格式化为指定的字符串格式。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date_format(dateExpr: <span class="type">Column</span>, format: <span class="type">String</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="when">when</h3><p>条件表达式，通常与 otherwise() 函数一起使用，用于根据条件返回不同的值。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">when(condition: <span class="type">Column</span>, value: <span class="type">Any</span>): <span class="type">Column</span></span><br><span class="line">    .otherwise(value: <span class="type">Any</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="max">max</h3><p>它通常用于对数值型数据进行分组聚合，或者在没有分组时返回整个列的最大值。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max(e: <span class="type">Column</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="to-timestamp">to_timestamp</h3><p>将一个字符串或者日期列转换为 timestamp 类型。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">to_timestamp(s: <span class="type">Column</span>): <span class="type">Column</span></span><br><span class="line">to_timestamp(s: <span class="type">Column</span>, fmt: <span class="type">String</span>): <span class="type">Column</span></span><br></pre></td></tr></table></figure><h3 id="row-number">row_number</h3><p>用于为每个分组中的行分配一个唯一的递增整数值。它通常与窗口函数一起使用，以实现更复杂的分组和排序操作。<br>以下示例是基于 id 列进行分组，并按照 time 列进行降序排序，为每个分组中的行分配一个唯一的行号。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">row_number()</span><br><span class="line">    .over(</span><br><span class="line">        <span class="type">Window</span></span><br><span class="line">            .partitionBy(<span class="string">&quot;id&quot;</span>)</span><br><span class="line">            .orderBy(desc(<span class="string">&quot;time&quot;</span>))</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Spark" scheme="https://bestflyteng.github.io/tags/Spark/"/>
    
    <category term="Scala" scheme="https://bestflyteng.github.io/tags/Scala/"/>
    
  </entry>
  
  <entry>
    <title>Spark 增量抽取 (Scala 实现)</title>
    <link href="https://bestflyteng.github.io/posts/98adaf32/"/>
    <id>https://bestflyteng.github.io/posts/98adaf32/</id>
    <published>2024-11-23T13:13:14.000Z</published>
    <updated>2025-06-11T09:53:56.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="题目">题目</h3><p>编写Scala代码，使用Spark将MySQL的shtd_store库中表user_info、sku_info、base_province、base_region、order_info、order_detail的数据增量抽取到Hive的ods库中对应表user_info、sku_info、base_province、base_region、order_info、order_detail中。(若ods库中部分表没有数据，正常抽取即可)</p><h3 id="第一题">第一题</h3><p>1、抽取shtd_store库中user_info的增量数据进入Hive的ods库中表user_info。根据ods.user_info表中operate_time或create_time作为增量字段(即MySQL中每条数据取这两个时间中较大的那个时间作为增量字段去和ods里的这两个字段中较大的时间进行比较)，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.user_info命令。</p><h4 id="代码">代码</h4><p><img src="code.png" alt=""><br><img src="a.png" alt=""></p><h3 id="第二题">第二题</h3><p>2、抽取shtd_store库中sku_info的增量数据进入Hive的ods库中表sku_info。根据ods.sku_info表中create_time作为增量字段，只将新增的数据抽入，字段名称、类型不变，同时添加静态分区，分区字段为etl_date，类型为String，且值为当前比赛日的前一天日期（分区字段格式为yyyyMMdd）。使用hive cli执行show partitions ods.sku_info命令。</p><h4 id="代码-2">代码</h4><p><img src="b.png" alt=""><br><img src="c.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Spark" scheme="https://bestflyteng.github.io/tags/Spark/"/>
    
    <category term="Scala" scheme="https://bestflyteng.github.io/tags/Scala/"/>
    
    <category term="大数据" scheme="https://bestflyteng.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>docker 映射端口外部设备访问不到</title>
    <link href="https://bestflyteng.github.io/posts/fa5b3dfc/"/>
    <id>https://bestflyteng.github.io/posts/fa5b3dfc/</id>
    <published>2024-11-15T03:54:27.000Z</published>
    <updated>2025-06-11T09:53:56.832Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="容器内部">容器内部</h3><p>查看服务是否开启，以nginx为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>返回类似于以下图片，说明服务已经启动<br><img src="ps.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>如果容器有防火墙，可以先关闭防火墙试一下<br>先查一下防火墙的状态，如果为下图就是关着呢<br><img src="firewalld.png" alt=""></p><h3 id="宿主机">宿主机</h3><p>先看容器是否正确映射端口<br>下图画红框的地方就是将容器内部的nginx服务映射到宿主机的32770端口，如果这里没有映射，那么外部设备肯定访问不到。<br><img src="a.png" alt=""></p><p>查看宿主机端口是否开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tlnp | grep 32770</span><br></pre></td></tr></table></figure><p>类似于以下输出，说明端口没问题<br><img src="b.png" alt=""><br>如果还是访问不了，那么就是防火墙的问题了，可以尝试关闭防火墙。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>类似于下图就是关着呢<br><img src="c.png" alt=""><br>配置iptables使得所有流量都允许，可以通过以下命令清除当前的规则并设置允许所有的流量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> iptables -F   <span class="comment"># 清除所有链中的规则</span></span><br><span class="line"><span class="built_in">sudo</span> iptables -X   <span class="comment"># 删除所有自定义链</span></span><br><span class="line"><span class="built_in">sudo</span> iptables -Z   <span class="comment"># 清空规则链中的计数器</span></span><br></pre></td></tr></table></figure><p>设置默认链为 ACCEPT，表示允许所有的传入、传出流量。执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> iptables -P INPUT ACCEPT    <span class="comment"># 允许所有进入流量</span></span><br><span class="line"><span class="built_in">sudo</span> iptables -P FORWARD ACCEPT  <span class="comment"># 允许所有转发流量</span></span><br><span class="line"><span class="built_in">sudo</span> iptables -P OUTPUT ACCEPT   <span class="comment"># 允许所有输出流量</span></span><br></pre></td></tr></table></figure><p>无需重启，立刻生效</p><p>默认情况下，iptables 规则在系统重启后会丢失。</p><p>根据系统版本不同，可以上网搜索对应的方法，将iptables规则保存下来，防止重启后失效。</p><h3 id="容器内部-2">容器内部</h3><p>外部设备访问 <a href="http://xn--tiq524a71i">http://宿主机</a>:映射的端口 如果是以下页面，说明连接没问题，大概率是内部服务或代理的问题</p><p><img src="d.png" alt=""></p><p>我这里是后端的jar包端口映射错了，需要改运行的端口为8080</p><p>直接用命令复制jar包到宿主机再复制到本地windows电脑下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> b634d0b5d430:/root/question-1.0.jar ./</span><br></pre></td></tr></table></figure><p>然后用解压工具打开question-1.0.jar，修改 BOOT-INF\classes\目录下的application.yml文件<br><img src="f.png" alt=""><br><img src="e.png" alt=""></p><p>再复制回docker中，重新运行jar包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> ./question-1.0.jar b634d0b5d430:/root/question-1.0.jar</span><br></pre></td></tr></table></figure><p>先查看之前运行的任务，然后结束他<br><img src="g.png" alt=""><br><img src="i.png" alt=""></p><p>结束之后重新运行，因为之前已经复制jar包到容器中，所以直接运行就OK<br>这里的  nohup command &amp;  是让jar包在后台运行<br><img src="j.png" alt=""></p><p>运行后可以看一下 nohup 的日志文件看看运行成功没有，这样是运行成功了。<br><img src="h.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CentOS 7 配置 IP 地址</title>
    <link href="https://bestflyteng.github.io/posts/57182686/"/>
    <id>https://bestflyteng.github.io/posts/57182686/</id>
    <published>2024-10-30T08:43:24.000Z</published>
    <updated>2025-06-11T09:53:56.829Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="切换至特权模式，并输入密码">切换至特权模式，并输入密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><h4 id="查看网卡信息">查看网卡信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><h4 id="修改网卡配置文件">修改网卡配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33     //进入网卡ens33的配置页面</span><br><span class="line">i        //输i进入文件编辑模式(i=insert)</span><br><span class="line">BOOTPROTO=<span class="string">&quot;dhcp&quot;</span>       //修改：将dhcp修改为static，修改后为BOOTPROTO=static</span><br><span class="line">ONBOOT=<span class="built_in">yes</span>               //修改为<span class="built_in">yes</span>, 网卡开机自启动</span><br><span class="line">Esc或Ctrl+c   //退出文件编辑模式</span><br><span class="line">:wq           //保存文件修改并退出</span><br><span class="line">service network restart     //重启网卡</span><br><span class="line">ip add  //查看网卡ens33的IP地址已经变成配置的静态IP地址</span><br><span class="line">ping xxx.xxx.xxx.xxx      //ping自己，ping网关，验证网络能通</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Linux" scheme="https://bestflyteng.github.io/categories/Linux/"/>
    
    <category term="CentOS" scheme="https://bestflyteng.github.io/categories/Linux/CentOS/"/>
    
    
    <category term="Linux" scheme="https://bestflyteng.github.io/tags/Linux/"/>
    
    <category term="CentOS" scheme="https://bestflyteng.github.io/tags/CentOS/"/>
    
    <category term="IP" scheme="https://bestflyteng.github.io/tags/IP/"/>
    
  </entry>
  
</feed>
